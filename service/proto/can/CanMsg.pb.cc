// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CanMsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CanMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace COWA {
namespace CanMsg {
class CanMsg_0x64DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x64> {
} _CanMsg_0x64_default_instance_;
class CanMsg_0x65DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x65> {
} _CanMsg_0x65_default_instance_;
class CanMsg_0x6EDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x6E> {
} _CanMsg_0x6E_default_instance_;
class CanMsg_0x6FDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x6F> {
} _CanMsg_0x6F_default_instance_;
class CanMsg_0x70DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x70> {
} _CanMsg_0x70_default_instance_;
class CanMsg_0x71DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x71> {
} _CanMsg_0x71_default_instance_;
class CanMsg_0x78DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x78> {
} _CanMsg_0x78_default_instance_;
class CanMsg_0x79DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x79> {
} _CanMsg_0x79_default_instance_;
class CanMsg_0x7BDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x7B> {
} _CanMsg_0x7B_default_instance_;
class CanMsg_0x7CDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x7C> {
} _CanMsg_0x7C_default_instance_;
class CanMsg_0x7DDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x7D> {
} _CanMsg_0x7D_default_instance_;
class CanMsg_0x63DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x63> {
} _CanMsg_0x63_default_instance_;
class CanMsg_0x62DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x62> {
} _CanMsg_0x62_default_instance_;
class CanMsg_0x61DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x61> {
} _CanMsg_0x61_default_instance_;
class CanMsg_0x5FDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x5F> {
} _CanMsg_0x5F_default_instance_;
class CanMsg_0x60DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x60> {
} _CanMsg_0x60_default_instance_;
class CanMsg_0x5EDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x5E> {
} _CanMsg_0x5E_default_instance_;
class CanMsg_0x5DDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x5D> {
} _CanMsg_0x5D_default_instance_;
class CanMsg_0x5CDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x5C> {
} _CanMsg_0x5C_default_instance_;
class CanMsg_0x511DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x511> {
} _CanMsg_0x511_default_instance_;
class CanMsg_0x512DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x512> {
} _CanMsg_0x512_default_instance_;
class CanMsg_0x08FF32F0DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x08FF32F0> {
} _CanMsg_0x08FF32F0_default_instance_;
class CanMsg_0x0CFF15EFDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x0CFF15EF> {
} _CanMsg_0x0CFF15EF_default_instance_;
class CanMsg_0x0CFF16EFDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x0CFF16EF> {
} _CanMsg_0x0CFF16EF_default_instance_;
class CanMsg_0x18FF12F7DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x18FF12F7> {
} _CanMsg_0x18FF12F7_default_instance_;
class CanMsg_0x18F412EFDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x18F412EF> {
} _CanMsg_0x18F412EF_default_instance_;
class CanMsg_0x18F413EFDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x18F413EF> {
} _CanMsg_0x18F413EF_default_instance_;
class CanMsg_0x18F433EFDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x18F433EF> {
} _CanMsg_0x18F433EF_default_instance_;
class CanMsg_0x18F411EFDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x18F411EF> {
} _CanMsg_0x18F411EF_default_instance_;
class CanMsg_0x0CFF7902DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x0CFF7902> {
} _CanMsg_0x0CFF7902_default_instance_;
class CanMsg_0x0CFF7A02DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x0CFF7A02> {
} _CanMsg_0x0CFF7A02_default_instance_;
class CanMsg_0x0CFF7B02DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x0CFF7B02> {
} _CanMsg_0x0CFF7B02_default_instance_;
class CanMsg_0x0CFF7C02DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanMsg_0x0CFF7C02> {
} _CanMsg_0x0CFF7C02_default_instance_;

namespace protobuf_CanMsg_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[33];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_leftbrush_down_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_leftbrush_up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_leftbrush_extend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_leftbrush_narrow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_rightbrush_extend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_rightbrush_narrow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_rightbrush_down_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_rightbrush_up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_tank_open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_tank_close_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_nozzle_down_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_nozzle_up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_extend_relay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_withdraw_relay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_sewage_loop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_fan_calibration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_fan_work_debug_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_fan_speed_acc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_fan_speed_min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_leftbrush_work_debug_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_rightbrushwork_debug_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_brush_speed_acc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_brush_speed_min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_spray_pump_debug_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_eps_calibration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_work_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_hppump_work_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_dust_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_tank_tilt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_tank_reset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_worklight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, pdm_work_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, curise_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, curise_acc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x64, curise_dec_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x65, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x65, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x65, vehicle_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6E, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6E, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6E, vehice_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6E, travel_distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6E, curise_off_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6E, curise_speed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, locationlight_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, biglight_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, turnleftlight_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, turnrightlight_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, worklight_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, park_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, seat_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, systemwork_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, vehicleready_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, batteryfault_normal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, batteryhvturnoff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, motoroverheat_warning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, vehiclefault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, charge_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, batteryfault_major_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, vehiclecharge_remind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x6F, software_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x70, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x70, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x70, turnleft_i_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x70, turnright_i_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x70, workflag_i_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x70, trunonflag_i_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x70, lowbeam_i_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x70, small_light_i_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x70, autodrive_i_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x70, emergencyflash_i_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x70, stop_i_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x71, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x71, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x71, brakeoil_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x71, box_up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x71, box_dowm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x71, box_arrive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x71, chenggan_arrive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x71, eban_switch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x71, boxdoor_switch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x71, leftbrush_arrive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x71, rightbrush_arrive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x71, leftbrush_open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x71, leftbrush_close_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x71, rightbrush_open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x71, rightbrush_close_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x71, dustbin_returnswitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x71, waterline_show_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x78, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x78, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x78, turnleftlight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x78, turnrightlight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x78, lowbeam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x78, worklight_relay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x78, small_light_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x78, reversing_light_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x78, brake_light_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x78, reversing_buzzer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, boxdoor_open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, boxdoor_close_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, leftbrush_up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, leftbrush_down_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, leftbrush_open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, leftbrush_close_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, rightbrush_up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, rightbrush_down_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, rightbrush_open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, rightbrush_close_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, eban_switch_open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, eban_switch_close_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, xizwitch_up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, xizwitch_down_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, dustbin_up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, dustbin_down_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, lvwaterroad_relay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, sewagecyclevalve_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x79, delaycutdown_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7B, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7B, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7B, work_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, water_line_i_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, qinbengan_o_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, cepengan_o_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, zuojiapen_o_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, youjiapen_o_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, penqiang_o_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, yiliufa_o_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, pengan_up_o_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, pengan_down_o_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, pengan_left_o_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, pengan_right_o_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, qifa_o_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, water_low_warning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, water_pump_canerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, extendmodule_canerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7C, icu_canerror_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7D, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x7D, washwork_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x63, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x63, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x63, out_enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x63, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x63, in_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x63, out_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x63, in_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x63, out_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x63, dcdc_temperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x63, over_temperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x63, in_over_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x63, out_over_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x63, in_over_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x63, in_less_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x63, out_over_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x63, out_less_voltage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x62, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x62, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x62, bms_canerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x62, mcu_canerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x62, ehb_canerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x62, epb_canerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x62, eps_canerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x62, dc48v_canerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x62, ac_canerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x62, adu_canerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x62, icu_canerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x62, dc12v_canerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x62, gps_canerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x62, fji_canerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x62, wp_canerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x62, spl_canerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x62, spr_canerror_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x61, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x61, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x61, ehb_worksts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x61, parkreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x61, brakests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x61, faultlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x61, brakepress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x61, pedal_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x61, pistondisplacement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x61, targetpress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5F, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5F, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5F, faultcode1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5F, faultcode2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5F, faultcode3_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x60, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x60, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x60, parklight_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x60, faultlight_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x60, switch_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x60, brake_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x60, system_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x60, fault_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5E, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5E, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5E, compressor_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5E, out_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5E, compressor_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5E, faultcode_main_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5E, faultcode_son_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5D, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5D, work_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5D, autocmd_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5D, targetangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5D, currentangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5D, wheelpalstance_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5C, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5C, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5C, out_torque_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5C, target_torque_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x5C, faultcode_92_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x511, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x511, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x511, spr_main_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x511, spr_currentmotcurrent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x511, spr_enable_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x511, spr_wheel_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x511, spr_mot_temperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x511, spr_motcurrentspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x511, spr_overcurrent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x511, spr_overvoltage511_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x511, spr_overtemperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x511, spr_lochedrotor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x511, spr_hallsignalerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x511, spr_motfualt_itself_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x512, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x512, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x512, spl_main_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x512, spl_currentmotcurrent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x512, spl_enable_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x512, spl_wheel_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x512, spl_mot_temperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x512, spl_motcurrentspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x512, spl_overcurrent511_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x512, spl_overvoltage511_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x512, spl_overtemperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x512, spl_lochedrotor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x512, spl_hallsignalerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x512, spl_motfualt_itself_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, motspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, mottorque_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, rotarywarning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, overcurrentfault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, powerlimtwarning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, mcutempwarning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, mottempwarning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, intepass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, busbarovervoltfault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, busbarlessvoltfault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, gearsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, backbrake_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, accpdlsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, speedcontrolvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, generalfaultwarning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, busbardischarg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, brakeactive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, motspeedvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, gearwarning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, holdreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x08FF32F0, apdlpercent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF15EF, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF15EF, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF15EF, motspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF15EF, motbusbarvolt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF15EF, mottemp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF15EF, igbttemp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF15EF, mot_current_ac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF15EF, motfaultcodesign_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF16EF, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF16EF, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF16EF, mcuintsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF16EF, mcumodelsts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18FF12F7, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18FF12F7, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18FF12F7, outvolt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18FF12F7, outcurrent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18FF12F7, dcsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18FF12F7, outcutdownsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18FF12F7, incutdownsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18FF12F7, faultlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18FF12F7, radiatortemp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, battovertempfault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, insulationfault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, celllessvoltwarning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, cellovervoltwarning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, battlesselectwarning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, positiverelayadhesion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, ptcrelayadhesion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, sohwarning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, positionrelaysts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, ptcrelaysts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, battvoltimbalance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, dischgovercurrent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, chgovercurrent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, itselfcanerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, battgenerallessvolt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, battgeneralovervolt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, bmshardwarefault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, canerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, ccsignconnetsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, prechargests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, bmssts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, backchgenb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, warmmodel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, balancests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, soclow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, currentsensorfault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, tempsensorfault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, negativerelayadhesion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, prechgrelaysts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, negativerelaysts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, dcchgpositiverelaysts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, dcchggunovertempfault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, cellcollectlinecutfault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, prechgrelayadhesion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, dcchgpositiverelayadhesion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, wakeuptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, batttempimbalancefault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, battlesstempfault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F412EF, warmsts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F413EF, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F413EF, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F413EF, generalvolt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F413EF, generalcurrent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F413EF, soc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F413EF, battserialdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F413EF, cellvoltsensorfault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F413EF, generalvoltsensorfault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F413EF, less12vvolt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F413EF, over12vvolt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F433EF, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F433EF, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F433EF, battmaxtemp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F433EF, battmaxtempcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F433EF, battmintemp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F433EF, battmintempcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F433EF, dcchggunbasetemp0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F433EF, dcchggunbasetemp1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F433EF, averagetemp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F411EF, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F411EF, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F411EF, systemfaultlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F411EF, hvlock_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F411EF, powerdownreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F411EF, bmsmaxdischgpower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F411EF, bmsmaxchgpower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F411EF, dcchgvoltdemand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F411EF, dcchgcurrentdemand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x18F411EF, systemstscode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7902, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7902, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7902, faultlevl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7902, modsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7902, ensts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7902, precharge_allow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7902, dirsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7902, acttor_valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7902, actspd_valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7902, acttor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7902, actspd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7A02, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7A02, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7A02, dcvolt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7A02, dccur_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7A02, accur_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7B02, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7B02, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7B02, motorminavator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7B02, motormaxavator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7B02, motorigbttemp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7B02, mtemp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7B02, ctemp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, movspdsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, mblocksts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, movtempsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, movcursts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, mshrsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, mshrgrdsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, covtempsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, cauxbatsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, prechasts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, igbtmodsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, igbtovtempsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, igbtovcursts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, covvoltsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, clowvoltsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, igbttempsensts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, canfault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, mtempsensts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, ctempsensts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, cvoltsensts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, ccursensts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, accursensts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, ctranfaultsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanMsg_0x0CFF7C02, mcutoffsts_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(CanMsg_0x64)},
  { 41, -1, sizeof(CanMsg_0x65)},
  { 48, -1, sizeof(CanMsg_0x6E)},
  { 58, -1, sizeof(CanMsg_0x6F)},
  { 81, -1, sizeof(CanMsg_0x70)},
  { 96, -1, sizeof(CanMsg_0x71)},
  { 117, -1, sizeof(CanMsg_0x78)},
  { 131, -1, sizeof(CanMsg_0x79)},
  { 156, -1, sizeof(CanMsg_0x7B)},
  { 163, -1, sizeof(CanMsg_0x7C)},
  { 185, -1, sizeof(CanMsg_0x7D)},
  { 192, -1, sizeof(CanMsg_0x63)},
  { 212, -1, sizeof(CanMsg_0x62)},
  { 233, -1, sizeof(CanMsg_0x61)},
  { 247, -1, sizeof(CanMsg_0x5F)},
  { 256, -1, sizeof(CanMsg_0x60)},
  { 268, -1, sizeof(CanMsg_0x5E)},
  { 279, -1, sizeof(CanMsg_0x5D)},
  { 290, -1, sizeof(CanMsg_0x5C)},
  { 299, -1, sizeof(CanMsg_0x511)},
  { 317, -1, sizeof(CanMsg_0x512)},
  { 335, -1, sizeof(CanMsg_0x08FF32F0)},
  { 362, -1, sizeof(CanMsg_0x0CFF15EF)},
  { 374, -1, sizeof(CanMsg_0x0CFF16EF)},
  { 382, -1, sizeof(CanMsg_0x18FF12F7)},
  { 395, -1, sizeof(CanMsg_0x18F412EF)},
  { 440, -1, sizeof(CanMsg_0x18F413EF)},
  { 454, -1, sizeof(CanMsg_0x18F433EF)},
  { 467, -1, sizeof(CanMsg_0x18F411EF)},
  { 481, -1, sizeof(CanMsg_0x0CFF7902)},
  { 496, -1, sizeof(CanMsg_0x0CFF7A02)},
  { 505, -1, sizeof(CanMsg_0x0CFF7B02)},
  { 516, -1, sizeof(CanMsg_0x0CFF7C02)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x65_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x6E_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x6F_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x70_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x71_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x78_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x79_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x7B_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x7C_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x7D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x63_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x62_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x61_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x5F_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x60_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x5E_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x5D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x5C_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x511_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x512_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x08FF32F0_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x0CFF15EF_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x0CFF16EF_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x18FF12F7_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x18F412EF_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x18F413EF_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x18F433EF_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x18F411EF_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x0CFF7902_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x0CFF7A02_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x0CFF7B02_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanMsg_0x0CFF7C02_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "CanMsg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 33);
}

}  // namespace

void TableStruct::Shutdown() {
  _CanMsg_0x64_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CanMsg_0x65_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CanMsg_0x6E_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _CanMsg_0x6F_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _CanMsg_0x70_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _CanMsg_0x71_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _CanMsg_0x78_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _CanMsg_0x79_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _CanMsg_0x7B_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _CanMsg_0x7C_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _CanMsg_0x7D_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _CanMsg_0x63_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _CanMsg_0x62_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _CanMsg_0x61_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _CanMsg_0x5F_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _CanMsg_0x60_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _CanMsg_0x5E_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _CanMsg_0x5D_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _CanMsg_0x5C_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _CanMsg_0x511_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _CanMsg_0x512_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _CanMsg_0x08FF32F0_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _CanMsg_0x0CFF15EF_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _CanMsg_0x0CFF16EF_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _CanMsg_0x18FF12F7_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _CanMsg_0x18F412EF_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _CanMsg_0x18F413EF_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _CanMsg_0x18F433EF_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _CanMsg_0x18F411EF_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _CanMsg_0x0CFF7902_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _CanMsg_0x0CFF7A02_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _CanMsg_0x0CFF7B02_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _CanMsg_0x0CFF7C02_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _CanMsg_0x64_default_instance_.DefaultConstruct();
  _CanMsg_0x65_default_instance_.DefaultConstruct();
  _CanMsg_0x6E_default_instance_.DefaultConstruct();
  _CanMsg_0x6F_default_instance_.DefaultConstruct();
  _CanMsg_0x70_default_instance_.DefaultConstruct();
  _CanMsg_0x71_default_instance_.DefaultConstruct();
  _CanMsg_0x78_default_instance_.DefaultConstruct();
  _CanMsg_0x79_default_instance_.DefaultConstruct();
  _CanMsg_0x7B_default_instance_.DefaultConstruct();
  _CanMsg_0x7C_default_instance_.DefaultConstruct();
  _CanMsg_0x7D_default_instance_.DefaultConstruct();
  _CanMsg_0x63_default_instance_.DefaultConstruct();
  _CanMsg_0x62_default_instance_.DefaultConstruct();
  _CanMsg_0x61_default_instance_.DefaultConstruct();
  _CanMsg_0x5F_default_instance_.DefaultConstruct();
  _CanMsg_0x60_default_instance_.DefaultConstruct();
  _CanMsg_0x5E_default_instance_.DefaultConstruct();
  _CanMsg_0x5D_default_instance_.DefaultConstruct();
  _CanMsg_0x5C_default_instance_.DefaultConstruct();
  _CanMsg_0x511_default_instance_.DefaultConstruct();
  _CanMsg_0x512_default_instance_.DefaultConstruct();
  _CanMsg_0x08FF32F0_default_instance_.DefaultConstruct();
  _CanMsg_0x0CFF15EF_default_instance_.DefaultConstruct();
  _CanMsg_0x0CFF16EF_default_instance_.DefaultConstruct();
  _CanMsg_0x18FF12F7_default_instance_.DefaultConstruct();
  _CanMsg_0x18F412EF_default_instance_.DefaultConstruct();
  _CanMsg_0x18F413EF_default_instance_.DefaultConstruct();
  _CanMsg_0x18F433EF_default_instance_.DefaultConstruct();
  _CanMsg_0x18F411EF_default_instance_.DefaultConstruct();
  _CanMsg_0x0CFF7902_default_instance_.DefaultConstruct();
  _CanMsg_0x0CFF7A02_default_instance_.DefaultConstruct();
  _CanMsg_0x0CFF7B02_default_instance_.DefaultConstruct();
  _CanMsg_0x0CFF7C02_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014CanMsg.proto\022\013COWA.CanMsg\"\277\007\n\013CanMsg_0"
      "x64\022\017\n\007isValid\030\001 \001(\010\022\032\n\022PDM_leftbrush_do"
      "wn\030\002 \001(\r\022\030\n\020PDM_leftbrush_up\030\003 \001(\r\022\034\n\024PD"
      "M_leftbrush_extend\030\004 \001(\r\022\034\n\024PDM_leftbrus"
      "h_narrow\030\005 \001(\r\022\035\n\025PDM_rightbrush_extend\030"
      "\006 \001(\r\022\035\n\025PDM_rightbrush_narrow\030\007 \001(\r\022\033\n\023"
      "PDM_rightbrush_down\030\010 \001(\r\022\031\n\021PDM_rightbr"
      "ush_up\030\t \001(\r\022\025\n\rPDM_tank_open\030\n \001(\r\022\026\n\016P"
      "DM_tank_close\030\013 \001(\r\022\027\n\017PDM_nozzle_down\030\014"
      " \001(\r\022\025\n\rPDM_nozzle_up\030\r \001(\r\022\030\n\020PDM_exten"
      "d_relay\030\016 \001(\r\022\032\n\022PDM_withdraw_relay\030\017 \001("
      "\r\022\027\n\017PDM_sewage_loop\030\020 \001(\r\022\033\n\023PDM_fan_ca"
      "libration\030\021 \001(\r\022\032\n\022PDM_fan_work_debug\030\022 "
      "\001(\r\022\031\n\021PDM_fan_speed_acc\030\023 \001(\r\022\031\n\021PDM_fa"
      "n_speed_min\030\024 \001(\r\022 \n\030PDM_leftbrush_work_"
      "debug\030\025 \001(\r\022 \n\030PDM_rightbrushwork_debug\030"
      "\026 \001(\r\022\033\n\023PDM_brush_speed_acc\030\027 \001(\r\022\033\n\023PD"
      "M_brush_speed_min\030\030 \001(\r\022\034\n\024PDM_spray_pum"
      "p_debug\030\031 \001(\r\022\033\n\023PDM_EPS_calibration\030\032 \001"
      "(\r\022\025\n\rPDM_work_mode\030\033 \001(\r\022\027\n\017PDM_HPpump_"
      "work\030\034 \001(\r\022\025\n\rPDM_dust_mode\030\035 \001(\r\022\025\n\rPDM"
      "_tank_tilt\030\036 \001(\r\022\026\n\016PDM_tank_reset\030\037 \001(\r"
      "\022\025\n\rPDM_worklight\030  \001(\r\022\026\n\016PDM_work_star"
      "t\030! \001(\r\022\024\n\014Curise_start\030\" \001(\r\022\022\n\nCurise_"
      "acc\030# \001(\r\022\022\n\nCurise_dec\030$ \001(\r\"4\n\013CanMsg_"
      "0x65\022\017\n\007isValid\030\001 \001(\010\022\024\n\014Vehicle_Code\030\002 "
      "\001(\r\"w\n\013CanMsg_0x6E\022\017\n\007isValid\030\001 \001(\010\022\024\n\014v"
      "ehice_speed\030\002 \001(\r\022\027\n\017travel_distance\030\003 \001"
      "(\r\022\022\n\nCurise_Off\030\004 \001(\r\022\024\n\014Curise_speed\030\005"
      " \001(\r\"\303\003\n\013CanMsg_0x6F\022\017\n\007isValid\030\001 \001(\010\022\031\n"
      "\021LocationLight_sts\030\002 \001(\r\022\024\n\014BigLight_sts"
      "\030\003 \001(\r\022\031\n\021TurnLeftLight_sts\030\004 \001(\r\022\032\n\022Tur"
      "nRightLight_sts\030\005 \001(\r\022\025\n\rWorkLight_sts\030\006"
      " \001(\r\022\020\n\010Park_sts\030\007 \001(\r\022\020\n\010seat_sts\030\010 \001(\r"
      "\022\026\n\016SystemWork_sts\030\t \001(\r\022\024\n\014vehicleready"
      "\030\n \001(\r\022\033\n\023BatteryFault_normal\030\013 \001(\r\022\030\n\020B"
      "atteryHVTurnOFF\030\014 \001(\r\022\035\n\025MotorOverheat_w"
      "arning\030\r \001(\r\022\024\n\014VehicleFault\030\016 \001(\r\022\022\n\nCh"
      "arge_sts\030\017 \001(\r\022\032\n\022BatteryFault_major\030\020 \001"
      "(\r\022\034\n\024VehicleCharge_remind\030\021 \001(\r\022\030\n\020soft"
      "ware_version\030\022 \001(\r\"\332\001\n\013CanMsg_0x70\022\017\n\007is"
      "Valid\030\001 \001(\010\022\022\n\nTurnLeft_I\030\002 \001(\r\022\023\n\013TurnR"
      "ight_I\030\003 \001(\r\022\022\n\nworkFlag_I\030\004 \001(\r\022\024\n\014Trun"
      "OnFlag_I\030\005 \001(\r\022\021\n\tLowBeam_I\030\006 \001(\r\022\025\n\rsma"
      "ll_light_I\030\007 \001(\r\022\023\n\013AutoDrive_I\030\010 \001(\r\022\030\n"
      "\020EmergencyFlash_I\030\t \001(\r\022\016\n\006Stop_I\030\n \001(\r\""
      "\200\003\n\013CanMsg_0x71\022\017\n\007isValid\030\001 \001(\010\022\025\n\rBrak"
      "eOil_line\030\002 \001(\r\022\016\n\006Box_up\030\003 \001(\r\022\020\n\010Box_d"
      "owm\030\004 \001(\r\022\022\n\nBox_Arrive\030\005 \001(\r\022\027\n\017ChengGa"
      "n_Arrive\030\006 \001(\r\022\023\n\013Eban_switch\030\007 \001(\r\022\026\n\016B"
      "oxDoor_switch\030\010 \001(\r\022\030\n\020LeftBrush_arrive\030"
      "\t \001(\r\022\031\n\021RightBrush_arrive\030\n \001(\r\022\026\n\016Left"
      "Brush_open\030\013 \001(\r\022\027\n\017LeftBrush_close\030\014 \001("
      "\r\022\027\n\017RightBrush_open\030\r \001(\r\022\030\n\020RightBrush"
      "_close\030\016 \001(\r\022\034\n\024dustbin_returnSwitch\030\017 \001"
      "(\r\022\026\n\016WaterLine_show\030\020 \001(\r\"\324\001\n\013CanMsg_0x"
      "78\022\017\n\007isValid\030\001 \001(\010\022\025\n\rTurnLeftLight\030\002 \001"
      "(\r\022\026\n\016TurnRightLight\030\003 \001(\r\022\017\n\007LowBeam\030\004 "
      "\001(\r\022\027\n\017WorkLight_relay\030\005 \001(\r\022\023\n\013small_li"
      "ght\030\006 \001(\r\022\027\n\017reversing_light\030\007 \001(\r\022\023\n\013br"
      "ake_light\030\010 \001(\r\022\030\n\020Reversing_buzzer\030\t \001("
      "\r\"\343\003\n\013CanMsg_0x79\022\017\n\007isValid\030\001 \001(\010\022\024\n\014Bo"
      "xDoor_open\030\002 \001(\r\022\025\n\rBoxDoor_close\030\003 \001(\r\022"
      "\024\n\014LeftBrush_up\030\004 \001(\r\022\026\n\016LeftBrush_down\030"
      "\005 \001(\r\022\026\n\016LeftBrush_open\030\006 \001(\r\022\027\n\017LeftBru"
      "sh_close\030\007 \001(\r\022\025\n\rRightBrush_up\030\010 \001(\r\022\027\n"
      "\017RightBrush_down\030\t \001(\r\022\027\n\017RightBrush_ope"
      "n\030\n \001(\r\022\030\n\020RightBrush_close\030\013 \001(\r\022\030\n\020Eba"
      "n_switch_open\030\014 \001(\r\022\031\n\021Eban_switch_close"
      "\030\r \001(\r\022\023\n\013XiZwitch_up\030\016 \001(\r\022\025\n\rXiZwitch_"
      "down\030\017 \001(\r\022\022\n\ndustbin_up\030\020 \001(\r\022\024\n\014dustbi"
      "n_down\030\021 \001(\r\022\031\n\021LVWaterRoad_relay\030\022 \001(\r\022"
      "\030\n\020sewagecyclevalve\030\023 \001(\r\022\024\n\014delayCutDow"
      "n\030\024 \001(\r\"1\n\013CanMsg_0x7B\022\017\n\007isValid\030\001 \001(\010\022"
      "\021\n\twork_time\030\002 \001(\r\"\206\003\n\013CanMsg_0x7C\022\017\n\007is"
      "Valid\030\001 \001(\010\022\024\n\014water_line_I\030\002 \001(\r\022\023\n\013qin"
      "bengan_O\030\003 \001(\r\022\022\n\ncepengan_O\030\004 \001(\r\022\023\n\013zu"
      "ojiapen_O\030\005 \001(\r\022\023\n\013youjiapen_O\030\006 \001(\r\022\022\n\n"
      "penqiang_O\030\007 \001(\r\022\021\n\tyiliufa_O\030\010 \001(\r\022\023\n\013p"
      "engan_Up_O\030\t \001(\r\022\025\n\rpengan_down_O\030\n \001(\r\022"
      "\025\n\rpengan_Left_O\030\013 \001(\r\022\026\n\016pengan_Right_O"
      "\030\014 \001(\r\022\016\n\006qifa_O\030\r \001(\r\022\031\n\021water_low_warn"
      "ing\030\016 \001(\r\022\033\n\023water_pump_CANerror\030\017 \001(\r\022\035"
      "\n\025ExtendModule_CANerror\030\020 \001(\r\022\024\n\014ICU_CAN"
      "error\030\021 \001(\r\"5\n\013CanMsg_0x7D\022\017\n\007isValid\030\001 "
      "\001(\010\022\025\n\rwashWork_time\030\002 \001(\r\"\340\002\n\013CanMsg_0x"
      "63\022\017\n\007isValid\030\001 \001(\010\022\022\n\nout_enable\030\002 \001(\r\022"
      "\r\n\005state\030\003 \001(\r\022\022\n\nIN_voltage\030\004 \001(\r\022\023\n\013ou"
      "t_voltage\030\005 \001(\r\022\022\n\nIN_current\030\006 \001(\r\022\023\n\013o"
      "ut_current\030\007 \001(\r\022\030\n\020DCDC_temperature\030\010 \001"
      "(\r\022\030\n\020over_temperature\030\t \001(\r\022\027\n\017in_over_"
      "current\030\n \001(\r\022\030\n\020out_over_current\030\013 \001(\r\022"
      "\027\n\017in_over_voltage\030\014 \001(\r\022\027\n\017in_less_volt"
      "age\030\r \001(\r\022\030\n\020out_over_voltage\030\016 \001(\r\022\030\n\020o"
      "ut_less_voltage\030\017 \001(\r\"\352\002\n\013CanMsg_0x62\022\017\n"
      "\007isValid\030\001 \001(\010\022\024\n\014BMS_CANerror\030\002 \001(\r\022\024\n\014"
      "MCU_CANerror\030\003 \001(\r\022\024\n\014EHB_CANerror\030\004 \001(\r"
      "\022\024\n\014EPB_CANerror\030\005 \001(\r\022\024\n\014EPS_CANerror\030\006"
      " \001(\r\022\026\n\016DC48V_CANerror\030\007 \001(\r\022\023\n\013AC_CANer"
      "ror\030\010 \001(\r\022\024\n\014ADU_CANerror\030\t \001(\r\022\024\n\014ICU_C"
      "ANerror\030\n \001(\r\022\026\n\016DC12V_CANerror\030\013 \001(\r\022\024\n"
      "\014GPS_CANerror\030\014 \001(\r\022\024\n\014FJI_CANerror\030\r \001("
      "\r\022\023\n\013WP_CANerror\030\016 \001(\r\022\024\n\014SPL_CANerror\030\017"
      " \001(\r\022\024\n\014SPR_CANerror\030\020 \001(\r\"\306\001\n\013CanMsg_0x"
      "61\022\017\n\007isValid\030\001 \001(\010\022\023\n\013EHB_WorkSts\030\002 \001(\r"
      "\022\017\n\007ParkReq\030\003 \001(\r\022\020\n\010BrakeSts\030\004 \001(\r\022\022\n\nf"
      "aultLevel\030\005 \001(\r\022\022\n\nBrakePress\030\006 \001(\r\022\025\n\rp"
      "edal_percent\030\007 \001(\r\022\032\n\022PistonDisplacement"
      "\030\010 \001(\r\022\023\n\013targetPress\030\t \001(\r\"Z\n\013CanMsg_0x"
      "5F\022\017\n\007isValid\030\001 \001(\010\022\022\n\nfaultCode1\030\002 \001(\r\022"
      "\022\n\nfaultCode2\030\003 \001(\r\022\022\n\nfaultCode3\030\004 \001(\r\""
      "\237\001\n\013CanMsg_0x60\022\017\n\007isValid\030\001 \001(\010\022\025\n\rPark"
      "light_sts\030\002 \001(\r\022\026\n\016faultlight_sts\030\003 \001(\r\022"
      "\022\n\nswitch_sts\030\004 \001(\r\022\021\n\tbrake_sts\030\005 \001(\r\022\022"
      "\n\nsystem_sts\030\006 \001(\r\022\025\n\rfault_message\030\007 \001("
      "\r\"\222\001\n\013CanMsg_0x5E\022\017\n\007isValid\030\001 \001(\010\022\030\n\020co"
      "mpressor_speed\030\002 \001(\r\022\021\n\tout_power\030\003 \001(\r\022"
      "\026\n\016compressor_sts\030\004 \001(\r\022\026\n\016faultCode_mai"
      "n\030\005 \001(\r\022\025\n\rfaultCode_son\030\006 \001(\r\"\214\001\n\013CanMs"
      "g_0x5D\022\017\n\007isValid\030\001 \001(\010\022\022\n\nwork_model\030\002 "
      "\001(\r\022\025\n\rautoCMD_model\030\003 \001(\r\022\023\n\013targetangl"
      "e\030\004 \001(\r\022\024\n\014currentangle\030\005 \001(\r\022\026\n\016wheelpa"
      "lstance\030\006 \001(\r\"_\n\013CanMsg_0x5C\022\017\n\007isValid\030"
      "\001 \001(\010\022\022\n\nout_torque\030\002 \001(\r\022\025\n\rtarget_torq"
      "ue\030\003 \001(\r\022\024\n\014faultCode_92\030\004 \001(\r\"\346\002\n\014CanMs"
      "g_0x511\022\017\n\007isValid\030\001 \001(\010\022\030\n\020SPR_main_vol"
      "tage\030\002 \001(\r\022\035\n\025SPR_currentmotcurrent\030\003 \001("
      "\r\022\026\n\016SPR_enable_sts\030\004 \001(\r\022\025\n\rSPR_wheel_s"
      "ts\030\005 \001(\r\022\033\n\023SPR_mot_temperature\030\006 \001(\r\022\033\n"
      "\023SPR_motcurrentspeed\030\007 \001(\r\022\027\n\017SPR_overcu"
      "rrent\030\010 \001(\r\022\032\n\022SPR_overvoltage511\030\t \001(\r\022"
      "\033\n\023SPR_overtemperature\030\n \001(\r\022\027\n\017SPR_loch"
      "edrotor\030\013 \001(\r\022\033\n\023SPR_Hallsignalerror\030\014 \001"
      "(\r\022\033\n\023SPR_motfualt_itself\030\r \001(\r\"\351\002\n\014CanM"
      "sg_0x512\022\017\n\007isValid\030\001 \001(\010\022\030\n\020SPL_main_vo"
      "ltage\030\002 \001(\r\022\035\n\025SPL_currentmotcurrent\030\003 \001"
      "(\r\022\026\n\016SPL_enable_sts\030\004 \001(\r\022\025\n\rSPL_wheel_"
      "sts\030\005 \001(\r\022\033\n\023SPL_mot_temperature\030\006 \001(\r\022\033"
      "\n\023SPL_motcurrentspeed\030\007 \001(\r\022\032\n\022SPL_overc"
      "urrent511\030\010 \001(\r\022\032\n\022SPL_overvoltage511\030\t "
      "\001(\r\022\033\n\023SPL_overtemperature\030\n \001(\r\022\027\n\017SPL_"
      "lochedrotor\030\013 \001(\r\022\033\n\023SPL_Hallsignalerror"
      "\030\014 \001(\r\022\033\n\023SPL_motfualt_itself\030\r \001(\r\"\376\003\n\021"
      "CanMsg_0x08FF32F0\022\017\n\007isValid\030\001 \001(\010\022\020\n\010Mo"
      "tSpeed\030\002 \001(\r\022\021\n\tMotTorque\030\003 \001(\r\022\025\n\rRotar"
      "yWarning\030\004 \001(\r\022\030\n\020OverCurrentFault\030\005 \001(\r"
      "\022\030\n\020PowerLimtWarning\030\006 \001(\r\022\026\n\016MCUTempWar"
      "ning\030\007 \001(\r\022\026\n\016MotTempWarning\030\010 \001(\r\022\020\n\010In"
      "tePass\030\t \001(\r\022\033\n\023BusbarOverVoltFault\030\n \001("
      "\r\022\033\n\023BusbarLessVoltFault\030\013 \001(\r\022\017\n\007GearSt"
      "s\030\014 \001(\r\022\021\n\tBackBrake\030\r \001(\r\022\021\n\tAccPdlSts\030"
      "\016 \001(\r\022\031\n\021SpeedControlValid\030\017 \001(\r\022\033\n\023Gene"
      "ralFaultWarning\030\020 \001(\r\022\026\n\016Busbardischarg\030"
      "\021 \001(\r\022\023\n\013BrakeActive\030\022 \001(\r\022\025\n\rMotSpeedVa"
      "lid\030\023 \001(\r\022\023\n\013GearWarning\030\024 \001(\r\022\017\n\007HoldRe"
      "q\030\025 \001(\r\022\023\n\013ApdlPercent\030\026 \001(\r\"\242\001\n\021CanMsg_"
      "0x0CFF15EF\022\017\n\007isValid\030\001 \001(\010\022\020\n\010MOTspeed\030"
      "\002 \001(\r\022\025\n\rMOTBusbarVolt\030\003 \001(\r\022\017\n\007MotTemp\030"
      "\004 \001(\r\022\020\n\010IGBTTemp\030\005 \001(\r\022\026\n\016MOT_current_A"
      "C\030\006 \001(\r\022\030\n\020MOTFaultCodeSign\030\007 \001(\r\"L\n\021Can"
      "Msg_0x0CFF16EF\022\017\n\007isValid\030\001 \001(\010\022\021\n\tMCUin"
      "tSts\030\002 \001(\r\022\023\n\013MCUModelSts\030\003 \001(\r\"\257\001\n\021CanM"
      "sg_0x18FF12F7\022\017\n\007isValid\030\001 \001(\010\022\017\n\007OUTVol"
      "t\030\002 \001(\r\022\022\n\nOUTCurrent\030\003 \001(\r\022\r\n\005DCSts\030\004 \001"
      "(\r\022\025\n\rOUTCutDownSts\030\005 \001(\r\022\024\n\014INCutDownSt"
      "s\030\006 \001(\r\022\022\n\nFaultLevel\030\007 \001(\r\022\024\n\014RadiatorT"
      "emp\030\010 \001(\r\"\210\010\n\021CanMsg_0x18F412EF\022\017\n\007isVal"
      "id\030\001 \001(\010\022\031\n\021BattOverTempFault\030\002 \001(\r\022\027\n\017I"
      "nsulationFault\030\003 \001(\r\022\033\n\023CellLessVoltWarn"
      "ing\030\004 \001(\r\022\033\n\023CellOverVoltWarning\030\005 \001(\r\022\034"
      "\n\024BattLessElectWarning\030\006 \001(\r\022\035\n\025positive"
      "RelayAdhesion\030\007 \001(\r\022\030\n\020PTCRelayAdhesion\030"
      "\010 \001(\r\022\022\n\nSOHWarning\030\t \001(\r\022\030\n\020PositionRel"
      "aySts\030\n \001(\r\022\023\n\013PTCRelaySts\030\013 \001(\r\022\031\n\021Batt"
      "VoltImbalance\030\014 \001(\r\022\031\n\021DischgOverCurrent"
      "\030\r \001(\r\022\026\n\016ChgOverCurrent\030\016 \001(\r\022\026\n\016Itself"
      "CANerror\030\017 \001(\r\022\033\n\023BattGeneralLessVolt\030\020 "
      "\001(\r\022\033\n\023BattGeneralOverVolt\030\021 \001(\r\022\030\n\020BMSH"
      "ardwareFault\030\022 \001(\r\022\020\n\010CANerror\030\023 \001(\r\022\027\n\017"
      "CCsignConnetSts\030\024 \001(\r\022\024\n\014PrechargeSts\030\025 "
      "\001(\r\022\016\n\006BMSsts\030\026 \001(\r\022\022\n\nBackChgEnb\030\027 \001(\r\022"
      "\021\n\tWarmModel\030\030 \001(\r\022\022\n\nBalanceSts\030\031 \001(\r\022\016"
      "\n\006SOCLow\030\032 \001(\r\022\032\n\022CurrentSensorFault\030\033 \001"
      "(\r\022\027\n\017TempSensorFault\030\034 \001(\r\022\035\n\025NegativeR"
      "elayAdhesion\030\035 \001(\r\022\026\n\016PrechgRelaySts\030\036 \001"
      "(\r\022\030\n\020NegativeRelaySts\030\037 \001(\r\022\035\n\025DCchgPos"
      "itiveRelaySts\030  \001(\r\022\035\n\025DCchgGunOverTempF"
      "ault\030! \001(\r\022\037\n\027CellCollectLineCutFault\030\" "
      "\001(\r\022\033\n\023PrechgRelayAdhesion\030# \001(\r\022\"\n\032DCch"
      "gPositiveRelayAdhesion\030$ \001(\r\022\022\n\nWakeUpTy"
      "pe\030% \001(\r\022\036\n\026BattTempImbalanceFault\030& \001(\r"
      "\022\031\n\021BattLessTempFault\030\' \001(\r\022\017\n\007WarmSts\030("
      " \001(\r\"\335\001\n\021CanMsg_0x18F413EF\022\017\n\007isValid\030\001 "
      "\001(\010\022\023\n\013GeneralVolt\030\002 \001(\r\022\026\n\016GeneralCurre"
      "nt\030\003 \001(\r\022\013\n\003SOC\030\004 \001(\r\022\026\n\016BattSerialData\030"
      "\005 \001(\r\022\033\n\023CellVoltSensorFault\030\006 \001(\r\022\036\n\026Ge"
      "neralVoltSensorFault\030\007 \001(\r\022\023\n\013Less12VVol"
      "t\030\010 \001(\r\022\023\n\013Over12VVolt\030\t \001(\r\"\313\001\n\021CanMsg_"
      "0x18F433EF\022\017\n\007isValid\030\001 \001(\010\022\023\n\013BattMaxTe"
      "mp\030\002 \001(\r\022\027\n\017BattMaxTempCode\030\003 \001(\r\022\023\n\013Bat"
      "tMinTemp\030\004 \001(\r\022\027\n\017BattMinTempCode\030\005 \001(\r\022"
      "\031\n\021DCchgGunBaseTemp0\030\006 \001(\r\022\031\n\021DCchgGunBa"
      "seTemp1\030\007 \001(\r\022\023\n\013AverageTemp\030\010 \001(\r\"\343\001\n\021C"
      "anMsg_0x18F411EF\022\017\n\007isValid\030\001 \001(\010\022\030\n\020Sys"
      "temFaultLevel\030\002 \001(\r\022\016\n\006HVlock\030\003 \001(\r\022\024\n\014P"
      "owerDownReq\030\004 \001(\r\022\031\n\021BMSMaxDischgPower\030\005"
      " \001(\r\022\026\n\016BMSMaxChgPower\030\006 \001(\r\022\027\n\017DCchgVol"
      "tDemand\030\007 \001(\r\022\032\n\022DCchgCurrentDemand\030\010 \001("
      "\r\022\025\n\rSystemStsCode\030\t \001(\r\"\313\001\n\021CanMsg_0x0C"
      "FF7902\022\017\n\007isValid\030\001 \001(\010\022\021\n\tFaultLevl\030\002 \001"
      "(\r\022\016\n\006ModSts\030\003 \001(\r\022\r\n\005EnSts\030\004 \001(\r\022\027\n\017Pre"
      "charge_Allow\030\005 \001(\r\022\016\n\006DirSts\030\006 \001(\r\022\024\n\014Ac"
      "tTor_Valid\030\007 \001(\r\022\024\n\014ActSpd_Valid\030\010 \001(\r\022\016"
      "\n\006ActTor\030\t \001(\r\022\016\n\006ActSpd\030\n \001(\r\"R\n\021CanMsg"
      "_0x0CFF7A02\022\017\n\007isValid\030\001 \001(\010\022\016\n\006DCVolt\030\002"
      " \001(\r\022\r\n\005DCCur\030\003 \001(\r\022\r\n\005ACCur\030\004 \001(\r\"\211\001\n\021C"
      "anMsg_0x0CFF7B02\022\017\n\007isValid\030\001 \001(\010\022\026\n\016Mot"
      "orMinAvaTor\030\002 \001(\r\022\026\n\016MotorMaxAvaTor\030\003 \001("
      "\r\022\025\n\rMotorIGBTTemp\030\004 \001(\r\022\r\n\005MTemp\030\005 \001(\r\022"
      "\r\n\005CTemp\030\006 \001(\r\"\370\003\n\021CanMsg_0x0CFF7C02\022\017\n\007"
      "isValid\030\001 \001(\010\022\021\n\tMOvSpdSts\030\002 \001(\r\022\021\n\tMBlo"
      "ckSts\030\003 \001(\r\022\022\n\nMOvTempSts\030\004 \001(\r\022\021\n\tMOvCu"
      "rSts\030\005 \001(\r\022\017\n\007MShrSts\030\006 \001(\r\022\022\n\nMShrGrdSt"
      "s\030\007 \001(\r\022\022\n\nCOvTempSts\030\010 \001(\r\022\022\n\nCAuxBatSt"
      "s\030\t \001(\r\022\021\n\tPreChaSts\030\n \001(\r\022\022\n\nIGBTModSts"
      "\030\013 \001(\r\022\025\n\rIGBTOvTempSts\030\014 \001(\r\022\024\n\014IGBTOvC"
      "urSts\030\r \001(\r\022\022\n\nCOvVoltSts\030\016 \001(\r\022\023\n\013CLowV"
      "oltSts\030\017 \001(\r\022\026\n\016IGBTTempSenSts\030\020 \001(\r\022\020\n\010"
      "CANFault\030\021 \001(\r\022\023\n\013MTempSenSts\030\022 \001(\r\022\023\n\013C"
      "TempSenSts\030\023 \001(\r\022\023\n\013CVoltSenSts\030\024 \001(\r\022\022\n"
      "\nCCurSenSts\030\025 \001(\r\022\023\n\013ACCurSenSts\030\026 \001(\r\022\025"
      "\n\rCTranFaultSts\030\027 \001(\r\022\022\n\nMCutOffSts\030\030 \001("
      "\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 9289);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CanMsg.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_CanMsg_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x64::kIsValidFieldNumber;
const int CanMsg_0x64::kPDMLeftbrushDownFieldNumber;
const int CanMsg_0x64::kPDMLeftbrushUpFieldNumber;
const int CanMsg_0x64::kPDMLeftbrushExtendFieldNumber;
const int CanMsg_0x64::kPDMLeftbrushNarrowFieldNumber;
const int CanMsg_0x64::kPDMRightbrushExtendFieldNumber;
const int CanMsg_0x64::kPDMRightbrushNarrowFieldNumber;
const int CanMsg_0x64::kPDMRightbrushDownFieldNumber;
const int CanMsg_0x64::kPDMRightbrushUpFieldNumber;
const int CanMsg_0x64::kPDMTankOpenFieldNumber;
const int CanMsg_0x64::kPDMTankCloseFieldNumber;
const int CanMsg_0x64::kPDMNozzleDownFieldNumber;
const int CanMsg_0x64::kPDMNozzleUpFieldNumber;
const int CanMsg_0x64::kPDMExtendRelayFieldNumber;
const int CanMsg_0x64::kPDMWithdrawRelayFieldNumber;
const int CanMsg_0x64::kPDMSewageLoopFieldNumber;
const int CanMsg_0x64::kPDMFanCalibrationFieldNumber;
const int CanMsg_0x64::kPDMFanWorkDebugFieldNumber;
const int CanMsg_0x64::kPDMFanSpeedAccFieldNumber;
const int CanMsg_0x64::kPDMFanSpeedMinFieldNumber;
const int CanMsg_0x64::kPDMLeftbrushWorkDebugFieldNumber;
const int CanMsg_0x64::kPDMRightbrushworkDebugFieldNumber;
const int CanMsg_0x64::kPDMBrushSpeedAccFieldNumber;
const int CanMsg_0x64::kPDMBrushSpeedMinFieldNumber;
const int CanMsg_0x64::kPDMSprayPumpDebugFieldNumber;
const int CanMsg_0x64::kPDMEPSCalibrationFieldNumber;
const int CanMsg_0x64::kPDMWorkModeFieldNumber;
const int CanMsg_0x64::kPDMHPpumpWorkFieldNumber;
const int CanMsg_0x64::kPDMDustModeFieldNumber;
const int CanMsg_0x64::kPDMTankTiltFieldNumber;
const int CanMsg_0x64::kPDMTankResetFieldNumber;
const int CanMsg_0x64::kPDMWorklightFieldNumber;
const int CanMsg_0x64::kPDMWorkStartFieldNumber;
const int CanMsg_0x64::kCuriseStartFieldNumber;
const int CanMsg_0x64::kCuriseAccFieldNumber;
const int CanMsg_0x64::kCuriseDecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x64::CanMsg_0x64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x64)
}
CanMsg_0x64::CanMsg_0x64(const CanMsg_0x64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&curise_dec_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(curise_dec_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x64)
}

void CanMsg_0x64::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&curise_dec_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(curise_dec_));
  _cached_size_ = 0;
}

CanMsg_0x64::~CanMsg_0x64() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x64)
  SharedDtor();
}

void CanMsg_0x64::SharedDtor() {
}

void CanMsg_0x64::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x64::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x64& CanMsg_0x64::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x64* CanMsg_0x64::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x64* n = new CanMsg_0x64;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x64::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x64)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&curise_dec_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(curise_dec_));
}

bool CanMsg_0x64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x64)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_leftbrush_down = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_leftbrush_down_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_leftbrush_up = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_leftbrush_up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_leftbrush_extend = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_leftbrush_extend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_leftbrush_narrow = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_leftbrush_narrow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_rightbrush_extend = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_rightbrush_extend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_rightbrush_narrow = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_rightbrush_narrow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_rightbrush_down = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_rightbrush_down_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_rightbrush_up = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_rightbrush_up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_tank_open = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_tank_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_tank_close = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_tank_close_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_nozzle_down = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_nozzle_down_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_nozzle_up = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_nozzle_up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_extend_relay = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_extend_relay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_withdraw_relay = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_withdraw_relay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_sewage_loop = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_sewage_loop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_fan_calibration = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_fan_calibration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_fan_work_debug = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_fan_work_debug_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_fan_speed_acc = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_fan_speed_acc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_fan_speed_min = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_fan_speed_min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_leftbrush_work_debug = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_leftbrush_work_debug_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_rightbrushwork_debug = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_rightbrushwork_debug_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_brush_speed_acc = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_brush_speed_acc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_brush_speed_min = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_brush_speed_min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_spray_pump_debug = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_spray_pump_debug_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_EPS_calibration = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_eps_calibration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_work_mode = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_work_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_HPpump_work = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_hppump_work_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_dust_mode = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_dust_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_tank_tilt = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_tank_tilt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_tank_reset = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_tank_reset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_worklight = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(256u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_worklight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PDM_work_start = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(264u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pdm_work_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Curise_start = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(272u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &curise_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Curise_acc = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(280u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &curise_acc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Curise_dec = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(288u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &curise_dec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x64)
  return false;
#undef DO_
}

void CanMsg_0x64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 PDM_leftbrush_down = 2;
  if (this->pdm_leftbrush_down() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pdm_leftbrush_down(), output);
  }

  // uint32 PDM_leftbrush_up = 3;
  if (this->pdm_leftbrush_up() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pdm_leftbrush_up(), output);
  }

  // uint32 PDM_leftbrush_extend = 4;
  if (this->pdm_leftbrush_extend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pdm_leftbrush_extend(), output);
  }

  // uint32 PDM_leftbrush_narrow = 5;
  if (this->pdm_leftbrush_narrow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pdm_leftbrush_narrow(), output);
  }

  // uint32 PDM_rightbrush_extend = 6;
  if (this->pdm_rightbrush_extend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pdm_rightbrush_extend(), output);
  }

  // uint32 PDM_rightbrush_narrow = 7;
  if (this->pdm_rightbrush_narrow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pdm_rightbrush_narrow(), output);
  }

  // uint32 PDM_rightbrush_down = 8;
  if (this->pdm_rightbrush_down() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->pdm_rightbrush_down(), output);
  }

  // uint32 PDM_rightbrush_up = 9;
  if (this->pdm_rightbrush_up() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->pdm_rightbrush_up(), output);
  }

  // uint32 PDM_tank_open = 10;
  if (this->pdm_tank_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->pdm_tank_open(), output);
  }

  // uint32 PDM_tank_close = 11;
  if (this->pdm_tank_close() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->pdm_tank_close(), output);
  }

  // uint32 PDM_nozzle_down = 12;
  if (this->pdm_nozzle_down() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->pdm_nozzle_down(), output);
  }

  // uint32 PDM_nozzle_up = 13;
  if (this->pdm_nozzle_up() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->pdm_nozzle_up(), output);
  }

  // uint32 PDM_extend_relay = 14;
  if (this->pdm_extend_relay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->pdm_extend_relay(), output);
  }

  // uint32 PDM_withdraw_relay = 15;
  if (this->pdm_withdraw_relay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->pdm_withdraw_relay(), output);
  }

  // uint32 PDM_sewage_loop = 16;
  if (this->pdm_sewage_loop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->pdm_sewage_loop(), output);
  }

  // uint32 PDM_fan_calibration = 17;
  if (this->pdm_fan_calibration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->pdm_fan_calibration(), output);
  }

  // uint32 PDM_fan_work_debug = 18;
  if (this->pdm_fan_work_debug() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->pdm_fan_work_debug(), output);
  }

  // uint32 PDM_fan_speed_acc = 19;
  if (this->pdm_fan_speed_acc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->pdm_fan_speed_acc(), output);
  }

  // uint32 PDM_fan_speed_min = 20;
  if (this->pdm_fan_speed_min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->pdm_fan_speed_min(), output);
  }

  // uint32 PDM_leftbrush_work_debug = 21;
  if (this->pdm_leftbrush_work_debug() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->pdm_leftbrush_work_debug(), output);
  }

  // uint32 PDM_rightbrushwork_debug = 22;
  if (this->pdm_rightbrushwork_debug() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->pdm_rightbrushwork_debug(), output);
  }

  // uint32 PDM_brush_speed_acc = 23;
  if (this->pdm_brush_speed_acc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->pdm_brush_speed_acc(), output);
  }

  // uint32 PDM_brush_speed_min = 24;
  if (this->pdm_brush_speed_min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->pdm_brush_speed_min(), output);
  }

  // uint32 PDM_spray_pump_debug = 25;
  if (this->pdm_spray_pump_debug() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->pdm_spray_pump_debug(), output);
  }

  // uint32 PDM_EPS_calibration = 26;
  if (this->pdm_eps_calibration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->pdm_eps_calibration(), output);
  }

  // uint32 PDM_work_mode = 27;
  if (this->pdm_work_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->pdm_work_mode(), output);
  }

  // uint32 PDM_HPpump_work = 28;
  if (this->pdm_hppump_work() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->pdm_hppump_work(), output);
  }

  // uint32 PDM_dust_mode = 29;
  if (this->pdm_dust_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(29, this->pdm_dust_mode(), output);
  }

  // uint32 PDM_tank_tilt = 30;
  if (this->pdm_tank_tilt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->pdm_tank_tilt(), output);
  }

  // uint32 PDM_tank_reset = 31;
  if (this->pdm_tank_reset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->pdm_tank_reset(), output);
  }

  // uint32 PDM_worklight = 32;
  if (this->pdm_worklight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(32, this->pdm_worklight(), output);
  }

  // uint32 PDM_work_start = 33;
  if (this->pdm_work_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(33, this->pdm_work_start(), output);
  }

  // uint32 Curise_start = 34;
  if (this->curise_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(34, this->curise_start(), output);
  }

  // uint32 Curise_acc = 35;
  if (this->curise_acc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(35, this->curise_acc(), output);
  }

  // uint32 Curise_dec = 36;
  if (this->curise_dec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(36, this->curise_dec(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x64)
}

::google::protobuf::uint8* CanMsg_0x64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 PDM_leftbrush_down = 2;
  if (this->pdm_leftbrush_down() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pdm_leftbrush_down(), target);
  }

  // uint32 PDM_leftbrush_up = 3;
  if (this->pdm_leftbrush_up() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pdm_leftbrush_up(), target);
  }

  // uint32 PDM_leftbrush_extend = 4;
  if (this->pdm_leftbrush_extend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pdm_leftbrush_extend(), target);
  }

  // uint32 PDM_leftbrush_narrow = 5;
  if (this->pdm_leftbrush_narrow() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pdm_leftbrush_narrow(), target);
  }

  // uint32 PDM_rightbrush_extend = 6;
  if (this->pdm_rightbrush_extend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pdm_rightbrush_extend(), target);
  }

  // uint32 PDM_rightbrush_narrow = 7;
  if (this->pdm_rightbrush_narrow() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pdm_rightbrush_narrow(), target);
  }

  // uint32 PDM_rightbrush_down = 8;
  if (this->pdm_rightbrush_down() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->pdm_rightbrush_down(), target);
  }

  // uint32 PDM_rightbrush_up = 9;
  if (this->pdm_rightbrush_up() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->pdm_rightbrush_up(), target);
  }

  // uint32 PDM_tank_open = 10;
  if (this->pdm_tank_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->pdm_tank_open(), target);
  }

  // uint32 PDM_tank_close = 11;
  if (this->pdm_tank_close() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->pdm_tank_close(), target);
  }

  // uint32 PDM_nozzle_down = 12;
  if (this->pdm_nozzle_down() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->pdm_nozzle_down(), target);
  }

  // uint32 PDM_nozzle_up = 13;
  if (this->pdm_nozzle_up() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->pdm_nozzle_up(), target);
  }

  // uint32 PDM_extend_relay = 14;
  if (this->pdm_extend_relay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->pdm_extend_relay(), target);
  }

  // uint32 PDM_withdraw_relay = 15;
  if (this->pdm_withdraw_relay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->pdm_withdraw_relay(), target);
  }

  // uint32 PDM_sewage_loop = 16;
  if (this->pdm_sewage_loop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->pdm_sewage_loop(), target);
  }

  // uint32 PDM_fan_calibration = 17;
  if (this->pdm_fan_calibration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->pdm_fan_calibration(), target);
  }

  // uint32 PDM_fan_work_debug = 18;
  if (this->pdm_fan_work_debug() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->pdm_fan_work_debug(), target);
  }

  // uint32 PDM_fan_speed_acc = 19;
  if (this->pdm_fan_speed_acc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->pdm_fan_speed_acc(), target);
  }

  // uint32 PDM_fan_speed_min = 20;
  if (this->pdm_fan_speed_min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->pdm_fan_speed_min(), target);
  }

  // uint32 PDM_leftbrush_work_debug = 21;
  if (this->pdm_leftbrush_work_debug() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->pdm_leftbrush_work_debug(), target);
  }

  // uint32 PDM_rightbrushwork_debug = 22;
  if (this->pdm_rightbrushwork_debug() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->pdm_rightbrushwork_debug(), target);
  }

  // uint32 PDM_brush_speed_acc = 23;
  if (this->pdm_brush_speed_acc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->pdm_brush_speed_acc(), target);
  }

  // uint32 PDM_brush_speed_min = 24;
  if (this->pdm_brush_speed_min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->pdm_brush_speed_min(), target);
  }

  // uint32 PDM_spray_pump_debug = 25;
  if (this->pdm_spray_pump_debug() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->pdm_spray_pump_debug(), target);
  }

  // uint32 PDM_EPS_calibration = 26;
  if (this->pdm_eps_calibration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->pdm_eps_calibration(), target);
  }

  // uint32 PDM_work_mode = 27;
  if (this->pdm_work_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->pdm_work_mode(), target);
  }

  // uint32 PDM_HPpump_work = 28;
  if (this->pdm_hppump_work() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(28, this->pdm_hppump_work(), target);
  }

  // uint32 PDM_dust_mode = 29;
  if (this->pdm_dust_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(29, this->pdm_dust_mode(), target);
  }

  // uint32 PDM_tank_tilt = 30;
  if (this->pdm_tank_tilt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->pdm_tank_tilt(), target);
  }

  // uint32 PDM_tank_reset = 31;
  if (this->pdm_tank_reset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->pdm_tank_reset(), target);
  }

  // uint32 PDM_worklight = 32;
  if (this->pdm_worklight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(32, this->pdm_worklight(), target);
  }

  // uint32 PDM_work_start = 33;
  if (this->pdm_work_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(33, this->pdm_work_start(), target);
  }

  // uint32 Curise_start = 34;
  if (this->curise_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(34, this->curise_start(), target);
  }

  // uint32 Curise_acc = 35;
  if (this->curise_acc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(35, this->curise_acc(), target);
  }

  // uint32 Curise_dec = 36;
  if (this->curise_dec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(36, this->curise_dec(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x64)
  return target;
}

size_t CanMsg_0x64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x64)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 PDM_leftbrush_down = 2;
  if (this->pdm_leftbrush_down() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_leftbrush_down());
  }

  // uint32 PDM_leftbrush_up = 3;
  if (this->pdm_leftbrush_up() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_leftbrush_up());
  }

  // uint32 PDM_leftbrush_extend = 4;
  if (this->pdm_leftbrush_extend() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_leftbrush_extend());
  }

  // uint32 PDM_leftbrush_narrow = 5;
  if (this->pdm_leftbrush_narrow() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_leftbrush_narrow());
  }

  // uint32 PDM_rightbrush_extend = 6;
  if (this->pdm_rightbrush_extend() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_rightbrush_extend());
  }

  // uint32 PDM_rightbrush_narrow = 7;
  if (this->pdm_rightbrush_narrow() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_rightbrush_narrow());
  }

  // uint32 PDM_rightbrush_down = 8;
  if (this->pdm_rightbrush_down() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_rightbrush_down());
  }

  // uint32 PDM_rightbrush_up = 9;
  if (this->pdm_rightbrush_up() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_rightbrush_up());
  }

  // uint32 PDM_tank_open = 10;
  if (this->pdm_tank_open() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_tank_open());
  }

  // uint32 PDM_tank_close = 11;
  if (this->pdm_tank_close() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_tank_close());
  }

  // uint32 PDM_nozzle_down = 12;
  if (this->pdm_nozzle_down() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_nozzle_down());
  }

  // uint32 PDM_nozzle_up = 13;
  if (this->pdm_nozzle_up() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_nozzle_up());
  }

  // uint32 PDM_extend_relay = 14;
  if (this->pdm_extend_relay() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_extend_relay());
  }

  // uint32 PDM_withdraw_relay = 15;
  if (this->pdm_withdraw_relay() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_withdraw_relay());
  }

  // uint32 PDM_sewage_loop = 16;
  if (this->pdm_sewage_loop() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_sewage_loop());
  }

  // uint32 PDM_fan_calibration = 17;
  if (this->pdm_fan_calibration() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_fan_calibration());
  }

  // uint32 PDM_fan_work_debug = 18;
  if (this->pdm_fan_work_debug() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_fan_work_debug());
  }

  // uint32 PDM_fan_speed_acc = 19;
  if (this->pdm_fan_speed_acc() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_fan_speed_acc());
  }

  // uint32 PDM_fan_speed_min = 20;
  if (this->pdm_fan_speed_min() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_fan_speed_min());
  }

  // uint32 PDM_leftbrush_work_debug = 21;
  if (this->pdm_leftbrush_work_debug() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_leftbrush_work_debug());
  }

  // uint32 PDM_rightbrushwork_debug = 22;
  if (this->pdm_rightbrushwork_debug() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_rightbrushwork_debug());
  }

  // uint32 PDM_brush_speed_acc = 23;
  if (this->pdm_brush_speed_acc() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_brush_speed_acc());
  }

  // uint32 PDM_brush_speed_min = 24;
  if (this->pdm_brush_speed_min() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_brush_speed_min());
  }

  // uint32 PDM_spray_pump_debug = 25;
  if (this->pdm_spray_pump_debug() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_spray_pump_debug());
  }

  // uint32 PDM_EPS_calibration = 26;
  if (this->pdm_eps_calibration() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_eps_calibration());
  }

  // uint32 PDM_work_mode = 27;
  if (this->pdm_work_mode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_work_mode());
  }

  // uint32 PDM_HPpump_work = 28;
  if (this->pdm_hppump_work() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_hppump_work());
  }

  // uint32 PDM_dust_mode = 29;
  if (this->pdm_dust_mode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_dust_mode());
  }

  // uint32 PDM_tank_tilt = 30;
  if (this->pdm_tank_tilt() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_tank_tilt());
  }

  // uint32 PDM_tank_reset = 31;
  if (this->pdm_tank_reset() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_tank_reset());
  }

  // uint32 PDM_worklight = 32;
  if (this->pdm_worklight() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_worklight());
  }

  // uint32 PDM_work_start = 33;
  if (this->pdm_work_start() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pdm_work_start());
  }

  // uint32 Curise_start = 34;
  if (this->curise_start() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->curise_start());
  }

  // uint32 Curise_acc = 35;
  if (this->curise_acc() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->curise_acc());
  }

  // uint32 Curise_dec = 36;
  if (this->curise_dec() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->curise_dec());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x64)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x64)
    MergeFrom(*source);
  }
}

void CanMsg_0x64::MergeFrom(const CanMsg_0x64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.pdm_leftbrush_down() != 0) {
    set_pdm_leftbrush_down(from.pdm_leftbrush_down());
  }
  if (from.pdm_leftbrush_up() != 0) {
    set_pdm_leftbrush_up(from.pdm_leftbrush_up());
  }
  if (from.pdm_leftbrush_extend() != 0) {
    set_pdm_leftbrush_extend(from.pdm_leftbrush_extend());
  }
  if (from.pdm_leftbrush_narrow() != 0) {
    set_pdm_leftbrush_narrow(from.pdm_leftbrush_narrow());
  }
  if (from.pdm_rightbrush_extend() != 0) {
    set_pdm_rightbrush_extend(from.pdm_rightbrush_extend());
  }
  if (from.pdm_rightbrush_narrow() != 0) {
    set_pdm_rightbrush_narrow(from.pdm_rightbrush_narrow());
  }
  if (from.pdm_rightbrush_down() != 0) {
    set_pdm_rightbrush_down(from.pdm_rightbrush_down());
  }
  if (from.pdm_rightbrush_up() != 0) {
    set_pdm_rightbrush_up(from.pdm_rightbrush_up());
  }
  if (from.pdm_tank_open() != 0) {
    set_pdm_tank_open(from.pdm_tank_open());
  }
  if (from.pdm_tank_close() != 0) {
    set_pdm_tank_close(from.pdm_tank_close());
  }
  if (from.pdm_nozzle_down() != 0) {
    set_pdm_nozzle_down(from.pdm_nozzle_down());
  }
  if (from.pdm_nozzle_up() != 0) {
    set_pdm_nozzle_up(from.pdm_nozzle_up());
  }
  if (from.pdm_extend_relay() != 0) {
    set_pdm_extend_relay(from.pdm_extend_relay());
  }
  if (from.pdm_withdraw_relay() != 0) {
    set_pdm_withdraw_relay(from.pdm_withdraw_relay());
  }
  if (from.pdm_sewage_loop() != 0) {
    set_pdm_sewage_loop(from.pdm_sewage_loop());
  }
  if (from.pdm_fan_calibration() != 0) {
    set_pdm_fan_calibration(from.pdm_fan_calibration());
  }
  if (from.pdm_fan_work_debug() != 0) {
    set_pdm_fan_work_debug(from.pdm_fan_work_debug());
  }
  if (from.pdm_fan_speed_acc() != 0) {
    set_pdm_fan_speed_acc(from.pdm_fan_speed_acc());
  }
  if (from.pdm_fan_speed_min() != 0) {
    set_pdm_fan_speed_min(from.pdm_fan_speed_min());
  }
  if (from.pdm_leftbrush_work_debug() != 0) {
    set_pdm_leftbrush_work_debug(from.pdm_leftbrush_work_debug());
  }
  if (from.pdm_rightbrushwork_debug() != 0) {
    set_pdm_rightbrushwork_debug(from.pdm_rightbrushwork_debug());
  }
  if (from.pdm_brush_speed_acc() != 0) {
    set_pdm_brush_speed_acc(from.pdm_brush_speed_acc());
  }
  if (from.pdm_brush_speed_min() != 0) {
    set_pdm_brush_speed_min(from.pdm_brush_speed_min());
  }
  if (from.pdm_spray_pump_debug() != 0) {
    set_pdm_spray_pump_debug(from.pdm_spray_pump_debug());
  }
  if (from.pdm_eps_calibration() != 0) {
    set_pdm_eps_calibration(from.pdm_eps_calibration());
  }
  if (from.pdm_work_mode() != 0) {
    set_pdm_work_mode(from.pdm_work_mode());
  }
  if (from.pdm_hppump_work() != 0) {
    set_pdm_hppump_work(from.pdm_hppump_work());
  }
  if (from.pdm_dust_mode() != 0) {
    set_pdm_dust_mode(from.pdm_dust_mode());
  }
  if (from.pdm_tank_tilt() != 0) {
    set_pdm_tank_tilt(from.pdm_tank_tilt());
  }
  if (from.pdm_tank_reset() != 0) {
    set_pdm_tank_reset(from.pdm_tank_reset());
  }
  if (from.pdm_worklight() != 0) {
    set_pdm_worklight(from.pdm_worklight());
  }
  if (from.pdm_work_start() != 0) {
    set_pdm_work_start(from.pdm_work_start());
  }
  if (from.curise_start() != 0) {
    set_curise_start(from.curise_start());
  }
  if (from.curise_acc() != 0) {
    set_curise_acc(from.curise_acc());
  }
  if (from.curise_dec() != 0) {
    set_curise_dec(from.curise_dec());
  }
}

void CanMsg_0x64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x64::CopyFrom(const CanMsg_0x64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x64::IsInitialized() const {
  return true;
}

void CanMsg_0x64::Swap(CanMsg_0x64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x64::InternalSwap(CanMsg_0x64* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(pdm_leftbrush_down_, other->pdm_leftbrush_down_);
  std::swap(pdm_leftbrush_up_, other->pdm_leftbrush_up_);
  std::swap(pdm_leftbrush_extend_, other->pdm_leftbrush_extend_);
  std::swap(pdm_leftbrush_narrow_, other->pdm_leftbrush_narrow_);
  std::swap(pdm_rightbrush_extend_, other->pdm_rightbrush_extend_);
  std::swap(pdm_rightbrush_narrow_, other->pdm_rightbrush_narrow_);
  std::swap(pdm_rightbrush_down_, other->pdm_rightbrush_down_);
  std::swap(pdm_rightbrush_up_, other->pdm_rightbrush_up_);
  std::swap(pdm_tank_open_, other->pdm_tank_open_);
  std::swap(pdm_tank_close_, other->pdm_tank_close_);
  std::swap(pdm_nozzle_down_, other->pdm_nozzle_down_);
  std::swap(pdm_nozzle_up_, other->pdm_nozzle_up_);
  std::swap(pdm_extend_relay_, other->pdm_extend_relay_);
  std::swap(pdm_withdraw_relay_, other->pdm_withdraw_relay_);
  std::swap(pdm_sewage_loop_, other->pdm_sewage_loop_);
  std::swap(pdm_fan_calibration_, other->pdm_fan_calibration_);
  std::swap(pdm_fan_work_debug_, other->pdm_fan_work_debug_);
  std::swap(pdm_fan_speed_acc_, other->pdm_fan_speed_acc_);
  std::swap(pdm_fan_speed_min_, other->pdm_fan_speed_min_);
  std::swap(pdm_leftbrush_work_debug_, other->pdm_leftbrush_work_debug_);
  std::swap(pdm_rightbrushwork_debug_, other->pdm_rightbrushwork_debug_);
  std::swap(pdm_brush_speed_acc_, other->pdm_brush_speed_acc_);
  std::swap(pdm_brush_speed_min_, other->pdm_brush_speed_min_);
  std::swap(pdm_spray_pump_debug_, other->pdm_spray_pump_debug_);
  std::swap(pdm_eps_calibration_, other->pdm_eps_calibration_);
  std::swap(pdm_work_mode_, other->pdm_work_mode_);
  std::swap(pdm_hppump_work_, other->pdm_hppump_work_);
  std::swap(pdm_dust_mode_, other->pdm_dust_mode_);
  std::swap(pdm_tank_tilt_, other->pdm_tank_tilt_);
  std::swap(pdm_tank_reset_, other->pdm_tank_reset_);
  std::swap(pdm_worklight_, other->pdm_worklight_);
  std::swap(pdm_work_start_, other->pdm_work_start_);
  std::swap(curise_start_, other->curise_start_);
  std::swap(curise_acc_, other->curise_acc_);
  std::swap(curise_dec_, other->curise_dec_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x64::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x64

// bool isValid = 1;
void CanMsg_0x64::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x64::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.isValid)
  return isvalid_;
}
void CanMsg_0x64::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.isValid)
}

// uint32 PDM_leftbrush_down = 2;
void CanMsg_0x64::clear_pdm_leftbrush_down() {
  pdm_leftbrush_down_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_leftbrush_down() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_leftbrush_down)
  return pdm_leftbrush_down_;
}
void CanMsg_0x64::set_pdm_leftbrush_down(::google::protobuf::uint32 value) {
  
  pdm_leftbrush_down_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_leftbrush_down)
}

// uint32 PDM_leftbrush_up = 3;
void CanMsg_0x64::clear_pdm_leftbrush_up() {
  pdm_leftbrush_up_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_leftbrush_up() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_leftbrush_up)
  return pdm_leftbrush_up_;
}
void CanMsg_0x64::set_pdm_leftbrush_up(::google::protobuf::uint32 value) {
  
  pdm_leftbrush_up_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_leftbrush_up)
}

// uint32 PDM_leftbrush_extend = 4;
void CanMsg_0x64::clear_pdm_leftbrush_extend() {
  pdm_leftbrush_extend_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_leftbrush_extend() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_leftbrush_extend)
  return pdm_leftbrush_extend_;
}
void CanMsg_0x64::set_pdm_leftbrush_extend(::google::protobuf::uint32 value) {
  
  pdm_leftbrush_extend_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_leftbrush_extend)
}

// uint32 PDM_leftbrush_narrow = 5;
void CanMsg_0x64::clear_pdm_leftbrush_narrow() {
  pdm_leftbrush_narrow_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_leftbrush_narrow() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_leftbrush_narrow)
  return pdm_leftbrush_narrow_;
}
void CanMsg_0x64::set_pdm_leftbrush_narrow(::google::protobuf::uint32 value) {
  
  pdm_leftbrush_narrow_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_leftbrush_narrow)
}

// uint32 PDM_rightbrush_extend = 6;
void CanMsg_0x64::clear_pdm_rightbrush_extend() {
  pdm_rightbrush_extend_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_rightbrush_extend() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_rightbrush_extend)
  return pdm_rightbrush_extend_;
}
void CanMsg_0x64::set_pdm_rightbrush_extend(::google::protobuf::uint32 value) {
  
  pdm_rightbrush_extend_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_rightbrush_extend)
}

// uint32 PDM_rightbrush_narrow = 7;
void CanMsg_0x64::clear_pdm_rightbrush_narrow() {
  pdm_rightbrush_narrow_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_rightbrush_narrow() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_rightbrush_narrow)
  return pdm_rightbrush_narrow_;
}
void CanMsg_0x64::set_pdm_rightbrush_narrow(::google::protobuf::uint32 value) {
  
  pdm_rightbrush_narrow_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_rightbrush_narrow)
}

// uint32 PDM_rightbrush_down = 8;
void CanMsg_0x64::clear_pdm_rightbrush_down() {
  pdm_rightbrush_down_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_rightbrush_down() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_rightbrush_down)
  return pdm_rightbrush_down_;
}
void CanMsg_0x64::set_pdm_rightbrush_down(::google::protobuf::uint32 value) {
  
  pdm_rightbrush_down_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_rightbrush_down)
}

// uint32 PDM_rightbrush_up = 9;
void CanMsg_0x64::clear_pdm_rightbrush_up() {
  pdm_rightbrush_up_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_rightbrush_up() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_rightbrush_up)
  return pdm_rightbrush_up_;
}
void CanMsg_0x64::set_pdm_rightbrush_up(::google::protobuf::uint32 value) {
  
  pdm_rightbrush_up_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_rightbrush_up)
}

// uint32 PDM_tank_open = 10;
void CanMsg_0x64::clear_pdm_tank_open() {
  pdm_tank_open_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_tank_open() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_tank_open)
  return pdm_tank_open_;
}
void CanMsg_0x64::set_pdm_tank_open(::google::protobuf::uint32 value) {
  
  pdm_tank_open_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_tank_open)
}

// uint32 PDM_tank_close = 11;
void CanMsg_0x64::clear_pdm_tank_close() {
  pdm_tank_close_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_tank_close() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_tank_close)
  return pdm_tank_close_;
}
void CanMsg_0x64::set_pdm_tank_close(::google::protobuf::uint32 value) {
  
  pdm_tank_close_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_tank_close)
}

// uint32 PDM_nozzle_down = 12;
void CanMsg_0x64::clear_pdm_nozzle_down() {
  pdm_nozzle_down_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_nozzle_down() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_nozzle_down)
  return pdm_nozzle_down_;
}
void CanMsg_0x64::set_pdm_nozzle_down(::google::protobuf::uint32 value) {
  
  pdm_nozzle_down_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_nozzle_down)
}

// uint32 PDM_nozzle_up = 13;
void CanMsg_0x64::clear_pdm_nozzle_up() {
  pdm_nozzle_up_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_nozzle_up() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_nozzle_up)
  return pdm_nozzle_up_;
}
void CanMsg_0x64::set_pdm_nozzle_up(::google::protobuf::uint32 value) {
  
  pdm_nozzle_up_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_nozzle_up)
}

// uint32 PDM_extend_relay = 14;
void CanMsg_0x64::clear_pdm_extend_relay() {
  pdm_extend_relay_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_extend_relay() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_extend_relay)
  return pdm_extend_relay_;
}
void CanMsg_0x64::set_pdm_extend_relay(::google::protobuf::uint32 value) {
  
  pdm_extend_relay_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_extend_relay)
}

// uint32 PDM_withdraw_relay = 15;
void CanMsg_0x64::clear_pdm_withdraw_relay() {
  pdm_withdraw_relay_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_withdraw_relay() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_withdraw_relay)
  return pdm_withdraw_relay_;
}
void CanMsg_0x64::set_pdm_withdraw_relay(::google::protobuf::uint32 value) {
  
  pdm_withdraw_relay_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_withdraw_relay)
}

// uint32 PDM_sewage_loop = 16;
void CanMsg_0x64::clear_pdm_sewage_loop() {
  pdm_sewage_loop_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_sewage_loop() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_sewage_loop)
  return pdm_sewage_loop_;
}
void CanMsg_0x64::set_pdm_sewage_loop(::google::protobuf::uint32 value) {
  
  pdm_sewage_loop_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_sewage_loop)
}

// uint32 PDM_fan_calibration = 17;
void CanMsg_0x64::clear_pdm_fan_calibration() {
  pdm_fan_calibration_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_fan_calibration() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_fan_calibration)
  return pdm_fan_calibration_;
}
void CanMsg_0x64::set_pdm_fan_calibration(::google::protobuf::uint32 value) {
  
  pdm_fan_calibration_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_fan_calibration)
}

// uint32 PDM_fan_work_debug = 18;
void CanMsg_0x64::clear_pdm_fan_work_debug() {
  pdm_fan_work_debug_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_fan_work_debug() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_fan_work_debug)
  return pdm_fan_work_debug_;
}
void CanMsg_0x64::set_pdm_fan_work_debug(::google::protobuf::uint32 value) {
  
  pdm_fan_work_debug_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_fan_work_debug)
}

// uint32 PDM_fan_speed_acc = 19;
void CanMsg_0x64::clear_pdm_fan_speed_acc() {
  pdm_fan_speed_acc_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_fan_speed_acc() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_fan_speed_acc)
  return pdm_fan_speed_acc_;
}
void CanMsg_0x64::set_pdm_fan_speed_acc(::google::protobuf::uint32 value) {
  
  pdm_fan_speed_acc_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_fan_speed_acc)
}

// uint32 PDM_fan_speed_min = 20;
void CanMsg_0x64::clear_pdm_fan_speed_min() {
  pdm_fan_speed_min_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_fan_speed_min() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_fan_speed_min)
  return pdm_fan_speed_min_;
}
void CanMsg_0x64::set_pdm_fan_speed_min(::google::protobuf::uint32 value) {
  
  pdm_fan_speed_min_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_fan_speed_min)
}

// uint32 PDM_leftbrush_work_debug = 21;
void CanMsg_0x64::clear_pdm_leftbrush_work_debug() {
  pdm_leftbrush_work_debug_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_leftbrush_work_debug() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_leftbrush_work_debug)
  return pdm_leftbrush_work_debug_;
}
void CanMsg_0x64::set_pdm_leftbrush_work_debug(::google::protobuf::uint32 value) {
  
  pdm_leftbrush_work_debug_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_leftbrush_work_debug)
}

// uint32 PDM_rightbrushwork_debug = 22;
void CanMsg_0x64::clear_pdm_rightbrushwork_debug() {
  pdm_rightbrushwork_debug_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_rightbrushwork_debug() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_rightbrushwork_debug)
  return pdm_rightbrushwork_debug_;
}
void CanMsg_0x64::set_pdm_rightbrushwork_debug(::google::protobuf::uint32 value) {
  
  pdm_rightbrushwork_debug_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_rightbrushwork_debug)
}

// uint32 PDM_brush_speed_acc = 23;
void CanMsg_0x64::clear_pdm_brush_speed_acc() {
  pdm_brush_speed_acc_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_brush_speed_acc() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_brush_speed_acc)
  return pdm_brush_speed_acc_;
}
void CanMsg_0x64::set_pdm_brush_speed_acc(::google::protobuf::uint32 value) {
  
  pdm_brush_speed_acc_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_brush_speed_acc)
}

// uint32 PDM_brush_speed_min = 24;
void CanMsg_0x64::clear_pdm_brush_speed_min() {
  pdm_brush_speed_min_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_brush_speed_min() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_brush_speed_min)
  return pdm_brush_speed_min_;
}
void CanMsg_0x64::set_pdm_brush_speed_min(::google::protobuf::uint32 value) {
  
  pdm_brush_speed_min_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_brush_speed_min)
}

// uint32 PDM_spray_pump_debug = 25;
void CanMsg_0x64::clear_pdm_spray_pump_debug() {
  pdm_spray_pump_debug_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_spray_pump_debug() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_spray_pump_debug)
  return pdm_spray_pump_debug_;
}
void CanMsg_0x64::set_pdm_spray_pump_debug(::google::protobuf::uint32 value) {
  
  pdm_spray_pump_debug_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_spray_pump_debug)
}

// uint32 PDM_EPS_calibration = 26;
void CanMsg_0x64::clear_pdm_eps_calibration() {
  pdm_eps_calibration_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_eps_calibration() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_EPS_calibration)
  return pdm_eps_calibration_;
}
void CanMsg_0x64::set_pdm_eps_calibration(::google::protobuf::uint32 value) {
  
  pdm_eps_calibration_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_EPS_calibration)
}

// uint32 PDM_work_mode = 27;
void CanMsg_0x64::clear_pdm_work_mode() {
  pdm_work_mode_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_work_mode() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_work_mode)
  return pdm_work_mode_;
}
void CanMsg_0x64::set_pdm_work_mode(::google::protobuf::uint32 value) {
  
  pdm_work_mode_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_work_mode)
}

// uint32 PDM_HPpump_work = 28;
void CanMsg_0x64::clear_pdm_hppump_work() {
  pdm_hppump_work_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_hppump_work() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_HPpump_work)
  return pdm_hppump_work_;
}
void CanMsg_0x64::set_pdm_hppump_work(::google::protobuf::uint32 value) {
  
  pdm_hppump_work_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_HPpump_work)
}

// uint32 PDM_dust_mode = 29;
void CanMsg_0x64::clear_pdm_dust_mode() {
  pdm_dust_mode_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_dust_mode() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_dust_mode)
  return pdm_dust_mode_;
}
void CanMsg_0x64::set_pdm_dust_mode(::google::protobuf::uint32 value) {
  
  pdm_dust_mode_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_dust_mode)
}

// uint32 PDM_tank_tilt = 30;
void CanMsg_0x64::clear_pdm_tank_tilt() {
  pdm_tank_tilt_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_tank_tilt() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_tank_tilt)
  return pdm_tank_tilt_;
}
void CanMsg_0x64::set_pdm_tank_tilt(::google::protobuf::uint32 value) {
  
  pdm_tank_tilt_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_tank_tilt)
}

// uint32 PDM_tank_reset = 31;
void CanMsg_0x64::clear_pdm_tank_reset() {
  pdm_tank_reset_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_tank_reset() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_tank_reset)
  return pdm_tank_reset_;
}
void CanMsg_0x64::set_pdm_tank_reset(::google::protobuf::uint32 value) {
  
  pdm_tank_reset_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_tank_reset)
}

// uint32 PDM_worklight = 32;
void CanMsg_0x64::clear_pdm_worklight() {
  pdm_worklight_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_worklight() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_worklight)
  return pdm_worklight_;
}
void CanMsg_0x64::set_pdm_worklight(::google::protobuf::uint32 value) {
  
  pdm_worklight_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_worklight)
}

// uint32 PDM_work_start = 33;
void CanMsg_0x64::clear_pdm_work_start() {
  pdm_work_start_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::pdm_work_start() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.PDM_work_start)
  return pdm_work_start_;
}
void CanMsg_0x64::set_pdm_work_start(::google::protobuf::uint32 value) {
  
  pdm_work_start_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.PDM_work_start)
}

// uint32 Curise_start = 34;
void CanMsg_0x64::clear_curise_start() {
  curise_start_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::curise_start() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.Curise_start)
  return curise_start_;
}
void CanMsg_0x64::set_curise_start(::google::protobuf::uint32 value) {
  
  curise_start_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.Curise_start)
}

// uint32 Curise_acc = 35;
void CanMsg_0x64::clear_curise_acc() {
  curise_acc_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::curise_acc() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.Curise_acc)
  return curise_acc_;
}
void CanMsg_0x64::set_curise_acc(::google::protobuf::uint32 value) {
  
  curise_acc_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.Curise_acc)
}

// uint32 Curise_dec = 36;
void CanMsg_0x64::clear_curise_dec() {
  curise_dec_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x64::curise_dec() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x64.Curise_dec)
  return curise_dec_;
}
void CanMsg_0x64::set_curise_dec(::google::protobuf::uint32 value) {
  
  curise_dec_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x64.Curise_dec)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x65::kIsValidFieldNumber;
const int CanMsg_0x65::kVehicleCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x65::CanMsg_0x65()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x65)
}
CanMsg_0x65::CanMsg_0x65(const CanMsg_0x65& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&vehicle_code_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(vehicle_code_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x65)
}

void CanMsg_0x65::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&vehicle_code_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(vehicle_code_));
  _cached_size_ = 0;
}

CanMsg_0x65::~CanMsg_0x65() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x65)
  SharedDtor();
}

void CanMsg_0x65::SharedDtor() {
}

void CanMsg_0x65::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x65::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x65& CanMsg_0x65::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x65* CanMsg_0x65::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x65* n = new CanMsg_0x65;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x65::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x65)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&vehicle_code_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(vehicle_code_));
}

bool CanMsg_0x65::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x65)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Vehicle_Code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicle_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x65)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x65)
  return false;
#undef DO_
}

void CanMsg_0x65::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x65)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 Vehicle_Code = 2;
  if (this->vehicle_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vehicle_code(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x65)
}

::google::protobuf::uint8* CanMsg_0x65::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x65)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 Vehicle_Code = 2;
  if (this->vehicle_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vehicle_code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x65)
  return target;
}

size_t CanMsg_0x65::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x65)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 Vehicle_Code = 2;
  if (this->vehicle_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicle_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x65::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x65)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x65* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x65>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x65)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x65)
    MergeFrom(*source);
  }
}

void CanMsg_0x65::MergeFrom(const CanMsg_0x65& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x65)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.vehicle_code() != 0) {
    set_vehicle_code(from.vehicle_code());
  }
}

void CanMsg_0x65::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x65)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x65::CopyFrom(const CanMsg_0x65& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x65)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x65::IsInitialized() const {
  return true;
}

void CanMsg_0x65::Swap(CanMsg_0x65* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x65::InternalSwap(CanMsg_0x65* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(vehicle_code_, other->vehicle_code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x65::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x65

// bool isValid = 1;
void CanMsg_0x65::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x65::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x65.isValid)
  return isvalid_;
}
void CanMsg_0x65::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x65.isValid)
}

// uint32 Vehicle_Code = 2;
void CanMsg_0x65::clear_vehicle_code() {
  vehicle_code_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x65::vehicle_code() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x65.Vehicle_Code)
  return vehicle_code_;
}
void CanMsg_0x65::set_vehicle_code(::google::protobuf::uint32 value) {
  
  vehicle_code_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x65.Vehicle_Code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x6E::kIsValidFieldNumber;
const int CanMsg_0x6E::kVehiceSpeedFieldNumber;
const int CanMsg_0x6E::kTravelDistanceFieldNumber;
const int CanMsg_0x6E::kCuriseOffFieldNumber;
const int CanMsg_0x6E::kCuriseSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x6E::CanMsg_0x6E()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x6E)
}
CanMsg_0x6E::CanMsg_0x6E(const CanMsg_0x6E& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&curise_speed_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(curise_speed_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x6E)
}

void CanMsg_0x6E::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&curise_speed_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(curise_speed_));
  _cached_size_ = 0;
}

CanMsg_0x6E::~CanMsg_0x6E() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x6E)
  SharedDtor();
}

void CanMsg_0x6E::SharedDtor() {
}

void CanMsg_0x6E::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x6E::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x6E& CanMsg_0x6E::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x6E* CanMsg_0x6E::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x6E* n = new CanMsg_0x6E;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x6E::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x6E)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&curise_speed_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(curise_speed_));
}

bool CanMsg_0x6E::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x6E)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vehice_speed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehice_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 travel_distance = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &travel_distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Curise_Off = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &curise_off_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Curise_speed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &curise_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x6E)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x6E)
  return false;
#undef DO_
}

void CanMsg_0x6E::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x6E)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 vehice_speed = 2;
  if (this->vehice_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vehice_speed(), output);
  }

  // uint32 travel_distance = 3;
  if (this->travel_distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->travel_distance(), output);
  }

  // uint32 Curise_Off = 4;
  if (this->curise_off() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->curise_off(), output);
  }

  // uint32 Curise_speed = 5;
  if (this->curise_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->curise_speed(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x6E)
}

::google::protobuf::uint8* CanMsg_0x6E::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x6E)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 vehice_speed = 2;
  if (this->vehice_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vehice_speed(), target);
  }

  // uint32 travel_distance = 3;
  if (this->travel_distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->travel_distance(), target);
  }

  // uint32 Curise_Off = 4;
  if (this->curise_off() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->curise_off(), target);
  }

  // uint32 Curise_speed = 5;
  if (this->curise_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->curise_speed(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x6E)
  return target;
}

size_t CanMsg_0x6E::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x6E)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 vehice_speed = 2;
  if (this->vehice_speed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehice_speed());
  }

  // uint32 travel_distance = 3;
  if (this->travel_distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->travel_distance());
  }

  // uint32 Curise_Off = 4;
  if (this->curise_off() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->curise_off());
  }

  // uint32 Curise_speed = 5;
  if (this->curise_speed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->curise_speed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x6E::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x6E)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x6E* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x6E>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x6E)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x6E)
    MergeFrom(*source);
  }
}

void CanMsg_0x6E::MergeFrom(const CanMsg_0x6E& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x6E)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.vehice_speed() != 0) {
    set_vehice_speed(from.vehice_speed());
  }
  if (from.travel_distance() != 0) {
    set_travel_distance(from.travel_distance());
  }
  if (from.curise_off() != 0) {
    set_curise_off(from.curise_off());
  }
  if (from.curise_speed() != 0) {
    set_curise_speed(from.curise_speed());
  }
}

void CanMsg_0x6E::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x6E)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x6E::CopyFrom(const CanMsg_0x6E& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x6E)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x6E::IsInitialized() const {
  return true;
}

void CanMsg_0x6E::Swap(CanMsg_0x6E* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x6E::InternalSwap(CanMsg_0x6E* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(vehice_speed_, other->vehice_speed_);
  std::swap(travel_distance_, other->travel_distance_);
  std::swap(curise_off_, other->curise_off_);
  std::swap(curise_speed_, other->curise_speed_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x6E::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x6E

// bool isValid = 1;
void CanMsg_0x6E::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x6E::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6E.isValid)
  return isvalid_;
}
void CanMsg_0x6E::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6E.isValid)
}

// uint32 vehice_speed = 2;
void CanMsg_0x6E::clear_vehice_speed() {
  vehice_speed_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6E::vehice_speed() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6E.vehice_speed)
  return vehice_speed_;
}
void CanMsg_0x6E::set_vehice_speed(::google::protobuf::uint32 value) {
  
  vehice_speed_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6E.vehice_speed)
}

// uint32 travel_distance = 3;
void CanMsg_0x6E::clear_travel_distance() {
  travel_distance_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6E::travel_distance() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6E.travel_distance)
  return travel_distance_;
}
void CanMsg_0x6E::set_travel_distance(::google::protobuf::uint32 value) {
  
  travel_distance_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6E.travel_distance)
}

// uint32 Curise_Off = 4;
void CanMsg_0x6E::clear_curise_off() {
  curise_off_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6E::curise_off() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6E.Curise_Off)
  return curise_off_;
}
void CanMsg_0x6E::set_curise_off(::google::protobuf::uint32 value) {
  
  curise_off_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6E.Curise_Off)
}

// uint32 Curise_speed = 5;
void CanMsg_0x6E::clear_curise_speed() {
  curise_speed_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6E::curise_speed() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6E.Curise_speed)
  return curise_speed_;
}
void CanMsg_0x6E::set_curise_speed(::google::protobuf::uint32 value) {
  
  curise_speed_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6E.Curise_speed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x6F::kIsValidFieldNumber;
const int CanMsg_0x6F::kLocationLightStsFieldNumber;
const int CanMsg_0x6F::kBigLightStsFieldNumber;
const int CanMsg_0x6F::kTurnLeftLightStsFieldNumber;
const int CanMsg_0x6F::kTurnRightLightStsFieldNumber;
const int CanMsg_0x6F::kWorkLightStsFieldNumber;
const int CanMsg_0x6F::kParkStsFieldNumber;
const int CanMsg_0x6F::kSeatStsFieldNumber;
const int CanMsg_0x6F::kSystemWorkStsFieldNumber;
const int CanMsg_0x6F::kVehiclereadyFieldNumber;
const int CanMsg_0x6F::kBatteryFaultNormalFieldNumber;
const int CanMsg_0x6F::kBatteryHVTurnOFFFieldNumber;
const int CanMsg_0x6F::kMotorOverheatWarningFieldNumber;
const int CanMsg_0x6F::kVehicleFaultFieldNumber;
const int CanMsg_0x6F::kChargeStsFieldNumber;
const int CanMsg_0x6F::kBatteryFaultMajorFieldNumber;
const int CanMsg_0x6F::kVehicleChargeRemindFieldNumber;
const int CanMsg_0x6F::kSoftwareVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x6F::CanMsg_0x6F()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x6F)
}
CanMsg_0x6F::CanMsg_0x6F(const CanMsg_0x6F& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&software_version_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(software_version_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x6F)
}

void CanMsg_0x6F::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&software_version_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(software_version_));
  _cached_size_ = 0;
}

CanMsg_0x6F::~CanMsg_0x6F() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x6F)
  SharedDtor();
}

void CanMsg_0x6F::SharedDtor() {
}

void CanMsg_0x6F::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x6F::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x6F& CanMsg_0x6F::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x6F* CanMsg_0x6F::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x6F* n = new CanMsg_0x6F;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x6F::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x6F)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&software_version_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(software_version_));
}

bool CanMsg_0x6F::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x6F)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LocationLight_sts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &locationlight_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BigLight_sts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &biglight_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 TurnLeftLight_sts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &turnleftlight_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 TurnRightLight_sts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &turnrightlight_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 WorkLight_sts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &worklight_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Park_sts = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &park_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 seat_sts = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SystemWork_sts = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &systemwork_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vehicleready = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicleready_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BatteryFault_normal = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &batteryfault_normal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BatteryHVTurnOFF = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &batteryhvturnoff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MotorOverheat_warning = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &motoroverheat_warning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 VehicleFault = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehiclefault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Charge_sts = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &charge_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BatteryFault_major = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &batteryfault_major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 VehicleCharge_remind = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehiclecharge_remind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 software_version = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &software_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x6F)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x6F)
  return false;
#undef DO_
}

void CanMsg_0x6F::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x6F)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 LocationLight_sts = 2;
  if (this->locationlight_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->locationlight_sts(), output);
  }

  // uint32 BigLight_sts = 3;
  if (this->biglight_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->biglight_sts(), output);
  }

  // uint32 TurnLeftLight_sts = 4;
  if (this->turnleftlight_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->turnleftlight_sts(), output);
  }

  // uint32 TurnRightLight_sts = 5;
  if (this->turnrightlight_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->turnrightlight_sts(), output);
  }

  // uint32 WorkLight_sts = 6;
  if (this->worklight_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->worklight_sts(), output);
  }

  // uint32 Park_sts = 7;
  if (this->park_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->park_sts(), output);
  }

  // uint32 seat_sts = 8;
  if (this->seat_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->seat_sts(), output);
  }

  // uint32 SystemWork_sts = 9;
  if (this->systemwork_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->systemwork_sts(), output);
  }

  // uint32 vehicleready = 10;
  if (this->vehicleready() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->vehicleready(), output);
  }

  // uint32 BatteryFault_normal = 11;
  if (this->batteryfault_normal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->batteryfault_normal(), output);
  }

  // uint32 BatteryHVTurnOFF = 12;
  if (this->batteryhvturnoff() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->batteryhvturnoff(), output);
  }

  // uint32 MotorOverheat_warning = 13;
  if (this->motoroverheat_warning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->motoroverheat_warning(), output);
  }

  // uint32 VehicleFault = 14;
  if (this->vehiclefault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->vehiclefault(), output);
  }

  // uint32 Charge_sts = 15;
  if (this->charge_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->charge_sts(), output);
  }

  // uint32 BatteryFault_major = 16;
  if (this->batteryfault_major() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->batteryfault_major(), output);
  }

  // uint32 VehicleCharge_remind = 17;
  if (this->vehiclecharge_remind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->vehiclecharge_remind(), output);
  }

  // uint32 software_version = 18;
  if (this->software_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->software_version(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x6F)
}

::google::protobuf::uint8* CanMsg_0x6F::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x6F)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 LocationLight_sts = 2;
  if (this->locationlight_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->locationlight_sts(), target);
  }

  // uint32 BigLight_sts = 3;
  if (this->biglight_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->biglight_sts(), target);
  }

  // uint32 TurnLeftLight_sts = 4;
  if (this->turnleftlight_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->turnleftlight_sts(), target);
  }

  // uint32 TurnRightLight_sts = 5;
  if (this->turnrightlight_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->turnrightlight_sts(), target);
  }

  // uint32 WorkLight_sts = 6;
  if (this->worklight_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->worklight_sts(), target);
  }

  // uint32 Park_sts = 7;
  if (this->park_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->park_sts(), target);
  }

  // uint32 seat_sts = 8;
  if (this->seat_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->seat_sts(), target);
  }

  // uint32 SystemWork_sts = 9;
  if (this->systemwork_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->systemwork_sts(), target);
  }

  // uint32 vehicleready = 10;
  if (this->vehicleready() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->vehicleready(), target);
  }

  // uint32 BatteryFault_normal = 11;
  if (this->batteryfault_normal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->batteryfault_normal(), target);
  }

  // uint32 BatteryHVTurnOFF = 12;
  if (this->batteryhvturnoff() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->batteryhvturnoff(), target);
  }

  // uint32 MotorOverheat_warning = 13;
  if (this->motoroverheat_warning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->motoroverheat_warning(), target);
  }

  // uint32 VehicleFault = 14;
  if (this->vehiclefault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->vehiclefault(), target);
  }

  // uint32 Charge_sts = 15;
  if (this->charge_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->charge_sts(), target);
  }

  // uint32 BatteryFault_major = 16;
  if (this->batteryfault_major() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->batteryfault_major(), target);
  }

  // uint32 VehicleCharge_remind = 17;
  if (this->vehiclecharge_remind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->vehiclecharge_remind(), target);
  }

  // uint32 software_version = 18;
  if (this->software_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->software_version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x6F)
  return target;
}

size_t CanMsg_0x6F::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x6F)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 LocationLight_sts = 2;
  if (this->locationlight_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->locationlight_sts());
  }

  // uint32 BigLight_sts = 3;
  if (this->biglight_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->biglight_sts());
  }

  // uint32 TurnLeftLight_sts = 4;
  if (this->turnleftlight_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->turnleftlight_sts());
  }

  // uint32 TurnRightLight_sts = 5;
  if (this->turnrightlight_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->turnrightlight_sts());
  }

  // uint32 WorkLight_sts = 6;
  if (this->worklight_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->worklight_sts());
  }

  // uint32 Park_sts = 7;
  if (this->park_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->park_sts());
  }

  // uint32 seat_sts = 8;
  if (this->seat_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat_sts());
  }

  // uint32 SystemWork_sts = 9;
  if (this->systemwork_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->systemwork_sts());
  }

  // uint32 vehicleready = 10;
  if (this->vehicleready() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicleready());
  }

  // uint32 BatteryFault_normal = 11;
  if (this->batteryfault_normal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->batteryfault_normal());
  }

  // uint32 BatteryHVTurnOFF = 12;
  if (this->batteryhvturnoff() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->batteryhvturnoff());
  }

  // uint32 MotorOverheat_warning = 13;
  if (this->motoroverheat_warning() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->motoroverheat_warning());
  }

  // uint32 VehicleFault = 14;
  if (this->vehiclefault() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehiclefault());
  }

  // uint32 Charge_sts = 15;
  if (this->charge_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->charge_sts());
  }

  // uint32 BatteryFault_major = 16;
  if (this->batteryfault_major() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->batteryfault_major());
  }

  // uint32 VehicleCharge_remind = 17;
  if (this->vehiclecharge_remind() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehiclecharge_remind());
  }

  // uint32 software_version = 18;
  if (this->software_version() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->software_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x6F::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x6F)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x6F* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x6F>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x6F)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x6F)
    MergeFrom(*source);
  }
}

void CanMsg_0x6F::MergeFrom(const CanMsg_0x6F& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x6F)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.locationlight_sts() != 0) {
    set_locationlight_sts(from.locationlight_sts());
  }
  if (from.biglight_sts() != 0) {
    set_biglight_sts(from.biglight_sts());
  }
  if (from.turnleftlight_sts() != 0) {
    set_turnleftlight_sts(from.turnleftlight_sts());
  }
  if (from.turnrightlight_sts() != 0) {
    set_turnrightlight_sts(from.turnrightlight_sts());
  }
  if (from.worklight_sts() != 0) {
    set_worklight_sts(from.worklight_sts());
  }
  if (from.park_sts() != 0) {
    set_park_sts(from.park_sts());
  }
  if (from.seat_sts() != 0) {
    set_seat_sts(from.seat_sts());
  }
  if (from.systemwork_sts() != 0) {
    set_systemwork_sts(from.systemwork_sts());
  }
  if (from.vehicleready() != 0) {
    set_vehicleready(from.vehicleready());
  }
  if (from.batteryfault_normal() != 0) {
    set_batteryfault_normal(from.batteryfault_normal());
  }
  if (from.batteryhvturnoff() != 0) {
    set_batteryhvturnoff(from.batteryhvturnoff());
  }
  if (from.motoroverheat_warning() != 0) {
    set_motoroverheat_warning(from.motoroverheat_warning());
  }
  if (from.vehiclefault() != 0) {
    set_vehiclefault(from.vehiclefault());
  }
  if (from.charge_sts() != 0) {
    set_charge_sts(from.charge_sts());
  }
  if (from.batteryfault_major() != 0) {
    set_batteryfault_major(from.batteryfault_major());
  }
  if (from.vehiclecharge_remind() != 0) {
    set_vehiclecharge_remind(from.vehiclecharge_remind());
  }
  if (from.software_version() != 0) {
    set_software_version(from.software_version());
  }
}

void CanMsg_0x6F::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x6F)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x6F::CopyFrom(const CanMsg_0x6F& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x6F)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x6F::IsInitialized() const {
  return true;
}

void CanMsg_0x6F::Swap(CanMsg_0x6F* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x6F::InternalSwap(CanMsg_0x6F* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(locationlight_sts_, other->locationlight_sts_);
  std::swap(biglight_sts_, other->biglight_sts_);
  std::swap(turnleftlight_sts_, other->turnleftlight_sts_);
  std::swap(turnrightlight_sts_, other->turnrightlight_sts_);
  std::swap(worklight_sts_, other->worklight_sts_);
  std::swap(park_sts_, other->park_sts_);
  std::swap(seat_sts_, other->seat_sts_);
  std::swap(systemwork_sts_, other->systemwork_sts_);
  std::swap(vehicleready_, other->vehicleready_);
  std::swap(batteryfault_normal_, other->batteryfault_normal_);
  std::swap(batteryhvturnoff_, other->batteryhvturnoff_);
  std::swap(motoroverheat_warning_, other->motoroverheat_warning_);
  std::swap(vehiclefault_, other->vehiclefault_);
  std::swap(charge_sts_, other->charge_sts_);
  std::swap(batteryfault_major_, other->batteryfault_major_);
  std::swap(vehiclecharge_remind_, other->vehiclecharge_remind_);
  std::swap(software_version_, other->software_version_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x6F::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x6F

// bool isValid = 1;
void CanMsg_0x6F::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x6F::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.isValid)
  return isvalid_;
}
void CanMsg_0x6F::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.isValid)
}

// uint32 LocationLight_sts = 2;
void CanMsg_0x6F::clear_locationlight_sts() {
  locationlight_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6F::locationlight_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.LocationLight_sts)
  return locationlight_sts_;
}
void CanMsg_0x6F::set_locationlight_sts(::google::protobuf::uint32 value) {
  
  locationlight_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.LocationLight_sts)
}

// uint32 BigLight_sts = 3;
void CanMsg_0x6F::clear_biglight_sts() {
  biglight_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6F::biglight_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.BigLight_sts)
  return biglight_sts_;
}
void CanMsg_0x6F::set_biglight_sts(::google::protobuf::uint32 value) {
  
  biglight_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.BigLight_sts)
}

// uint32 TurnLeftLight_sts = 4;
void CanMsg_0x6F::clear_turnleftlight_sts() {
  turnleftlight_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6F::turnleftlight_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.TurnLeftLight_sts)
  return turnleftlight_sts_;
}
void CanMsg_0x6F::set_turnleftlight_sts(::google::protobuf::uint32 value) {
  
  turnleftlight_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.TurnLeftLight_sts)
}

// uint32 TurnRightLight_sts = 5;
void CanMsg_0x6F::clear_turnrightlight_sts() {
  turnrightlight_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6F::turnrightlight_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.TurnRightLight_sts)
  return turnrightlight_sts_;
}
void CanMsg_0x6F::set_turnrightlight_sts(::google::protobuf::uint32 value) {
  
  turnrightlight_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.TurnRightLight_sts)
}

// uint32 WorkLight_sts = 6;
void CanMsg_0x6F::clear_worklight_sts() {
  worklight_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6F::worklight_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.WorkLight_sts)
  return worklight_sts_;
}
void CanMsg_0x6F::set_worklight_sts(::google::protobuf::uint32 value) {
  
  worklight_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.WorkLight_sts)
}

// uint32 Park_sts = 7;
void CanMsg_0x6F::clear_park_sts() {
  park_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6F::park_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.Park_sts)
  return park_sts_;
}
void CanMsg_0x6F::set_park_sts(::google::protobuf::uint32 value) {
  
  park_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.Park_sts)
}

// uint32 seat_sts = 8;
void CanMsg_0x6F::clear_seat_sts() {
  seat_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6F::seat_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.seat_sts)
  return seat_sts_;
}
void CanMsg_0x6F::set_seat_sts(::google::protobuf::uint32 value) {
  
  seat_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.seat_sts)
}

// uint32 SystemWork_sts = 9;
void CanMsg_0x6F::clear_systemwork_sts() {
  systemwork_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6F::systemwork_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.SystemWork_sts)
  return systemwork_sts_;
}
void CanMsg_0x6F::set_systemwork_sts(::google::protobuf::uint32 value) {
  
  systemwork_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.SystemWork_sts)
}

// uint32 vehicleready = 10;
void CanMsg_0x6F::clear_vehicleready() {
  vehicleready_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6F::vehicleready() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.vehicleready)
  return vehicleready_;
}
void CanMsg_0x6F::set_vehicleready(::google::protobuf::uint32 value) {
  
  vehicleready_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.vehicleready)
}

// uint32 BatteryFault_normal = 11;
void CanMsg_0x6F::clear_batteryfault_normal() {
  batteryfault_normal_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6F::batteryfault_normal() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.BatteryFault_normal)
  return batteryfault_normal_;
}
void CanMsg_0x6F::set_batteryfault_normal(::google::protobuf::uint32 value) {
  
  batteryfault_normal_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.BatteryFault_normal)
}

// uint32 BatteryHVTurnOFF = 12;
void CanMsg_0x6F::clear_batteryhvturnoff() {
  batteryhvturnoff_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6F::batteryhvturnoff() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.BatteryHVTurnOFF)
  return batteryhvturnoff_;
}
void CanMsg_0x6F::set_batteryhvturnoff(::google::protobuf::uint32 value) {
  
  batteryhvturnoff_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.BatteryHVTurnOFF)
}

// uint32 MotorOverheat_warning = 13;
void CanMsg_0x6F::clear_motoroverheat_warning() {
  motoroverheat_warning_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6F::motoroverheat_warning() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.MotorOverheat_warning)
  return motoroverheat_warning_;
}
void CanMsg_0x6F::set_motoroverheat_warning(::google::protobuf::uint32 value) {
  
  motoroverheat_warning_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.MotorOverheat_warning)
}

// uint32 VehicleFault = 14;
void CanMsg_0x6F::clear_vehiclefault() {
  vehiclefault_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6F::vehiclefault() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.VehicleFault)
  return vehiclefault_;
}
void CanMsg_0x6F::set_vehiclefault(::google::protobuf::uint32 value) {
  
  vehiclefault_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.VehicleFault)
}

// uint32 Charge_sts = 15;
void CanMsg_0x6F::clear_charge_sts() {
  charge_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6F::charge_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.Charge_sts)
  return charge_sts_;
}
void CanMsg_0x6F::set_charge_sts(::google::protobuf::uint32 value) {
  
  charge_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.Charge_sts)
}

// uint32 BatteryFault_major = 16;
void CanMsg_0x6F::clear_batteryfault_major() {
  batteryfault_major_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6F::batteryfault_major() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.BatteryFault_major)
  return batteryfault_major_;
}
void CanMsg_0x6F::set_batteryfault_major(::google::protobuf::uint32 value) {
  
  batteryfault_major_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.BatteryFault_major)
}

// uint32 VehicleCharge_remind = 17;
void CanMsg_0x6F::clear_vehiclecharge_remind() {
  vehiclecharge_remind_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6F::vehiclecharge_remind() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.VehicleCharge_remind)
  return vehiclecharge_remind_;
}
void CanMsg_0x6F::set_vehiclecharge_remind(::google::protobuf::uint32 value) {
  
  vehiclecharge_remind_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.VehicleCharge_remind)
}

// uint32 software_version = 18;
void CanMsg_0x6F::clear_software_version() {
  software_version_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x6F::software_version() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x6F.software_version)
  return software_version_;
}
void CanMsg_0x6F::set_software_version(::google::protobuf::uint32 value) {
  
  software_version_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x6F.software_version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x70::kIsValidFieldNumber;
const int CanMsg_0x70::kTurnLeftIFieldNumber;
const int CanMsg_0x70::kTurnRightIFieldNumber;
const int CanMsg_0x70::kWorkFlagIFieldNumber;
const int CanMsg_0x70::kTrunOnFlagIFieldNumber;
const int CanMsg_0x70::kLowBeamIFieldNumber;
const int CanMsg_0x70::kSmallLightIFieldNumber;
const int CanMsg_0x70::kAutoDriveIFieldNumber;
const int CanMsg_0x70::kEmergencyFlashIFieldNumber;
const int CanMsg_0x70::kStopIFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x70::CanMsg_0x70()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x70)
}
CanMsg_0x70::CanMsg_0x70(const CanMsg_0x70& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&stop_i_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(stop_i_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x70)
}

void CanMsg_0x70::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&stop_i_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(stop_i_));
  _cached_size_ = 0;
}

CanMsg_0x70::~CanMsg_0x70() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x70)
  SharedDtor();
}

void CanMsg_0x70::SharedDtor() {
}

void CanMsg_0x70::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x70::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x70& CanMsg_0x70::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x70* CanMsg_0x70::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x70* n = new CanMsg_0x70;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x70::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x70)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&stop_i_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(stop_i_));
}

bool CanMsg_0x70::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x70)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 TurnLeft_I = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &turnleft_i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 TurnRight_I = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &turnright_i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 workFlag_I = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &workflag_i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 TrunOnFlag_I = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trunonflag_i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LowBeam_I = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lowbeam_i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 small_light_I = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &small_light_i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 AutoDrive_I = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &autodrive_i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EmergencyFlash_I = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &emergencyflash_i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Stop_I = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stop_i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x70)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x70)
  return false;
#undef DO_
}

void CanMsg_0x70::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x70)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 TurnLeft_I = 2;
  if (this->turnleft_i() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->turnleft_i(), output);
  }

  // uint32 TurnRight_I = 3;
  if (this->turnright_i() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->turnright_i(), output);
  }

  // uint32 workFlag_I = 4;
  if (this->workflag_i() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->workflag_i(), output);
  }

  // uint32 TrunOnFlag_I = 5;
  if (this->trunonflag_i() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->trunonflag_i(), output);
  }

  // uint32 LowBeam_I = 6;
  if (this->lowbeam_i() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->lowbeam_i(), output);
  }

  // uint32 small_light_I = 7;
  if (this->small_light_i() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->small_light_i(), output);
  }

  // uint32 AutoDrive_I = 8;
  if (this->autodrive_i() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->autodrive_i(), output);
  }

  // uint32 EmergencyFlash_I = 9;
  if (this->emergencyflash_i() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->emergencyflash_i(), output);
  }

  // uint32 Stop_I = 10;
  if (this->stop_i() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->stop_i(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x70)
}

::google::protobuf::uint8* CanMsg_0x70::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x70)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 TurnLeft_I = 2;
  if (this->turnleft_i() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->turnleft_i(), target);
  }

  // uint32 TurnRight_I = 3;
  if (this->turnright_i() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->turnright_i(), target);
  }

  // uint32 workFlag_I = 4;
  if (this->workflag_i() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->workflag_i(), target);
  }

  // uint32 TrunOnFlag_I = 5;
  if (this->trunonflag_i() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->trunonflag_i(), target);
  }

  // uint32 LowBeam_I = 6;
  if (this->lowbeam_i() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->lowbeam_i(), target);
  }

  // uint32 small_light_I = 7;
  if (this->small_light_i() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->small_light_i(), target);
  }

  // uint32 AutoDrive_I = 8;
  if (this->autodrive_i() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->autodrive_i(), target);
  }

  // uint32 EmergencyFlash_I = 9;
  if (this->emergencyflash_i() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->emergencyflash_i(), target);
  }

  // uint32 Stop_I = 10;
  if (this->stop_i() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->stop_i(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x70)
  return target;
}

size_t CanMsg_0x70::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x70)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 TurnLeft_I = 2;
  if (this->turnleft_i() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->turnleft_i());
  }

  // uint32 TurnRight_I = 3;
  if (this->turnright_i() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->turnright_i());
  }

  // uint32 workFlag_I = 4;
  if (this->workflag_i() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->workflag_i());
  }

  // uint32 TrunOnFlag_I = 5;
  if (this->trunonflag_i() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->trunonflag_i());
  }

  // uint32 LowBeam_I = 6;
  if (this->lowbeam_i() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lowbeam_i());
  }

  // uint32 small_light_I = 7;
  if (this->small_light_i() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->small_light_i());
  }

  // uint32 AutoDrive_I = 8;
  if (this->autodrive_i() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->autodrive_i());
  }

  // uint32 EmergencyFlash_I = 9;
  if (this->emergencyflash_i() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->emergencyflash_i());
  }

  // uint32 Stop_I = 10;
  if (this->stop_i() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stop_i());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x70::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x70)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x70* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x70>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x70)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x70)
    MergeFrom(*source);
  }
}

void CanMsg_0x70::MergeFrom(const CanMsg_0x70& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x70)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.turnleft_i() != 0) {
    set_turnleft_i(from.turnleft_i());
  }
  if (from.turnright_i() != 0) {
    set_turnright_i(from.turnright_i());
  }
  if (from.workflag_i() != 0) {
    set_workflag_i(from.workflag_i());
  }
  if (from.trunonflag_i() != 0) {
    set_trunonflag_i(from.trunonflag_i());
  }
  if (from.lowbeam_i() != 0) {
    set_lowbeam_i(from.lowbeam_i());
  }
  if (from.small_light_i() != 0) {
    set_small_light_i(from.small_light_i());
  }
  if (from.autodrive_i() != 0) {
    set_autodrive_i(from.autodrive_i());
  }
  if (from.emergencyflash_i() != 0) {
    set_emergencyflash_i(from.emergencyflash_i());
  }
  if (from.stop_i() != 0) {
    set_stop_i(from.stop_i());
  }
}

void CanMsg_0x70::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x70)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x70::CopyFrom(const CanMsg_0x70& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x70)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x70::IsInitialized() const {
  return true;
}

void CanMsg_0x70::Swap(CanMsg_0x70* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x70::InternalSwap(CanMsg_0x70* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(turnleft_i_, other->turnleft_i_);
  std::swap(turnright_i_, other->turnright_i_);
  std::swap(workflag_i_, other->workflag_i_);
  std::swap(trunonflag_i_, other->trunonflag_i_);
  std::swap(lowbeam_i_, other->lowbeam_i_);
  std::swap(small_light_i_, other->small_light_i_);
  std::swap(autodrive_i_, other->autodrive_i_);
  std::swap(emergencyflash_i_, other->emergencyflash_i_);
  std::swap(stop_i_, other->stop_i_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x70::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x70

// bool isValid = 1;
void CanMsg_0x70::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x70::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x70.isValid)
  return isvalid_;
}
void CanMsg_0x70::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x70.isValid)
}

// uint32 TurnLeft_I = 2;
void CanMsg_0x70::clear_turnleft_i() {
  turnleft_i_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x70::turnleft_i() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x70.TurnLeft_I)
  return turnleft_i_;
}
void CanMsg_0x70::set_turnleft_i(::google::protobuf::uint32 value) {
  
  turnleft_i_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x70.TurnLeft_I)
}

// uint32 TurnRight_I = 3;
void CanMsg_0x70::clear_turnright_i() {
  turnright_i_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x70::turnright_i() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x70.TurnRight_I)
  return turnright_i_;
}
void CanMsg_0x70::set_turnright_i(::google::protobuf::uint32 value) {
  
  turnright_i_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x70.TurnRight_I)
}

// uint32 workFlag_I = 4;
void CanMsg_0x70::clear_workflag_i() {
  workflag_i_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x70::workflag_i() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x70.workFlag_I)
  return workflag_i_;
}
void CanMsg_0x70::set_workflag_i(::google::protobuf::uint32 value) {
  
  workflag_i_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x70.workFlag_I)
}

// uint32 TrunOnFlag_I = 5;
void CanMsg_0x70::clear_trunonflag_i() {
  trunonflag_i_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x70::trunonflag_i() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x70.TrunOnFlag_I)
  return trunonflag_i_;
}
void CanMsg_0x70::set_trunonflag_i(::google::protobuf::uint32 value) {
  
  trunonflag_i_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x70.TrunOnFlag_I)
}

// uint32 LowBeam_I = 6;
void CanMsg_0x70::clear_lowbeam_i() {
  lowbeam_i_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x70::lowbeam_i() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x70.LowBeam_I)
  return lowbeam_i_;
}
void CanMsg_0x70::set_lowbeam_i(::google::protobuf::uint32 value) {
  
  lowbeam_i_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x70.LowBeam_I)
}

// uint32 small_light_I = 7;
void CanMsg_0x70::clear_small_light_i() {
  small_light_i_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x70::small_light_i() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x70.small_light_I)
  return small_light_i_;
}
void CanMsg_0x70::set_small_light_i(::google::protobuf::uint32 value) {
  
  small_light_i_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x70.small_light_I)
}

// uint32 AutoDrive_I = 8;
void CanMsg_0x70::clear_autodrive_i() {
  autodrive_i_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x70::autodrive_i() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x70.AutoDrive_I)
  return autodrive_i_;
}
void CanMsg_0x70::set_autodrive_i(::google::protobuf::uint32 value) {
  
  autodrive_i_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x70.AutoDrive_I)
}

// uint32 EmergencyFlash_I = 9;
void CanMsg_0x70::clear_emergencyflash_i() {
  emergencyflash_i_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x70::emergencyflash_i() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x70.EmergencyFlash_I)
  return emergencyflash_i_;
}
void CanMsg_0x70::set_emergencyflash_i(::google::protobuf::uint32 value) {
  
  emergencyflash_i_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x70.EmergencyFlash_I)
}

// uint32 Stop_I = 10;
void CanMsg_0x70::clear_stop_i() {
  stop_i_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x70::stop_i() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x70.Stop_I)
  return stop_i_;
}
void CanMsg_0x70::set_stop_i(::google::protobuf::uint32 value) {
  
  stop_i_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x70.Stop_I)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x71::kIsValidFieldNumber;
const int CanMsg_0x71::kBrakeOilLineFieldNumber;
const int CanMsg_0x71::kBoxUpFieldNumber;
const int CanMsg_0x71::kBoxDowmFieldNumber;
const int CanMsg_0x71::kBoxArriveFieldNumber;
const int CanMsg_0x71::kChengGanArriveFieldNumber;
const int CanMsg_0x71::kEbanSwitchFieldNumber;
const int CanMsg_0x71::kBoxDoorSwitchFieldNumber;
const int CanMsg_0x71::kLeftBrushArriveFieldNumber;
const int CanMsg_0x71::kRightBrushArriveFieldNumber;
const int CanMsg_0x71::kLeftBrushOpenFieldNumber;
const int CanMsg_0x71::kLeftBrushCloseFieldNumber;
const int CanMsg_0x71::kRightBrushOpenFieldNumber;
const int CanMsg_0x71::kRightBrushCloseFieldNumber;
const int CanMsg_0x71::kDustbinReturnSwitchFieldNumber;
const int CanMsg_0x71::kWaterLineShowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x71::CanMsg_0x71()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x71)
}
CanMsg_0x71::CanMsg_0x71(const CanMsg_0x71& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&waterline_show_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(waterline_show_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x71)
}

void CanMsg_0x71::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&waterline_show_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(waterline_show_));
  _cached_size_ = 0;
}

CanMsg_0x71::~CanMsg_0x71() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x71)
  SharedDtor();
}

void CanMsg_0x71::SharedDtor() {
}

void CanMsg_0x71::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x71::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x71& CanMsg_0x71::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x71* CanMsg_0x71::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x71* n = new CanMsg_0x71;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x71::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x71)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&waterline_show_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(waterline_show_));
}

bool CanMsg_0x71::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x71)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BrakeOil_line = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &brakeoil_line_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Box_up = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &box_up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Box_dowm = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &box_dowm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Box_Arrive = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &box_arrive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ChengGan_Arrive = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chenggan_arrive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Eban_switch = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eban_switch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BoxDoor_switch = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &boxdoor_switch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LeftBrush_arrive = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftbrush_arrive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RightBrush_arrive = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightbrush_arrive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LeftBrush_open = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftbrush_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LeftBrush_close = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftbrush_close_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RightBrush_open = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightbrush_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RightBrush_close = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightbrush_close_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dustbin_returnSwitch = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dustbin_returnswitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 WaterLine_show = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &waterline_show_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x71)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x71)
  return false;
#undef DO_
}

void CanMsg_0x71::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x71)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 BrakeOil_line = 2;
  if (this->brakeoil_line() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->brakeoil_line(), output);
  }

  // uint32 Box_up = 3;
  if (this->box_up() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->box_up(), output);
  }

  // uint32 Box_dowm = 4;
  if (this->box_dowm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->box_dowm(), output);
  }

  // uint32 Box_Arrive = 5;
  if (this->box_arrive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->box_arrive(), output);
  }

  // uint32 ChengGan_Arrive = 6;
  if (this->chenggan_arrive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->chenggan_arrive(), output);
  }

  // uint32 Eban_switch = 7;
  if (this->eban_switch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->eban_switch(), output);
  }

  // uint32 BoxDoor_switch = 8;
  if (this->boxdoor_switch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->boxdoor_switch(), output);
  }

  // uint32 LeftBrush_arrive = 9;
  if (this->leftbrush_arrive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->leftbrush_arrive(), output);
  }

  // uint32 RightBrush_arrive = 10;
  if (this->rightbrush_arrive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->rightbrush_arrive(), output);
  }

  // uint32 LeftBrush_open = 11;
  if (this->leftbrush_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->leftbrush_open(), output);
  }

  // uint32 LeftBrush_close = 12;
  if (this->leftbrush_close() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->leftbrush_close(), output);
  }

  // uint32 RightBrush_open = 13;
  if (this->rightbrush_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->rightbrush_open(), output);
  }

  // uint32 RightBrush_close = 14;
  if (this->rightbrush_close() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->rightbrush_close(), output);
  }

  // uint32 dustbin_returnSwitch = 15;
  if (this->dustbin_returnswitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->dustbin_returnswitch(), output);
  }

  // uint32 WaterLine_show = 16;
  if (this->waterline_show() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->waterline_show(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x71)
}

::google::protobuf::uint8* CanMsg_0x71::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x71)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 BrakeOil_line = 2;
  if (this->brakeoil_line() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->brakeoil_line(), target);
  }

  // uint32 Box_up = 3;
  if (this->box_up() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->box_up(), target);
  }

  // uint32 Box_dowm = 4;
  if (this->box_dowm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->box_dowm(), target);
  }

  // uint32 Box_Arrive = 5;
  if (this->box_arrive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->box_arrive(), target);
  }

  // uint32 ChengGan_Arrive = 6;
  if (this->chenggan_arrive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->chenggan_arrive(), target);
  }

  // uint32 Eban_switch = 7;
  if (this->eban_switch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->eban_switch(), target);
  }

  // uint32 BoxDoor_switch = 8;
  if (this->boxdoor_switch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->boxdoor_switch(), target);
  }

  // uint32 LeftBrush_arrive = 9;
  if (this->leftbrush_arrive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->leftbrush_arrive(), target);
  }

  // uint32 RightBrush_arrive = 10;
  if (this->rightbrush_arrive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->rightbrush_arrive(), target);
  }

  // uint32 LeftBrush_open = 11;
  if (this->leftbrush_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->leftbrush_open(), target);
  }

  // uint32 LeftBrush_close = 12;
  if (this->leftbrush_close() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->leftbrush_close(), target);
  }

  // uint32 RightBrush_open = 13;
  if (this->rightbrush_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->rightbrush_open(), target);
  }

  // uint32 RightBrush_close = 14;
  if (this->rightbrush_close() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->rightbrush_close(), target);
  }

  // uint32 dustbin_returnSwitch = 15;
  if (this->dustbin_returnswitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->dustbin_returnswitch(), target);
  }

  // uint32 WaterLine_show = 16;
  if (this->waterline_show() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->waterline_show(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x71)
  return target;
}

size_t CanMsg_0x71::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x71)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 BrakeOil_line = 2;
  if (this->brakeoil_line() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->brakeoil_line());
  }

  // uint32 Box_up = 3;
  if (this->box_up() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->box_up());
  }

  // uint32 Box_dowm = 4;
  if (this->box_dowm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->box_dowm());
  }

  // uint32 Box_Arrive = 5;
  if (this->box_arrive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->box_arrive());
  }

  // uint32 ChengGan_Arrive = 6;
  if (this->chenggan_arrive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chenggan_arrive());
  }

  // uint32 Eban_switch = 7;
  if (this->eban_switch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eban_switch());
  }

  // uint32 BoxDoor_switch = 8;
  if (this->boxdoor_switch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->boxdoor_switch());
  }

  // uint32 LeftBrush_arrive = 9;
  if (this->leftbrush_arrive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftbrush_arrive());
  }

  // uint32 RightBrush_arrive = 10;
  if (this->rightbrush_arrive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rightbrush_arrive());
  }

  // uint32 LeftBrush_open = 11;
  if (this->leftbrush_open() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftbrush_open());
  }

  // uint32 LeftBrush_close = 12;
  if (this->leftbrush_close() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftbrush_close());
  }

  // uint32 RightBrush_open = 13;
  if (this->rightbrush_open() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rightbrush_open());
  }

  // uint32 RightBrush_close = 14;
  if (this->rightbrush_close() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rightbrush_close());
  }

  // uint32 dustbin_returnSwitch = 15;
  if (this->dustbin_returnswitch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dustbin_returnswitch());
  }

  // uint32 WaterLine_show = 16;
  if (this->waterline_show() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->waterline_show());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x71::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x71)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x71* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x71>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x71)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x71)
    MergeFrom(*source);
  }
}

void CanMsg_0x71::MergeFrom(const CanMsg_0x71& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x71)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.brakeoil_line() != 0) {
    set_brakeoil_line(from.brakeoil_line());
  }
  if (from.box_up() != 0) {
    set_box_up(from.box_up());
  }
  if (from.box_dowm() != 0) {
    set_box_dowm(from.box_dowm());
  }
  if (from.box_arrive() != 0) {
    set_box_arrive(from.box_arrive());
  }
  if (from.chenggan_arrive() != 0) {
    set_chenggan_arrive(from.chenggan_arrive());
  }
  if (from.eban_switch() != 0) {
    set_eban_switch(from.eban_switch());
  }
  if (from.boxdoor_switch() != 0) {
    set_boxdoor_switch(from.boxdoor_switch());
  }
  if (from.leftbrush_arrive() != 0) {
    set_leftbrush_arrive(from.leftbrush_arrive());
  }
  if (from.rightbrush_arrive() != 0) {
    set_rightbrush_arrive(from.rightbrush_arrive());
  }
  if (from.leftbrush_open() != 0) {
    set_leftbrush_open(from.leftbrush_open());
  }
  if (from.leftbrush_close() != 0) {
    set_leftbrush_close(from.leftbrush_close());
  }
  if (from.rightbrush_open() != 0) {
    set_rightbrush_open(from.rightbrush_open());
  }
  if (from.rightbrush_close() != 0) {
    set_rightbrush_close(from.rightbrush_close());
  }
  if (from.dustbin_returnswitch() != 0) {
    set_dustbin_returnswitch(from.dustbin_returnswitch());
  }
  if (from.waterline_show() != 0) {
    set_waterline_show(from.waterline_show());
  }
}

void CanMsg_0x71::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x71)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x71::CopyFrom(const CanMsg_0x71& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x71)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x71::IsInitialized() const {
  return true;
}

void CanMsg_0x71::Swap(CanMsg_0x71* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x71::InternalSwap(CanMsg_0x71* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(brakeoil_line_, other->brakeoil_line_);
  std::swap(box_up_, other->box_up_);
  std::swap(box_dowm_, other->box_dowm_);
  std::swap(box_arrive_, other->box_arrive_);
  std::swap(chenggan_arrive_, other->chenggan_arrive_);
  std::swap(eban_switch_, other->eban_switch_);
  std::swap(boxdoor_switch_, other->boxdoor_switch_);
  std::swap(leftbrush_arrive_, other->leftbrush_arrive_);
  std::swap(rightbrush_arrive_, other->rightbrush_arrive_);
  std::swap(leftbrush_open_, other->leftbrush_open_);
  std::swap(leftbrush_close_, other->leftbrush_close_);
  std::swap(rightbrush_open_, other->rightbrush_open_);
  std::swap(rightbrush_close_, other->rightbrush_close_);
  std::swap(dustbin_returnswitch_, other->dustbin_returnswitch_);
  std::swap(waterline_show_, other->waterline_show_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x71::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x71

// bool isValid = 1;
void CanMsg_0x71::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x71::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x71.isValid)
  return isvalid_;
}
void CanMsg_0x71::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x71.isValid)
}

// uint32 BrakeOil_line = 2;
void CanMsg_0x71::clear_brakeoil_line() {
  brakeoil_line_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x71::brakeoil_line() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x71.BrakeOil_line)
  return brakeoil_line_;
}
void CanMsg_0x71::set_brakeoil_line(::google::protobuf::uint32 value) {
  
  brakeoil_line_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x71.BrakeOil_line)
}

// uint32 Box_up = 3;
void CanMsg_0x71::clear_box_up() {
  box_up_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x71::box_up() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x71.Box_up)
  return box_up_;
}
void CanMsg_0x71::set_box_up(::google::protobuf::uint32 value) {
  
  box_up_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x71.Box_up)
}

// uint32 Box_dowm = 4;
void CanMsg_0x71::clear_box_dowm() {
  box_dowm_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x71::box_dowm() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x71.Box_dowm)
  return box_dowm_;
}
void CanMsg_0x71::set_box_dowm(::google::protobuf::uint32 value) {
  
  box_dowm_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x71.Box_dowm)
}

// uint32 Box_Arrive = 5;
void CanMsg_0x71::clear_box_arrive() {
  box_arrive_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x71::box_arrive() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x71.Box_Arrive)
  return box_arrive_;
}
void CanMsg_0x71::set_box_arrive(::google::protobuf::uint32 value) {
  
  box_arrive_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x71.Box_Arrive)
}

// uint32 ChengGan_Arrive = 6;
void CanMsg_0x71::clear_chenggan_arrive() {
  chenggan_arrive_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x71::chenggan_arrive() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x71.ChengGan_Arrive)
  return chenggan_arrive_;
}
void CanMsg_0x71::set_chenggan_arrive(::google::protobuf::uint32 value) {
  
  chenggan_arrive_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x71.ChengGan_Arrive)
}

// uint32 Eban_switch = 7;
void CanMsg_0x71::clear_eban_switch() {
  eban_switch_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x71::eban_switch() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x71.Eban_switch)
  return eban_switch_;
}
void CanMsg_0x71::set_eban_switch(::google::protobuf::uint32 value) {
  
  eban_switch_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x71.Eban_switch)
}

// uint32 BoxDoor_switch = 8;
void CanMsg_0x71::clear_boxdoor_switch() {
  boxdoor_switch_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x71::boxdoor_switch() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x71.BoxDoor_switch)
  return boxdoor_switch_;
}
void CanMsg_0x71::set_boxdoor_switch(::google::protobuf::uint32 value) {
  
  boxdoor_switch_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x71.BoxDoor_switch)
}

// uint32 LeftBrush_arrive = 9;
void CanMsg_0x71::clear_leftbrush_arrive() {
  leftbrush_arrive_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x71::leftbrush_arrive() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x71.LeftBrush_arrive)
  return leftbrush_arrive_;
}
void CanMsg_0x71::set_leftbrush_arrive(::google::protobuf::uint32 value) {
  
  leftbrush_arrive_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x71.LeftBrush_arrive)
}

// uint32 RightBrush_arrive = 10;
void CanMsg_0x71::clear_rightbrush_arrive() {
  rightbrush_arrive_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x71::rightbrush_arrive() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x71.RightBrush_arrive)
  return rightbrush_arrive_;
}
void CanMsg_0x71::set_rightbrush_arrive(::google::protobuf::uint32 value) {
  
  rightbrush_arrive_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x71.RightBrush_arrive)
}

// uint32 LeftBrush_open = 11;
void CanMsg_0x71::clear_leftbrush_open() {
  leftbrush_open_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x71::leftbrush_open() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x71.LeftBrush_open)
  return leftbrush_open_;
}
void CanMsg_0x71::set_leftbrush_open(::google::protobuf::uint32 value) {
  
  leftbrush_open_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x71.LeftBrush_open)
}

// uint32 LeftBrush_close = 12;
void CanMsg_0x71::clear_leftbrush_close() {
  leftbrush_close_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x71::leftbrush_close() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x71.LeftBrush_close)
  return leftbrush_close_;
}
void CanMsg_0x71::set_leftbrush_close(::google::protobuf::uint32 value) {
  
  leftbrush_close_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x71.LeftBrush_close)
}

// uint32 RightBrush_open = 13;
void CanMsg_0x71::clear_rightbrush_open() {
  rightbrush_open_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x71::rightbrush_open() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x71.RightBrush_open)
  return rightbrush_open_;
}
void CanMsg_0x71::set_rightbrush_open(::google::protobuf::uint32 value) {
  
  rightbrush_open_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x71.RightBrush_open)
}

// uint32 RightBrush_close = 14;
void CanMsg_0x71::clear_rightbrush_close() {
  rightbrush_close_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x71::rightbrush_close() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x71.RightBrush_close)
  return rightbrush_close_;
}
void CanMsg_0x71::set_rightbrush_close(::google::protobuf::uint32 value) {
  
  rightbrush_close_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x71.RightBrush_close)
}

// uint32 dustbin_returnSwitch = 15;
void CanMsg_0x71::clear_dustbin_returnswitch() {
  dustbin_returnswitch_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x71::dustbin_returnswitch() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x71.dustbin_returnSwitch)
  return dustbin_returnswitch_;
}
void CanMsg_0x71::set_dustbin_returnswitch(::google::protobuf::uint32 value) {
  
  dustbin_returnswitch_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x71.dustbin_returnSwitch)
}

// uint32 WaterLine_show = 16;
void CanMsg_0x71::clear_waterline_show() {
  waterline_show_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x71::waterline_show() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x71.WaterLine_show)
  return waterline_show_;
}
void CanMsg_0x71::set_waterline_show(::google::protobuf::uint32 value) {
  
  waterline_show_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x71.WaterLine_show)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x78::kIsValidFieldNumber;
const int CanMsg_0x78::kTurnLeftLightFieldNumber;
const int CanMsg_0x78::kTurnRightLightFieldNumber;
const int CanMsg_0x78::kLowBeamFieldNumber;
const int CanMsg_0x78::kWorkLightRelayFieldNumber;
const int CanMsg_0x78::kSmallLightFieldNumber;
const int CanMsg_0x78::kReversingLightFieldNumber;
const int CanMsg_0x78::kBrakeLightFieldNumber;
const int CanMsg_0x78::kReversingBuzzerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x78::CanMsg_0x78()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x78)
}
CanMsg_0x78::CanMsg_0x78(const CanMsg_0x78& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&reversing_buzzer_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(reversing_buzzer_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x78)
}

void CanMsg_0x78::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&reversing_buzzer_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(reversing_buzzer_));
  _cached_size_ = 0;
}

CanMsg_0x78::~CanMsg_0x78() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x78)
  SharedDtor();
}

void CanMsg_0x78::SharedDtor() {
}

void CanMsg_0x78::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x78::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x78& CanMsg_0x78::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x78* CanMsg_0x78::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x78* n = new CanMsg_0x78;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x78::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x78)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&reversing_buzzer_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(reversing_buzzer_));
}

bool CanMsg_0x78::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x78)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 TurnLeftLight = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &turnleftlight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 TurnRightLight = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &turnrightlight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LowBeam = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lowbeam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 WorkLight_relay = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &worklight_relay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 small_light = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &small_light_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reversing_light = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reversing_light_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 brake_light = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &brake_light_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Reversing_buzzer = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reversing_buzzer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x78)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x78)
  return false;
#undef DO_
}

void CanMsg_0x78::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x78)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 TurnLeftLight = 2;
  if (this->turnleftlight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->turnleftlight(), output);
  }

  // uint32 TurnRightLight = 3;
  if (this->turnrightlight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->turnrightlight(), output);
  }

  // uint32 LowBeam = 4;
  if (this->lowbeam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->lowbeam(), output);
  }

  // uint32 WorkLight_relay = 5;
  if (this->worklight_relay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->worklight_relay(), output);
  }

  // uint32 small_light = 6;
  if (this->small_light() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->small_light(), output);
  }

  // uint32 reversing_light = 7;
  if (this->reversing_light() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->reversing_light(), output);
  }

  // uint32 brake_light = 8;
  if (this->brake_light() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->brake_light(), output);
  }

  // uint32 Reversing_buzzer = 9;
  if (this->reversing_buzzer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->reversing_buzzer(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x78)
}

::google::protobuf::uint8* CanMsg_0x78::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x78)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 TurnLeftLight = 2;
  if (this->turnleftlight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->turnleftlight(), target);
  }

  // uint32 TurnRightLight = 3;
  if (this->turnrightlight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->turnrightlight(), target);
  }

  // uint32 LowBeam = 4;
  if (this->lowbeam() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->lowbeam(), target);
  }

  // uint32 WorkLight_relay = 5;
  if (this->worklight_relay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->worklight_relay(), target);
  }

  // uint32 small_light = 6;
  if (this->small_light() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->small_light(), target);
  }

  // uint32 reversing_light = 7;
  if (this->reversing_light() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->reversing_light(), target);
  }

  // uint32 brake_light = 8;
  if (this->brake_light() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->brake_light(), target);
  }

  // uint32 Reversing_buzzer = 9;
  if (this->reversing_buzzer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->reversing_buzzer(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x78)
  return target;
}

size_t CanMsg_0x78::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x78)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 TurnLeftLight = 2;
  if (this->turnleftlight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->turnleftlight());
  }

  // uint32 TurnRightLight = 3;
  if (this->turnrightlight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->turnrightlight());
  }

  // uint32 LowBeam = 4;
  if (this->lowbeam() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lowbeam());
  }

  // uint32 WorkLight_relay = 5;
  if (this->worklight_relay() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->worklight_relay());
  }

  // uint32 small_light = 6;
  if (this->small_light() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->small_light());
  }

  // uint32 reversing_light = 7;
  if (this->reversing_light() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reversing_light());
  }

  // uint32 brake_light = 8;
  if (this->brake_light() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->brake_light());
  }

  // uint32 Reversing_buzzer = 9;
  if (this->reversing_buzzer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reversing_buzzer());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x78::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x78)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x78* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x78>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x78)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x78)
    MergeFrom(*source);
  }
}

void CanMsg_0x78::MergeFrom(const CanMsg_0x78& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x78)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.turnleftlight() != 0) {
    set_turnleftlight(from.turnleftlight());
  }
  if (from.turnrightlight() != 0) {
    set_turnrightlight(from.turnrightlight());
  }
  if (from.lowbeam() != 0) {
    set_lowbeam(from.lowbeam());
  }
  if (from.worklight_relay() != 0) {
    set_worklight_relay(from.worklight_relay());
  }
  if (from.small_light() != 0) {
    set_small_light(from.small_light());
  }
  if (from.reversing_light() != 0) {
    set_reversing_light(from.reversing_light());
  }
  if (from.brake_light() != 0) {
    set_brake_light(from.brake_light());
  }
  if (from.reversing_buzzer() != 0) {
    set_reversing_buzzer(from.reversing_buzzer());
  }
}

void CanMsg_0x78::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x78)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x78::CopyFrom(const CanMsg_0x78& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x78)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x78::IsInitialized() const {
  return true;
}

void CanMsg_0x78::Swap(CanMsg_0x78* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x78::InternalSwap(CanMsg_0x78* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(turnleftlight_, other->turnleftlight_);
  std::swap(turnrightlight_, other->turnrightlight_);
  std::swap(lowbeam_, other->lowbeam_);
  std::swap(worklight_relay_, other->worklight_relay_);
  std::swap(small_light_, other->small_light_);
  std::swap(reversing_light_, other->reversing_light_);
  std::swap(brake_light_, other->brake_light_);
  std::swap(reversing_buzzer_, other->reversing_buzzer_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x78::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x78

// bool isValid = 1;
void CanMsg_0x78::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x78::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x78.isValid)
  return isvalid_;
}
void CanMsg_0x78::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x78.isValid)
}

// uint32 TurnLeftLight = 2;
void CanMsg_0x78::clear_turnleftlight() {
  turnleftlight_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x78::turnleftlight() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x78.TurnLeftLight)
  return turnleftlight_;
}
void CanMsg_0x78::set_turnleftlight(::google::protobuf::uint32 value) {
  
  turnleftlight_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x78.TurnLeftLight)
}

// uint32 TurnRightLight = 3;
void CanMsg_0x78::clear_turnrightlight() {
  turnrightlight_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x78::turnrightlight() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x78.TurnRightLight)
  return turnrightlight_;
}
void CanMsg_0x78::set_turnrightlight(::google::protobuf::uint32 value) {
  
  turnrightlight_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x78.TurnRightLight)
}

// uint32 LowBeam = 4;
void CanMsg_0x78::clear_lowbeam() {
  lowbeam_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x78::lowbeam() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x78.LowBeam)
  return lowbeam_;
}
void CanMsg_0x78::set_lowbeam(::google::protobuf::uint32 value) {
  
  lowbeam_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x78.LowBeam)
}

// uint32 WorkLight_relay = 5;
void CanMsg_0x78::clear_worklight_relay() {
  worklight_relay_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x78::worklight_relay() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x78.WorkLight_relay)
  return worklight_relay_;
}
void CanMsg_0x78::set_worklight_relay(::google::protobuf::uint32 value) {
  
  worklight_relay_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x78.WorkLight_relay)
}

// uint32 small_light = 6;
void CanMsg_0x78::clear_small_light() {
  small_light_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x78::small_light() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x78.small_light)
  return small_light_;
}
void CanMsg_0x78::set_small_light(::google::protobuf::uint32 value) {
  
  small_light_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x78.small_light)
}

// uint32 reversing_light = 7;
void CanMsg_0x78::clear_reversing_light() {
  reversing_light_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x78::reversing_light() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x78.reversing_light)
  return reversing_light_;
}
void CanMsg_0x78::set_reversing_light(::google::protobuf::uint32 value) {
  
  reversing_light_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x78.reversing_light)
}

// uint32 brake_light = 8;
void CanMsg_0x78::clear_brake_light() {
  brake_light_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x78::brake_light() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x78.brake_light)
  return brake_light_;
}
void CanMsg_0x78::set_brake_light(::google::protobuf::uint32 value) {
  
  brake_light_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x78.brake_light)
}

// uint32 Reversing_buzzer = 9;
void CanMsg_0x78::clear_reversing_buzzer() {
  reversing_buzzer_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x78::reversing_buzzer() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x78.Reversing_buzzer)
  return reversing_buzzer_;
}
void CanMsg_0x78::set_reversing_buzzer(::google::protobuf::uint32 value) {
  
  reversing_buzzer_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x78.Reversing_buzzer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x79::kIsValidFieldNumber;
const int CanMsg_0x79::kBoxDoorOpenFieldNumber;
const int CanMsg_0x79::kBoxDoorCloseFieldNumber;
const int CanMsg_0x79::kLeftBrushUpFieldNumber;
const int CanMsg_0x79::kLeftBrushDownFieldNumber;
const int CanMsg_0x79::kLeftBrushOpenFieldNumber;
const int CanMsg_0x79::kLeftBrushCloseFieldNumber;
const int CanMsg_0x79::kRightBrushUpFieldNumber;
const int CanMsg_0x79::kRightBrushDownFieldNumber;
const int CanMsg_0x79::kRightBrushOpenFieldNumber;
const int CanMsg_0x79::kRightBrushCloseFieldNumber;
const int CanMsg_0x79::kEbanSwitchOpenFieldNumber;
const int CanMsg_0x79::kEbanSwitchCloseFieldNumber;
const int CanMsg_0x79::kXiZwitchUpFieldNumber;
const int CanMsg_0x79::kXiZwitchDownFieldNumber;
const int CanMsg_0x79::kDustbinUpFieldNumber;
const int CanMsg_0x79::kDustbinDownFieldNumber;
const int CanMsg_0x79::kLVWaterRoadRelayFieldNumber;
const int CanMsg_0x79::kSewagecyclevalveFieldNumber;
const int CanMsg_0x79::kDelayCutDownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x79::CanMsg_0x79()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x79)
}
CanMsg_0x79::CanMsg_0x79(const CanMsg_0x79& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&delaycutdown_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(delaycutdown_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x79)
}

void CanMsg_0x79::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&delaycutdown_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(delaycutdown_));
  _cached_size_ = 0;
}

CanMsg_0x79::~CanMsg_0x79() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x79)
  SharedDtor();
}

void CanMsg_0x79::SharedDtor() {
}

void CanMsg_0x79::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x79::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x79& CanMsg_0x79::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x79* CanMsg_0x79::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x79* n = new CanMsg_0x79;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x79::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x79)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&delaycutdown_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(delaycutdown_));
}

bool CanMsg_0x79::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x79)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BoxDoor_open = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &boxdoor_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BoxDoor_close = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &boxdoor_close_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LeftBrush_up = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftbrush_up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LeftBrush_down = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftbrush_down_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LeftBrush_open = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftbrush_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LeftBrush_close = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftbrush_close_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RightBrush_up = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightbrush_up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RightBrush_down = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightbrush_down_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RightBrush_open = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightbrush_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RightBrush_close = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightbrush_close_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Eban_switch_open = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eban_switch_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Eban_switch_close = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eban_switch_close_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 XiZwitch_up = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &xizwitch_up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 XiZwitch_down = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &xizwitch_down_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dustbin_up = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dustbin_up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dustbin_down = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dustbin_down_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LVWaterRoad_relay = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lvwaterroad_relay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sewagecyclevalve = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sewagecyclevalve_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 delayCutDown = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delaycutdown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x79)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x79)
  return false;
#undef DO_
}

void CanMsg_0x79::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x79)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 BoxDoor_open = 2;
  if (this->boxdoor_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->boxdoor_open(), output);
  }

  // uint32 BoxDoor_close = 3;
  if (this->boxdoor_close() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->boxdoor_close(), output);
  }

  // uint32 LeftBrush_up = 4;
  if (this->leftbrush_up() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->leftbrush_up(), output);
  }

  // uint32 LeftBrush_down = 5;
  if (this->leftbrush_down() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->leftbrush_down(), output);
  }

  // uint32 LeftBrush_open = 6;
  if (this->leftbrush_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->leftbrush_open(), output);
  }

  // uint32 LeftBrush_close = 7;
  if (this->leftbrush_close() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->leftbrush_close(), output);
  }

  // uint32 RightBrush_up = 8;
  if (this->rightbrush_up() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->rightbrush_up(), output);
  }

  // uint32 RightBrush_down = 9;
  if (this->rightbrush_down() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->rightbrush_down(), output);
  }

  // uint32 RightBrush_open = 10;
  if (this->rightbrush_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->rightbrush_open(), output);
  }

  // uint32 RightBrush_close = 11;
  if (this->rightbrush_close() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->rightbrush_close(), output);
  }

  // uint32 Eban_switch_open = 12;
  if (this->eban_switch_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->eban_switch_open(), output);
  }

  // uint32 Eban_switch_close = 13;
  if (this->eban_switch_close() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->eban_switch_close(), output);
  }

  // uint32 XiZwitch_up = 14;
  if (this->xizwitch_up() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->xizwitch_up(), output);
  }

  // uint32 XiZwitch_down = 15;
  if (this->xizwitch_down() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->xizwitch_down(), output);
  }

  // uint32 dustbin_up = 16;
  if (this->dustbin_up() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->dustbin_up(), output);
  }

  // uint32 dustbin_down = 17;
  if (this->dustbin_down() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->dustbin_down(), output);
  }

  // uint32 LVWaterRoad_relay = 18;
  if (this->lvwaterroad_relay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->lvwaterroad_relay(), output);
  }

  // uint32 sewagecyclevalve = 19;
  if (this->sewagecyclevalve() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->sewagecyclevalve(), output);
  }

  // uint32 delayCutDown = 20;
  if (this->delaycutdown() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->delaycutdown(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x79)
}

::google::protobuf::uint8* CanMsg_0x79::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x79)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 BoxDoor_open = 2;
  if (this->boxdoor_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->boxdoor_open(), target);
  }

  // uint32 BoxDoor_close = 3;
  if (this->boxdoor_close() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->boxdoor_close(), target);
  }

  // uint32 LeftBrush_up = 4;
  if (this->leftbrush_up() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->leftbrush_up(), target);
  }

  // uint32 LeftBrush_down = 5;
  if (this->leftbrush_down() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->leftbrush_down(), target);
  }

  // uint32 LeftBrush_open = 6;
  if (this->leftbrush_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->leftbrush_open(), target);
  }

  // uint32 LeftBrush_close = 7;
  if (this->leftbrush_close() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->leftbrush_close(), target);
  }

  // uint32 RightBrush_up = 8;
  if (this->rightbrush_up() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->rightbrush_up(), target);
  }

  // uint32 RightBrush_down = 9;
  if (this->rightbrush_down() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->rightbrush_down(), target);
  }

  // uint32 RightBrush_open = 10;
  if (this->rightbrush_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->rightbrush_open(), target);
  }

  // uint32 RightBrush_close = 11;
  if (this->rightbrush_close() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->rightbrush_close(), target);
  }

  // uint32 Eban_switch_open = 12;
  if (this->eban_switch_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->eban_switch_open(), target);
  }

  // uint32 Eban_switch_close = 13;
  if (this->eban_switch_close() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->eban_switch_close(), target);
  }

  // uint32 XiZwitch_up = 14;
  if (this->xizwitch_up() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->xizwitch_up(), target);
  }

  // uint32 XiZwitch_down = 15;
  if (this->xizwitch_down() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->xizwitch_down(), target);
  }

  // uint32 dustbin_up = 16;
  if (this->dustbin_up() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->dustbin_up(), target);
  }

  // uint32 dustbin_down = 17;
  if (this->dustbin_down() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->dustbin_down(), target);
  }

  // uint32 LVWaterRoad_relay = 18;
  if (this->lvwaterroad_relay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->lvwaterroad_relay(), target);
  }

  // uint32 sewagecyclevalve = 19;
  if (this->sewagecyclevalve() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->sewagecyclevalve(), target);
  }

  // uint32 delayCutDown = 20;
  if (this->delaycutdown() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->delaycutdown(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x79)
  return target;
}

size_t CanMsg_0x79::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x79)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 BoxDoor_open = 2;
  if (this->boxdoor_open() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->boxdoor_open());
  }

  // uint32 BoxDoor_close = 3;
  if (this->boxdoor_close() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->boxdoor_close());
  }

  // uint32 LeftBrush_up = 4;
  if (this->leftbrush_up() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftbrush_up());
  }

  // uint32 LeftBrush_down = 5;
  if (this->leftbrush_down() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftbrush_down());
  }

  // uint32 LeftBrush_open = 6;
  if (this->leftbrush_open() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftbrush_open());
  }

  // uint32 LeftBrush_close = 7;
  if (this->leftbrush_close() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftbrush_close());
  }

  // uint32 RightBrush_up = 8;
  if (this->rightbrush_up() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rightbrush_up());
  }

  // uint32 RightBrush_down = 9;
  if (this->rightbrush_down() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rightbrush_down());
  }

  // uint32 RightBrush_open = 10;
  if (this->rightbrush_open() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rightbrush_open());
  }

  // uint32 RightBrush_close = 11;
  if (this->rightbrush_close() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rightbrush_close());
  }

  // uint32 Eban_switch_open = 12;
  if (this->eban_switch_open() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eban_switch_open());
  }

  // uint32 Eban_switch_close = 13;
  if (this->eban_switch_close() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eban_switch_close());
  }

  // uint32 XiZwitch_up = 14;
  if (this->xizwitch_up() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->xizwitch_up());
  }

  // uint32 XiZwitch_down = 15;
  if (this->xizwitch_down() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->xizwitch_down());
  }

  // uint32 dustbin_up = 16;
  if (this->dustbin_up() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dustbin_up());
  }

  // uint32 dustbin_down = 17;
  if (this->dustbin_down() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dustbin_down());
  }

  // uint32 LVWaterRoad_relay = 18;
  if (this->lvwaterroad_relay() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lvwaterroad_relay());
  }

  // uint32 sewagecyclevalve = 19;
  if (this->sewagecyclevalve() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sewagecyclevalve());
  }

  // uint32 delayCutDown = 20;
  if (this->delaycutdown() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delaycutdown());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x79::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x79)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x79* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x79>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x79)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x79)
    MergeFrom(*source);
  }
}

void CanMsg_0x79::MergeFrom(const CanMsg_0x79& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x79)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.boxdoor_open() != 0) {
    set_boxdoor_open(from.boxdoor_open());
  }
  if (from.boxdoor_close() != 0) {
    set_boxdoor_close(from.boxdoor_close());
  }
  if (from.leftbrush_up() != 0) {
    set_leftbrush_up(from.leftbrush_up());
  }
  if (from.leftbrush_down() != 0) {
    set_leftbrush_down(from.leftbrush_down());
  }
  if (from.leftbrush_open() != 0) {
    set_leftbrush_open(from.leftbrush_open());
  }
  if (from.leftbrush_close() != 0) {
    set_leftbrush_close(from.leftbrush_close());
  }
  if (from.rightbrush_up() != 0) {
    set_rightbrush_up(from.rightbrush_up());
  }
  if (from.rightbrush_down() != 0) {
    set_rightbrush_down(from.rightbrush_down());
  }
  if (from.rightbrush_open() != 0) {
    set_rightbrush_open(from.rightbrush_open());
  }
  if (from.rightbrush_close() != 0) {
    set_rightbrush_close(from.rightbrush_close());
  }
  if (from.eban_switch_open() != 0) {
    set_eban_switch_open(from.eban_switch_open());
  }
  if (from.eban_switch_close() != 0) {
    set_eban_switch_close(from.eban_switch_close());
  }
  if (from.xizwitch_up() != 0) {
    set_xizwitch_up(from.xizwitch_up());
  }
  if (from.xizwitch_down() != 0) {
    set_xizwitch_down(from.xizwitch_down());
  }
  if (from.dustbin_up() != 0) {
    set_dustbin_up(from.dustbin_up());
  }
  if (from.dustbin_down() != 0) {
    set_dustbin_down(from.dustbin_down());
  }
  if (from.lvwaterroad_relay() != 0) {
    set_lvwaterroad_relay(from.lvwaterroad_relay());
  }
  if (from.sewagecyclevalve() != 0) {
    set_sewagecyclevalve(from.sewagecyclevalve());
  }
  if (from.delaycutdown() != 0) {
    set_delaycutdown(from.delaycutdown());
  }
}

void CanMsg_0x79::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x79)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x79::CopyFrom(const CanMsg_0x79& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x79)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x79::IsInitialized() const {
  return true;
}

void CanMsg_0x79::Swap(CanMsg_0x79* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x79::InternalSwap(CanMsg_0x79* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(boxdoor_open_, other->boxdoor_open_);
  std::swap(boxdoor_close_, other->boxdoor_close_);
  std::swap(leftbrush_up_, other->leftbrush_up_);
  std::swap(leftbrush_down_, other->leftbrush_down_);
  std::swap(leftbrush_open_, other->leftbrush_open_);
  std::swap(leftbrush_close_, other->leftbrush_close_);
  std::swap(rightbrush_up_, other->rightbrush_up_);
  std::swap(rightbrush_down_, other->rightbrush_down_);
  std::swap(rightbrush_open_, other->rightbrush_open_);
  std::swap(rightbrush_close_, other->rightbrush_close_);
  std::swap(eban_switch_open_, other->eban_switch_open_);
  std::swap(eban_switch_close_, other->eban_switch_close_);
  std::swap(xizwitch_up_, other->xizwitch_up_);
  std::swap(xizwitch_down_, other->xizwitch_down_);
  std::swap(dustbin_up_, other->dustbin_up_);
  std::swap(dustbin_down_, other->dustbin_down_);
  std::swap(lvwaterroad_relay_, other->lvwaterroad_relay_);
  std::swap(sewagecyclevalve_, other->sewagecyclevalve_);
  std::swap(delaycutdown_, other->delaycutdown_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x79::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x79

// bool isValid = 1;
void CanMsg_0x79::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x79::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.isValid)
  return isvalid_;
}
void CanMsg_0x79::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.isValid)
}

// uint32 BoxDoor_open = 2;
void CanMsg_0x79::clear_boxdoor_open() {
  boxdoor_open_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::boxdoor_open() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.BoxDoor_open)
  return boxdoor_open_;
}
void CanMsg_0x79::set_boxdoor_open(::google::protobuf::uint32 value) {
  
  boxdoor_open_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.BoxDoor_open)
}

// uint32 BoxDoor_close = 3;
void CanMsg_0x79::clear_boxdoor_close() {
  boxdoor_close_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::boxdoor_close() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.BoxDoor_close)
  return boxdoor_close_;
}
void CanMsg_0x79::set_boxdoor_close(::google::protobuf::uint32 value) {
  
  boxdoor_close_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.BoxDoor_close)
}

// uint32 LeftBrush_up = 4;
void CanMsg_0x79::clear_leftbrush_up() {
  leftbrush_up_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::leftbrush_up() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.LeftBrush_up)
  return leftbrush_up_;
}
void CanMsg_0x79::set_leftbrush_up(::google::protobuf::uint32 value) {
  
  leftbrush_up_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.LeftBrush_up)
}

// uint32 LeftBrush_down = 5;
void CanMsg_0x79::clear_leftbrush_down() {
  leftbrush_down_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::leftbrush_down() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.LeftBrush_down)
  return leftbrush_down_;
}
void CanMsg_0x79::set_leftbrush_down(::google::protobuf::uint32 value) {
  
  leftbrush_down_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.LeftBrush_down)
}

// uint32 LeftBrush_open = 6;
void CanMsg_0x79::clear_leftbrush_open() {
  leftbrush_open_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::leftbrush_open() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.LeftBrush_open)
  return leftbrush_open_;
}
void CanMsg_0x79::set_leftbrush_open(::google::protobuf::uint32 value) {
  
  leftbrush_open_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.LeftBrush_open)
}

// uint32 LeftBrush_close = 7;
void CanMsg_0x79::clear_leftbrush_close() {
  leftbrush_close_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::leftbrush_close() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.LeftBrush_close)
  return leftbrush_close_;
}
void CanMsg_0x79::set_leftbrush_close(::google::protobuf::uint32 value) {
  
  leftbrush_close_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.LeftBrush_close)
}

// uint32 RightBrush_up = 8;
void CanMsg_0x79::clear_rightbrush_up() {
  rightbrush_up_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::rightbrush_up() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.RightBrush_up)
  return rightbrush_up_;
}
void CanMsg_0x79::set_rightbrush_up(::google::protobuf::uint32 value) {
  
  rightbrush_up_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.RightBrush_up)
}

// uint32 RightBrush_down = 9;
void CanMsg_0x79::clear_rightbrush_down() {
  rightbrush_down_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::rightbrush_down() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.RightBrush_down)
  return rightbrush_down_;
}
void CanMsg_0x79::set_rightbrush_down(::google::protobuf::uint32 value) {
  
  rightbrush_down_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.RightBrush_down)
}

// uint32 RightBrush_open = 10;
void CanMsg_0x79::clear_rightbrush_open() {
  rightbrush_open_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::rightbrush_open() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.RightBrush_open)
  return rightbrush_open_;
}
void CanMsg_0x79::set_rightbrush_open(::google::protobuf::uint32 value) {
  
  rightbrush_open_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.RightBrush_open)
}

// uint32 RightBrush_close = 11;
void CanMsg_0x79::clear_rightbrush_close() {
  rightbrush_close_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::rightbrush_close() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.RightBrush_close)
  return rightbrush_close_;
}
void CanMsg_0x79::set_rightbrush_close(::google::protobuf::uint32 value) {
  
  rightbrush_close_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.RightBrush_close)
}

// uint32 Eban_switch_open = 12;
void CanMsg_0x79::clear_eban_switch_open() {
  eban_switch_open_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::eban_switch_open() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.Eban_switch_open)
  return eban_switch_open_;
}
void CanMsg_0x79::set_eban_switch_open(::google::protobuf::uint32 value) {
  
  eban_switch_open_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.Eban_switch_open)
}

// uint32 Eban_switch_close = 13;
void CanMsg_0x79::clear_eban_switch_close() {
  eban_switch_close_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::eban_switch_close() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.Eban_switch_close)
  return eban_switch_close_;
}
void CanMsg_0x79::set_eban_switch_close(::google::protobuf::uint32 value) {
  
  eban_switch_close_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.Eban_switch_close)
}

// uint32 XiZwitch_up = 14;
void CanMsg_0x79::clear_xizwitch_up() {
  xizwitch_up_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::xizwitch_up() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.XiZwitch_up)
  return xizwitch_up_;
}
void CanMsg_0x79::set_xizwitch_up(::google::protobuf::uint32 value) {
  
  xizwitch_up_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.XiZwitch_up)
}

// uint32 XiZwitch_down = 15;
void CanMsg_0x79::clear_xizwitch_down() {
  xizwitch_down_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::xizwitch_down() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.XiZwitch_down)
  return xizwitch_down_;
}
void CanMsg_0x79::set_xizwitch_down(::google::protobuf::uint32 value) {
  
  xizwitch_down_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.XiZwitch_down)
}

// uint32 dustbin_up = 16;
void CanMsg_0x79::clear_dustbin_up() {
  dustbin_up_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::dustbin_up() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.dustbin_up)
  return dustbin_up_;
}
void CanMsg_0x79::set_dustbin_up(::google::protobuf::uint32 value) {
  
  dustbin_up_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.dustbin_up)
}

// uint32 dustbin_down = 17;
void CanMsg_0x79::clear_dustbin_down() {
  dustbin_down_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::dustbin_down() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.dustbin_down)
  return dustbin_down_;
}
void CanMsg_0x79::set_dustbin_down(::google::protobuf::uint32 value) {
  
  dustbin_down_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.dustbin_down)
}

// uint32 LVWaterRoad_relay = 18;
void CanMsg_0x79::clear_lvwaterroad_relay() {
  lvwaterroad_relay_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::lvwaterroad_relay() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.LVWaterRoad_relay)
  return lvwaterroad_relay_;
}
void CanMsg_0x79::set_lvwaterroad_relay(::google::protobuf::uint32 value) {
  
  lvwaterroad_relay_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.LVWaterRoad_relay)
}

// uint32 sewagecyclevalve = 19;
void CanMsg_0x79::clear_sewagecyclevalve() {
  sewagecyclevalve_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::sewagecyclevalve() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.sewagecyclevalve)
  return sewagecyclevalve_;
}
void CanMsg_0x79::set_sewagecyclevalve(::google::protobuf::uint32 value) {
  
  sewagecyclevalve_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.sewagecyclevalve)
}

// uint32 delayCutDown = 20;
void CanMsg_0x79::clear_delaycutdown() {
  delaycutdown_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x79::delaycutdown() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x79.delayCutDown)
  return delaycutdown_;
}
void CanMsg_0x79::set_delaycutdown(::google::protobuf::uint32 value) {
  
  delaycutdown_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x79.delayCutDown)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x7B::kIsValidFieldNumber;
const int CanMsg_0x7B::kWorkTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x7B::CanMsg_0x7B()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x7B)
}
CanMsg_0x7B::CanMsg_0x7B(const CanMsg_0x7B& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&work_time_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(work_time_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x7B)
}

void CanMsg_0x7B::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&work_time_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(work_time_));
  _cached_size_ = 0;
}

CanMsg_0x7B::~CanMsg_0x7B() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x7B)
  SharedDtor();
}

void CanMsg_0x7B::SharedDtor() {
}

void CanMsg_0x7B::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x7B::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x7B& CanMsg_0x7B::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x7B* CanMsg_0x7B::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x7B* n = new CanMsg_0x7B;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x7B::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x7B)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&work_time_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(work_time_));
}

bool CanMsg_0x7B::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x7B)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 work_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &work_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x7B)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x7B)
  return false;
#undef DO_
}

void CanMsg_0x7B::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x7B)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 work_time = 2;
  if (this->work_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->work_time(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x7B)
}

::google::protobuf::uint8* CanMsg_0x7B::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x7B)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 work_time = 2;
  if (this->work_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->work_time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x7B)
  return target;
}

size_t CanMsg_0x7B::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x7B)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 work_time = 2;
  if (this->work_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->work_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x7B::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x7B)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x7B* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x7B>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x7B)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x7B)
    MergeFrom(*source);
  }
}

void CanMsg_0x7B::MergeFrom(const CanMsg_0x7B& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x7B)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.work_time() != 0) {
    set_work_time(from.work_time());
  }
}

void CanMsg_0x7B::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x7B)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x7B::CopyFrom(const CanMsg_0x7B& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x7B)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x7B::IsInitialized() const {
  return true;
}

void CanMsg_0x7B::Swap(CanMsg_0x7B* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x7B::InternalSwap(CanMsg_0x7B* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(work_time_, other->work_time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x7B::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x7B

// bool isValid = 1;
void CanMsg_0x7B::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x7B::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7B.isValid)
  return isvalid_;
}
void CanMsg_0x7B::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7B.isValid)
}

// uint32 work_time = 2;
void CanMsg_0x7B::clear_work_time() {
  work_time_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7B::work_time() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7B.work_time)
  return work_time_;
}
void CanMsg_0x7B::set_work_time(::google::protobuf::uint32 value) {
  
  work_time_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7B.work_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x7C::kIsValidFieldNumber;
const int CanMsg_0x7C::kWaterLineIFieldNumber;
const int CanMsg_0x7C::kQinbenganOFieldNumber;
const int CanMsg_0x7C::kCepenganOFieldNumber;
const int CanMsg_0x7C::kZuojiapenOFieldNumber;
const int CanMsg_0x7C::kYoujiapenOFieldNumber;
const int CanMsg_0x7C::kPenqiangOFieldNumber;
const int CanMsg_0x7C::kYiliufaOFieldNumber;
const int CanMsg_0x7C::kPenganUpOFieldNumber;
const int CanMsg_0x7C::kPenganDownOFieldNumber;
const int CanMsg_0x7C::kPenganLeftOFieldNumber;
const int CanMsg_0x7C::kPenganRightOFieldNumber;
const int CanMsg_0x7C::kQifaOFieldNumber;
const int CanMsg_0x7C::kWaterLowWarningFieldNumber;
const int CanMsg_0x7C::kWaterPumpCANerrorFieldNumber;
const int CanMsg_0x7C::kExtendModuleCANerrorFieldNumber;
const int CanMsg_0x7C::kICUCANerrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x7C::CanMsg_0x7C()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x7C)
}
CanMsg_0x7C::CanMsg_0x7C(const CanMsg_0x7C& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&icu_canerror_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(icu_canerror_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x7C)
}

void CanMsg_0x7C::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&icu_canerror_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(icu_canerror_));
  _cached_size_ = 0;
}

CanMsg_0x7C::~CanMsg_0x7C() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x7C)
  SharedDtor();
}

void CanMsg_0x7C::SharedDtor() {
}

void CanMsg_0x7C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x7C::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x7C& CanMsg_0x7C::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x7C* CanMsg_0x7C::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x7C* n = new CanMsg_0x7C;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x7C::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x7C)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&icu_canerror_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(icu_canerror_));
}

bool CanMsg_0x7C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x7C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 water_line_I = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &water_line_i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 qinbengan_O = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qinbengan_o_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cepengan_O = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cepengan_o_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zuojiapen_O = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zuojiapen_o_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 youjiapen_O = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &youjiapen_o_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 penqiang_O = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &penqiang_o_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 yiliufa_O = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &yiliufa_o_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pengan_Up_O = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pengan_up_o_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pengan_down_O = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pengan_down_o_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pengan_Left_O = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pengan_left_o_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pengan_Right_O = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pengan_right_o_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 qifa_O = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qifa_o_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 water_low_warning = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &water_low_warning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 water_pump_CANerror = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &water_pump_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ExtendModule_CANerror = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &extendmodule_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ICU_CANerror = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &icu_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x7C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x7C)
  return false;
#undef DO_
}

void CanMsg_0x7C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x7C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 water_line_I = 2;
  if (this->water_line_i() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->water_line_i(), output);
  }

  // uint32 qinbengan_O = 3;
  if (this->qinbengan_o() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->qinbengan_o(), output);
  }

  // uint32 cepengan_O = 4;
  if (this->cepengan_o() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->cepengan_o(), output);
  }

  // uint32 zuojiapen_O = 5;
  if (this->zuojiapen_o() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->zuojiapen_o(), output);
  }

  // uint32 youjiapen_O = 6;
  if (this->youjiapen_o() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->youjiapen_o(), output);
  }

  // uint32 penqiang_O = 7;
  if (this->penqiang_o() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->penqiang_o(), output);
  }

  // uint32 yiliufa_O = 8;
  if (this->yiliufa_o() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->yiliufa_o(), output);
  }

  // uint32 pengan_Up_O = 9;
  if (this->pengan_up_o() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->pengan_up_o(), output);
  }

  // uint32 pengan_down_O = 10;
  if (this->pengan_down_o() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->pengan_down_o(), output);
  }

  // uint32 pengan_Left_O = 11;
  if (this->pengan_left_o() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->pengan_left_o(), output);
  }

  // uint32 pengan_Right_O = 12;
  if (this->pengan_right_o() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->pengan_right_o(), output);
  }

  // uint32 qifa_O = 13;
  if (this->qifa_o() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->qifa_o(), output);
  }

  // uint32 water_low_warning = 14;
  if (this->water_low_warning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->water_low_warning(), output);
  }

  // uint32 water_pump_CANerror = 15;
  if (this->water_pump_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->water_pump_canerror(), output);
  }

  // uint32 ExtendModule_CANerror = 16;
  if (this->extendmodule_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->extendmodule_canerror(), output);
  }

  // uint32 ICU_CANerror = 17;
  if (this->icu_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->icu_canerror(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x7C)
}

::google::protobuf::uint8* CanMsg_0x7C::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x7C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 water_line_I = 2;
  if (this->water_line_i() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->water_line_i(), target);
  }

  // uint32 qinbengan_O = 3;
  if (this->qinbengan_o() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->qinbengan_o(), target);
  }

  // uint32 cepengan_O = 4;
  if (this->cepengan_o() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->cepengan_o(), target);
  }

  // uint32 zuojiapen_O = 5;
  if (this->zuojiapen_o() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->zuojiapen_o(), target);
  }

  // uint32 youjiapen_O = 6;
  if (this->youjiapen_o() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->youjiapen_o(), target);
  }

  // uint32 penqiang_O = 7;
  if (this->penqiang_o() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->penqiang_o(), target);
  }

  // uint32 yiliufa_O = 8;
  if (this->yiliufa_o() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->yiliufa_o(), target);
  }

  // uint32 pengan_Up_O = 9;
  if (this->pengan_up_o() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->pengan_up_o(), target);
  }

  // uint32 pengan_down_O = 10;
  if (this->pengan_down_o() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->pengan_down_o(), target);
  }

  // uint32 pengan_Left_O = 11;
  if (this->pengan_left_o() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->pengan_left_o(), target);
  }

  // uint32 pengan_Right_O = 12;
  if (this->pengan_right_o() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->pengan_right_o(), target);
  }

  // uint32 qifa_O = 13;
  if (this->qifa_o() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->qifa_o(), target);
  }

  // uint32 water_low_warning = 14;
  if (this->water_low_warning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->water_low_warning(), target);
  }

  // uint32 water_pump_CANerror = 15;
  if (this->water_pump_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->water_pump_canerror(), target);
  }

  // uint32 ExtendModule_CANerror = 16;
  if (this->extendmodule_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->extendmodule_canerror(), target);
  }

  // uint32 ICU_CANerror = 17;
  if (this->icu_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->icu_canerror(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x7C)
  return target;
}

size_t CanMsg_0x7C::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x7C)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 water_line_I = 2;
  if (this->water_line_i() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->water_line_i());
  }

  // uint32 qinbengan_O = 3;
  if (this->qinbengan_o() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->qinbengan_o());
  }

  // uint32 cepengan_O = 4;
  if (this->cepengan_o() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cepengan_o());
  }

  // uint32 zuojiapen_O = 5;
  if (this->zuojiapen_o() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zuojiapen_o());
  }

  // uint32 youjiapen_O = 6;
  if (this->youjiapen_o() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->youjiapen_o());
  }

  // uint32 penqiang_O = 7;
  if (this->penqiang_o() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->penqiang_o());
  }

  // uint32 yiliufa_O = 8;
  if (this->yiliufa_o() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->yiliufa_o());
  }

  // uint32 pengan_Up_O = 9;
  if (this->pengan_up_o() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pengan_up_o());
  }

  // uint32 pengan_down_O = 10;
  if (this->pengan_down_o() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pengan_down_o());
  }

  // uint32 pengan_Left_O = 11;
  if (this->pengan_left_o() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pengan_left_o());
  }

  // uint32 pengan_Right_O = 12;
  if (this->pengan_right_o() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pengan_right_o());
  }

  // uint32 qifa_O = 13;
  if (this->qifa_o() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->qifa_o());
  }

  // uint32 water_low_warning = 14;
  if (this->water_low_warning() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->water_low_warning());
  }

  // uint32 water_pump_CANerror = 15;
  if (this->water_pump_canerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->water_pump_canerror());
  }

  // uint32 ExtendModule_CANerror = 16;
  if (this->extendmodule_canerror() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->extendmodule_canerror());
  }

  // uint32 ICU_CANerror = 17;
  if (this->icu_canerror() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->icu_canerror());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x7C::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x7C)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x7C* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x7C>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x7C)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x7C)
    MergeFrom(*source);
  }
}

void CanMsg_0x7C::MergeFrom(const CanMsg_0x7C& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x7C)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.water_line_i() != 0) {
    set_water_line_i(from.water_line_i());
  }
  if (from.qinbengan_o() != 0) {
    set_qinbengan_o(from.qinbengan_o());
  }
  if (from.cepengan_o() != 0) {
    set_cepengan_o(from.cepengan_o());
  }
  if (from.zuojiapen_o() != 0) {
    set_zuojiapen_o(from.zuojiapen_o());
  }
  if (from.youjiapen_o() != 0) {
    set_youjiapen_o(from.youjiapen_o());
  }
  if (from.penqiang_o() != 0) {
    set_penqiang_o(from.penqiang_o());
  }
  if (from.yiliufa_o() != 0) {
    set_yiliufa_o(from.yiliufa_o());
  }
  if (from.pengan_up_o() != 0) {
    set_pengan_up_o(from.pengan_up_o());
  }
  if (from.pengan_down_o() != 0) {
    set_pengan_down_o(from.pengan_down_o());
  }
  if (from.pengan_left_o() != 0) {
    set_pengan_left_o(from.pengan_left_o());
  }
  if (from.pengan_right_o() != 0) {
    set_pengan_right_o(from.pengan_right_o());
  }
  if (from.qifa_o() != 0) {
    set_qifa_o(from.qifa_o());
  }
  if (from.water_low_warning() != 0) {
    set_water_low_warning(from.water_low_warning());
  }
  if (from.water_pump_canerror() != 0) {
    set_water_pump_canerror(from.water_pump_canerror());
  }
  if (from.extendmodule_canerror() != 0) {
    set_extendmodule_canerror(from.extendmodule_canerror());
  }
  if (from.icu_canerror() != 0) {
    set_icu_canerror(from.icu_canerror());
  }
}

void CanMsg_0x7C::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x7C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x7C::CopyFrom(const CanMsg_0x7C& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x7C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x7C::IsInitialized() const {
  return true;
}

void CanMsg_0x7C::Swap(CanMsg_0x7C* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x7C::InternalSwap(CanMsg_0x7C* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(water_line_i_, other->water_line_i_);
  std::swap(qinbengan_o_, other->qinbengan_o_);
  std::swap(cepengan_o_, other->cepengan_o_);
  std::swap(zuojiapen_o_, other->zuojiapen_o_);
  std::swap(youjiapen_o_, other->youjiapen_o_);
  std::swap(penqiang_o_, other->penqiang_o_);
  std::swap(yiliufa_o_, other->yiliufa_o_);
  std::swap(pengan_up_o_, other->pengan_up_o_);
  std::swap(pengan_down_o_, other->pengan_down_o_);
  std::swap(pengan_left_o_, other->pengan_left_o_);
  std::swap(pengan_right_o_, other->pengan_right_o_);
  std::swap(qifa_o_, other->qifa_o_);
  std::swap(water_low_warning_, other->water_low_warning_);
  std::swap(water_pump_canerror_, other->water_pump_canerror_);
  std::swap(extendmodule_canerror_, other->extendmodule_canerror_);
  std::swap(icu_canerror_, other->icu_canerror_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x7C::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x7C

// bool isValid = 1;
void CanMsg_0x7C::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x7C::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7C.isValid)
  return isvalid_;
}
void CanMsg_0x7C::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7C.isValid)
}

// uint32 water_line_I = 2;
void CanMsg_0x7C::clear_water_line_i() {
  water_line_i_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7C::water_line_i() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7C.water_line_I)
  return water_line_i_;
}
void CanMsg_0x7C::set_water_line_i(::google::protobuf::uint32 value) {
  
  water_line_i_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7C.water_line_I)
}

// uint32 qinbengan_O = 3;
void CanMsg_0x7C::clear_qinbengan_o() {
  qinbengan_o_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7C::qinbengan_o() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7C.qinbengan_O)
  return qinbengan_o_;
}
void CanMsg_0x7C::set_qinbengan_o(::google::protobuf::uint32 value) {
  
  qinbengan_o_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7C.qinbengan_O)
}

// uint32 cepengan_O = 4;
void CanMsg_0x7C::clear_cepengan_o() {
  cepengan_o_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7C::cepengan_o() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7C.cepengan_O)
  return cepengan_o_;
}
void CanMsg_0x7C::set_cepengan_o(::google::protobuf::uint32 value) {
  
  cepengan_o_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7C.cepengan_O)
}

// uint32 zuojiapen_O = 5;
void CanMsg_0x7C::clear_zuojiapen_o() {
  zuojiapen_o_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7C::zuojiapen_o() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7C.zuojiapen_O)
  return zuojiapen_o_;
}
void CanMsg_0x7C::set_zuojiapen_o(::google::protobuf::uint32 value) {
  
  zuojiapen_o_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7C.zuojiapen_O)
}

// uint32 youjiapen_O = 6;
void CanMsg_0x7C::clear_youjiapen_o() {
  youjiapen_o_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7C::youjiapen_o() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7C.youjiapen_O)
  return youjiapen_o_;
}
void CanMsg_0x7C::set_youjiapen_o(::google::protobuf::uint32 value) {
  
  youjiapen_o_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7C.youjiapen_O)
}

// uint32 penqiang_O = 7;
void CanMsg_0x7C::clear_penqiang_o() {
  penqiang_o_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7C::penqiang_o() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7C.penqiang_O)
  return penqiang_o_;
}
void CanMsg_0x7C::set_penqiang_o(::google::protobuf::uint32 value) {
  
  penqiang_o_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7C.penqiang_O)
}

// uint32 yiliufa_O = 8;
void CanMsg_0x7C::clear_yiliufa_o() {
  yiliufa_o_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7C::yiliufa_o() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7C.yiliufa_O)
  return yiliufa_o_;
}
void CanMsg_0x7C::set_yiliufa_o(::google::protobuf::uint32 value) {
  
  yiliufa_o_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7C.yiliufa_O)
}

// uint32 pengan_Up_O = 9;
void CanMsg_0x7C::clear_pengan_up_o() {
  pengan_up_o_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7C::pengan_up_o() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7C.pengan_Up_O)
  return pengan_up_o_;
}
void CanMsg_0x7C::set_pengan_up_o(::google::protobuf::uint32 value) {
  
  pengan_up_o_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7C.pengan_Up_O)
}

// uint32 pengan_down_O = 10;
void CanMsg_0x7C::clear_pengan_down_o() {
  pengan_down_o_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7C::pengan_down_o() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7C.pengan_down_O)
  return pengan_down_o_;
}
void CanMsg_0x7C::set_pengan_down_o(::google::protobuf::uint32 value) {
  
  pengan_down_o_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7C.pengan_down_O)
}

// uint32 pengan_Left_O = 11;
void CanMsg_0x7C::clear_pengan_left_o() {
  pengan_left_o_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7C::pengan_left_o() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7C.pengan_Left_O)
  return pengan_left_o_;
}
void CanMsg_0x7C::set_pengan_left_o(::google::protobuf::uint32 value) {
  
  pengan_left_o_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7C.pengan_Left_O)
}

// uint32 pengan_Right_O = 12;
void CanMsg_0x7C::clear_pengan_right_o() {
  pengan_right_o_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7C::pengan_right_o() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7C.pengan_Right_O)
  return pengan_right_o_;
}
void CanMsg_0x7C::set_pengan_right_o(::google::protobuf::uint32 value) {
  
  pengan_right_o_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7C.pengan_Right_O)
}

// uint32 qifa_O = 13;
void CanMsg_0x7C::clear_qifa_o() {
  qifa_o_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7C::qifa_o() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7C.qifa_O)
  return qifa_o_;
}
void CanMsg_0x7C::set_qifa_o(::google::protobuf::uint32 value) {
  
  qifa_o_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7C.qifa_O)
}

// uint32 water_low_warning = 14;
void CanMsg_0x7C::clear_water_low_warning() {
  water_low_warning_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7C::water_low_warning() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7C.water_low_warning)
  return water_low_warning_;
}
void CanMsg_0x7C::set_water_low_warning(::google::protobuf::uint32 value) {
  
  water_low_warning_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7C.water_low_warning)
}

// uint32 water_pump_CANerror = 15;
void CanMsg_0x7C::clear_water_pump_canerror() {
  water_pump_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7C::water_pump_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7C.water_pump_CANerror)
  return water_pump_canerror_;
}
void CanMsg_0x7C::set_water_pump_canerror(::google::protobuf::uint32 value) {
  
  water_pump_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7C.water_pump_CANerror)
}

// uint32 ExtendModule_CANerror = 16;
void CanMsg_0x7C::clear_extendmodule_canerror() {
  extendmodule_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7C::extendmodule_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7C.ExtendModule_CANerror)
  return extendmodule_canerror_;
}
void CanMsg_0x7C::set_extendmodule_canerror(::google::protobuf::uint32 value) {
  
  extendmodule_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7C.ExtendModule_CANerror)
}

// uint32 ICU_CANerror = 17;
void CanMsg_0x7C::clear_icu_canerror() {
  icu_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7C::icu_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7C.ICU_CANerror)
  return icu_canerror_;
}
void CanMsg_0x7C::set_icu_canerror(::google::protobuf::uint32 value) {
  
  icu_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7C.ICU_CANerror)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x7D::kIsValidFieldNumber;
const int CanMsg_0x7D::kWashWorkTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x7D::CanMsg_0x7D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x7D)
}
CanMsg_0x7D::CanMsg_0x7D(const CanMsg_0x7D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&washwork_time_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(washwork_time_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x7D)
}

void CanMsg_0x7D::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&washwork_time_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(washwork_time_));
  _cached_size_ = 0;
}

CanMsg_0x7D::~CanMsg_0x7D() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x7D)
  SharedDtor();
}

void CanMsg_0x7D::SharedDtor() {
}

void CanMsg_0x7D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x7D::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x7D& CanMsg_0x7D::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x7D* CanMsg_0x7D::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x7D* n = new CanMsg_0x7D;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x7D::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x7D)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&washwork_time_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(washwork_time_));
}

bool CanMsg_0x7D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x7D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 washWork_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &washwork_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x7D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x7D)
  return false;
#undef DO_
}

void CanMsg_0x7D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x7D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 washWork_time = 2;
  if (this->washwork_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->washwork_time(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x7D)
}

::google::protobuf::uint8* CanMsg_0x7D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x7D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 washWork_time = 2;
  if (this->washwork_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->washwork_time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x7D)
  return target;
}

size_t CanMsg_0x7D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x7D)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 washWork_time = 2;
  if (this->washwork_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->washwork_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x7D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x7D)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x7D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x7D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x7D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x7D)
    MergeFrom(*source);
  }
}

void CanMsg_0x7D::MergeFrom(const CanMsg_0x7D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x7D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.washwork_time() != 0) {
    set_washwork_time(from.washwork_time());
  }
}

void CanMsg_0x7D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x7D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x7D::CopyFrom(const CanMsg_0x7D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x7D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x7D::IsInitialized() const {
  return true;
}

void CanMsg_0x7D::Swap(CanMsg_0x7D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x7D::InternalSwap(CanMsg_0x7D* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(washwork_time_, other->washwork_time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x7D::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x7D

// bool isValid = 1;
void CanMsg_0x7D::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x7D::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7D.isValid)
  return isvalid_;
}
void CanMsg_0x7D::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7D.isValid)
}

// uint32 washWork_time = 2;
void CanMsg_0x7D::clear_washwork_time() {
  washwork_time_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x7D::washwork_time() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x7D.washWork_time)
  return washwork_time_;
}
void CanMsg_0x7D::set_washwork_time(::google::protobuf::uint32 value) {
  
  washwork_time_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x7D.washWork_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x63::kIsValidFieldNumber;
const int CanMsg_0x63::kOutEnableFieldNumber;
const int CanMsg_0x63::kStateFieldNumber;
const int CanMsg_0x63::kINVoltageFieldNumber;
const int CanMsg_0x63::kOutVoltageFieldNumber;
const int CanMsg_0x63::kINCurrentFieldNumber;
const int CanMsg_0x63::kOutCurrentFieldNumber;
const int CanMsg_0x63::kDCDCTemperatureFieldNumber;
const int CanMsg_0x63::kOverTemperatureFieldNumber;
const int CanMsg_0x63::kInOverCurrentFieldNumber;
const int CanMsg_0x63::kOutOverCurrentFieldNumber;
const int CanMsg_0x63::kInOverVoltageFieldNumber;
const int CanMsg_0x63::kInLessVoltageFieldNumber;
const int CanMsg_0x63::kOutOverVoltageFieldNumber;
const int CanMsg_0x63::kOutLessVoltageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x63::CanMsg_0x63()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x63)
}
CanMsg_0x63::CanMsg_0x63(const CanMsg_0x63& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&out_less_voltage_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(out_less_voltage_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x63)
}

void CanMsg_0x63::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&out_less_voltage_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(out_less_voltage_));
  _cached_size_ = 0;
}

CanMsg_0x63::~CanMsg_0x63() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x63)
  SharedDtor();
}

void CanMsg_0x63::SharedDtor() {
}

void CanMsg_0x63::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x63::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x63& CanMsg_0x63::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x63* CanMsg_0x63::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x63* n = new CanMsg_0x63;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x63::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x63)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&out_less_voltage_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(out_less_voltage_));
}

bool CanMsg_0x63::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x63)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 out_enable = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &out_enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 IN_voltage = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &in_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 out_voltage = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &out_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 IN_current = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &in_current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 out_current = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &out_current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DCDC_temperature = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dcdc_temperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 over_temperature = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &over_temperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 in_over_current = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &in_over_current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 out_over_current = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &out_over_current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 in_over_voltage = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &in_over_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 in_less_voltage = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &in_less_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 out_over_voltage = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &out_over_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 out_less_voltage = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &out_less_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x63)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x63)
  return false;
#undef DO_
}

void CanMsg_0x63::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x63)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 out_enable = 2;
  if (this->out_enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->out_enable(), output);
  }

  // uint32 state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->state(), output);
  }

  // uint32 IN_voltage = 4;
  if (this->in_voltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->in_voltage(), output);
  }

  // uint32 out_voltage = 5;
  if (this->out_voltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->out_voltage(), output);
  }

  // uint32 IN_current = 6;
  if (this->in_current() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->in_current(), output);
  }

  // uint32 out_current = 7;
  if (this->out_current() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->out_current(), output);
  }

  // uint32 DCDC_temperature = 8;
  if (this->dcdc_temperature() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->dcdc_temperature(), output);
  }

  // uint32 over_temperature = 9;
  if (this->over_temperature() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->over_temperature(), output);
  }

  // uint32 in_over_current = 10;
  if (this->in_over_current() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->in_over_current(), output);
  }

  // uint32 out_over_current = 11;
  if (this->out_over_current() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->out_over_current(), output);
  }

  // uint32 in_over_voltage = 12;
  if (this->in_over_voltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->in_over_voltage(), output);
  }

  // uint32 in_less_voltage = 13;
  if (this->in_less_voltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->in_less_voltage(), output);
  }

  // uint32 out_over_voltage = 14;
  if (this->out_over_voltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->out_over_voltage(), output);
  }

  // uint32 out_less_voltage = 15;
  if (this->out_less_voltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->out_less_voltage(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x63)
}

::google::protobuf::uint8* CanMsg_0x63::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x63)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 out_enable = 2;
  if (this->out_enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->out_enable(), target);
  }

  // uint32 state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->state(), target);
  }

  // uint32 IN_voltage = 4;
  if (this->in_voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->in_voltage(), target);
  }

  // uint32 out_voltage = 5;
  if (this->out_voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->out_voltage(), target);
  }

  // uint32 IN_current = 6;
  if (this->in_current() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->in_current(), target);
  }

  // uint32 out_current = 7;
  if (this->out_current() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->out_current(), target);
  }

  // uint32 DCDC_temperature = 8;
  if (this->dcdc_temperature() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->dcdc_temperature(), target);
  }

  // uint32 over_temperature = 9;
  if (this->over_temperature() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->over_temperature(), target);
  }

  // uint32 in_over_current = 10;
  if (this->in_over_current() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->in_over_current(), target);
  }

  // uint32 out_over_current = 11;
  if (this->out_over_current() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->out_over_current(), target);
  }

  // uint32 in_over_voltage = 12;
  if (this->in_over_voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->in_over_voltage(), target);
  }

  // uint32 in_less_voltage = 13;
  if (this->in_less_voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->in_less_voltage(), target);
  }

  // uint32 out_over_voltage = 14;
  if (this->out_over_voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->out_over_voltage(), target);
  }

  // uint32 out_less_voltage = 15;
  if (this->out_less_voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->out_less_voltage(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x63)
  return target;
}

size_t CanMsg_0x63::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x63)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 out_enable = 2;
  if (this->out_enable() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->out_enable());
  }

  // uint32 state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  // uint32 IN_voltage = 4;
  if (this->in_voltage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->in_voltage());
  }

  // uint32 out_voltage = 5;
  if (this->out_voltage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->out_voltage());
  }

  // uint32 IN_current = 6;
  if (this->in_current() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->in_current());
  }

  // uint32 out_current = 7;
  if (this->out_current() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->out_current());
  }

  // uint32 DCDC_temperature = 8;
  if (this->dcdc_temperature() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dcdc_temperature());
  }

  // uint32 over_temperature = 9;
  if (this->over_temperature() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->over_temperature());
  }

  // uint32 in_over_current = 10;
  if (this->in_over_current() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->in_over_current());
  }

  // uint32 out_over_current = 11;
  if (this->out_over_current() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->out_over_current());
  }

  // uint32 in_over_voltage = 12;
  if (this->in_over_voltage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->in_over_voltage());
  }

  // uint32 in_less_voltage = 13;
  if (this->in_less_voltage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->in_less_voltage());
  }

  // uint32 out_over_voltage = 14;
  if (this->out_over_voltage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->out_over_voltage());
  }

  // uint32 out_less_voltage = 15;
  if (this->out_less_voltage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->out_less_voltage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x63::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x63)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x63* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x63>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x63)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x63)
    MergeFrom(*source);
  }
}

void CanMsg_0x63::MergeFrom(const CanMsg_0x63& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x63)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.out_enable() != 0) {
    set_out_enable(from.out_enable());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.in_voltage() != 0) {
    set_in_voltage(from.in_voltage());
  }
  if (from.out_voltage() != 0) {
    set_out_voltage(from.out_voltage());
  }
  if (from.in_current() != 0) {
    set_in_current(from.in_current());
  }
  if (from.out_current() != 0) {
    set_out_current(from.out_current());
  }
  if (from.dcdc_temperature() != 0) {
    set_dcdc_temperature(from.dcdc_temperature());
  }
  if (from.over_temperature() != 0) {
    set_over_temperature(from.over_temperature());
  }
  if (from.in_over_current() != 0) {
    set_in_over_current(from.in_over_current());
  }
  if (from.out_over_current() != 0) {
    set_out_over_current(from.out_over_current());
  }
  if (from.in_over_voltage() != 0) {
    set_in_over_voltage(from.in_over_voltage());
  }
  if (from.in_less_voltage() != 0) {
    set_in_less_voltage(from.in_less_voltage());
  }
  if (from.out_over_voltage() != 0) {
    set_out_over_voltage(from.out_over_voltage());
  }
  if (from.out_less_voltage() != 0) {
    set_out_less_voltage(from.out_less_voltage());
  }
}

void CanMsg_0x63::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x63)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x63::CopyFrom(const CanMsg_0x63& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x63)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x63::IsInitialized() const {
  return true;
}

void CanMsg_0x63::Swap(CanMsg_0x63* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x63::InternalSwap(CanMsg_0x63* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(out_enable_, other->out_enable_);
  std::swap(state_, other->state_);
  std::swap(in_voltage_, other->in_voltage_);
  std::swap(out_voltage_, other->out_voltage_);
  std::swap(in_current_, other->in_current_);
  std::swap(out_current_, other->out_current_);
  std::swap(dcdc_temperature_, other->dcdc_temperature_);
  std::swap(over_temperature_, other->over_temperature_);
  std::swap(in_over_current_, other->in_over_current_);
  std::swap(out_over_current_, other->out_over_current_);
  std::swap(in_over_voltage_, other->in_over_voltage_);
  std::swap(in_less_voltage_, other->in_less_voltage_);
  std::swap(out_over_voltage_, other->out_over_voltage_);
  std::swap(out_less_voltage_, other->out_less_voltage_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x63::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x63

// bool isValid = 1;
void CanMsg_0x63::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x63::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x63.isValid)
  return isvalid_;
}
void CanMsg_0x63::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x63.isValid)
}

// uint32 out_enable = 2;
void CanMsg_0x63::clear_out_enable() {
  out_enable_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x63::out_enable() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x63.out_enable)
  return out_enable_;
}
void CanMsg_0x63::set_out_enable(::google::protobuf::uint32 value) {
  
  out_enable_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x63.out_enable)
}

// uint32 state = 3;
void CanMsg_0x63::clear_state() {
  state_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x63::state() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x63.state)
  return state_;
}
void CanMsg_0x63::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x63.state)
}

// uint32 IN_voltage = 4;
void CanMsg_0x63::clear_in_voltage() {
  in_voltage_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x63::in_voltage() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x63.IN_voltage)
  return in_voltage_;
}
void CanMsg_0x63::set_in_voltage(::google::protobuf::uint32 value) {
  
  in_voltage_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x63.IN_voltage)
}

// uint32 out_voltage = 5;
void CanMsg_0x63::clear_out_voltage() {
  out_voltage_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x63::out_voltage() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x63.out_voltage)
  return out_voltage_;
}
void CanMsg_0x63::set_out_voltage(::google::protobuf::uint32 value) {
  
  out_voltage_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x63.out_voltage)
}

// uint32 IN_current = 6;
void CanMsg_0x63::clear_in_current() {
  in_current_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x63::in_current() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x63.IN_current)
  return in_current_;
}
void CanMsg_0x63::set_in_current(::google::protobuf::uint32 value) {
  
  in_current_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x63.IN_current)
}

// uint32 out_current = 7;
void CanMsg_0x63::clear_out_current() {
  out_current_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x63::out_current() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x63.out_current)
  return out_current_;
}
void CanMsg_0x63::set_out_current(::google::protobuf::uint32 value) {
  
  out_current_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x63.out_current)
}

// uint32 DCDC_temperature = 8;
void CanMsg_0x63::clear_dcdc_temperature() {
  dcdc_temperature_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x63::dcdc_temperature() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x63.DCDC_temperature)
  return dcdc_temperature_;
}
void CanMsg_0x63::set_dcdc_temperature(::google::protobuf::uint32 value) {
  
  dcdc_temperature_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x63.DCDC_temperature)
}

// uint32 over_temperature = 9;
void CanMsg_0x63::clear_over_temperature() {
  over_temperature_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x63::over_temperature() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x63.over_temperature)
  return over_temperature_;
}
void CanMsg_0x63::set_over_temperature(::google::protobuf::uint32 value) {
  
  over_temperature_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x63.over_temperature)
}

// uint32 in_over_current = 10;
void CanMsg_0x63::clear_in_over_current() {
  in_over_current_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x63::in_over_current() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x63.in_over_current)
  return in_over_current_;
}
void CanMsg_0x63::set_in_over_current(::google::protobuf::uint32 value) {
  
  in_over_current_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x63.in_over_current)
}

// uint32 out_over_current = 11;
void CanMsg_0x63::clear_out_over_current() {
  out_over_current_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x63::out_over_current() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x63.out_over_current)
  return out_over_current_;
}
void CanMsg_0x63::set_out_over_current(::google::protobuf::uint32 value) {
  
  out_over_current_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x63.out_over_current)
}

// uint32 in_over_voltage = 12;
void CanMsg_0x63::clear_in_over_voltage() {
  in_over_voltage_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x63::in_over_voltage() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x63.in_over_voltage)
  return in_over_voltage_;
}
void CanMsg_0x63::set_in_over_voltage(::google::protobuf::uint32 value) {
  
  in_over_voltage_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x63.in_over_voltage)
}

// uint32 in_less_voltage = 13;
void CanMsg_0x63::clear_in_less_voltage() {
  in_less_voltage_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x63::in_less_voltage() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x63.in_less_voltage)
  return in_less_voltage_;
}
void CanMsg_0x63::set_in_less_voltage(::google::protobuf::uint32 value) {
  
  in_less_voltage_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x63.in_less_voltage)
}

// uint32 out_over_voltage = 14;
void CanMsg_0x63::clear_out_over_voltage() {
  out_over_voltage_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x63::out_over_voltage() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x63.out_over_voltage)
  return out_over_voltage_;
}
void CanMsg_0x63::set_out_over_voltage(::google::protobuf::uint32 value) {
  
  out_over_voltage_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x63.out_over_voltage)
}

// uint32 out_less_voltage = 15;
void CanMsg_0x63::clear_out_less_voltage() {
  out_less_voltage_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x63::out_less_voltage() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x63.out_less_voltage)
  return out_less_voltage_;
}
void CanMsg_0x63::set_out_less_voltage(::google::protobuf::uint32 value) {
  
  out_less_voltage_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x63.out_less_voltage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x62::kIsValidFieldNumber;
const int CanMsg_0x62::kBMSCANerrorFieldNumber;
const int CanMsg_0x62::kMCUCANerrorFieldNumber;
const int CanMsg_0x62::kEHBCANerrorFieldNumber;
const int CanMsg_0x62::kEPBCANerrorFieldNumber;
const int CanMsg_0x62::kEPSCANerrorFieldNumber;
const int CanMsg_0x62::kDC48VCANerrorFieldNumber;
const int CanMsg_0x62::kACCANerrorFieldNumber;
const int CanMsg_0x62::kADUCANerrorFieldNumber;
const int CanMsg_0x62::kICUCANerrorFieldNumber;
const int CanMsg_0x62::kDC12VCANerrorFieldNumber;
const int CanMsg_0x62::kGPSCANerrorFieldNumber;
const int CanMsg_0x62::kFJICANerrorFieldNumber;
const int CanMsg_0x62::kWPCANerrorFieldNumber;
const int CanMsg_0x62::kSPLCANerrorFieldNumber;
const int CanMsg_0x62::kSPRCANerrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x62::CanMsg_0x62()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x62)
}
CanMsg_0x62::CanMsg_0x62(const CanMsg_0x62& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&spr_canerror_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(spr_canerror_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x62)
}

void CanMsg_0x62::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&spr_canerror_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(spr_canerror_));
  _cached_size_ = 0;
}

CanMsg_0x62::~CanMsg_0x62() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x62)
  SharedDtor();
}

void CanMsg_0x62::SharedDtor() {
}

void CanMsg_0x62::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x62::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x62& CanMsg_0x62::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x62* CanMsg_0x62::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x62* n = new CanMsg_0x62;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x62::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x62)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&spr_canerror_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(spr_canerror_));
}

bool CanMsg_0x62::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x62)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BMS_CANerror = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bms_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MCU_CANerror = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mcu_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EHB_CANerror = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ehb_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EPB_CANerror = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &epb_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EPS_CANerror = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eps_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DC48V_CANerror = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dc48v_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 AC_CANerror = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ac_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ADU_CANerror = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &adu_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ICU_CANerror = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &icu_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DC12V_CANerror = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dc12v_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 GPS_CANerror = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gps_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 FJI_CANerror = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fji_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 WP_CANerror = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wp_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPL_CANerror = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spl_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPR_CANerror = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spr_canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x62)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x62)
  return false;
#undef DO_
}

void CanMsg_0x62::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x62)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 BMS_CANerror = 2;
  if (this->bms_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->bms_canerror(), output);
  }

  // uint32 MCU_CANerror = 3;
  if (this->mcu_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mcu_canerror(), output);
  }

  // uint32 EHB_CANerror = 4;
  if (this->ehb_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ehb_canerror(), output);
  }

  // uint32 EPB_CANerror = 5;
  if (this->epb_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->epb_canerror(), output);
  }

  // uint32 EPS_CANerror = 6;
  if (this->eps_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->eps_canerror(), output);
  }

  // uint32 DC48V_CANerror = 7;
  if (this->dc48v_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->dc48v_canerror(), output);
  }

  // uint32 AC_CANerror = 8;
  if (this->ac_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->ac_canerror(), output);
  }

  // uint32 ADU_CANerror = 9;
  if (this->adu_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->adu_canerror(), output);
  }

  // uint32 ICU_CANerror = 10;
  if (this->icu_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->icu_canerror(), output);
  }

  // uint32 DC12V_CANerror = 11;
  if (this->dc12v_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->dc12v_canerror(), output);
  }

  // uint32 GPS_CANerror = 12;
  if (this->gps_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->gps_canerror(), output);
  }

  // uint32 FJI_CANerror = 13;
  if (this->fji_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->fji_canerror(), output);
  }

  // uint32 WP_CANerror = 14;
  if (this->wp_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->wp_canerror(), output);
  }

  // uint32 SPL_CANerror = 15;
  if (this->spl_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->spl_canerror(), output);
  }

  // uint32 SPR_CANerror = 16;
  if (this->spr_canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->spr_canerror(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x62)
}

::google::protobuf::uint8* CanMsg_0x62::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x62)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 BMS_CANerror = 2;
  if (this->bms_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->bms_canerror(), target);
  }

  // uint32 MCU_CANerror = 3;
  if (this->mcu_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mcu_canerror(), target);
  }

  // uint32 EHB_CANerror = 4;
  if (this->ehb_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ehb_canerror(), target);
  }

  // uint32 EPB_CANerror = 5;
  if (this->epb_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->epb_canerror(), target);
  }

  // uint32 EPS_CANerror = 6;
  if (this->eps_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->eps_canerror(), target);
  }

  // uint32 DC48V_CANerror = 7;
  if (this->dc48v_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->dc48v_canerror(), target);
  }

  // uint32 AC_CANerror = 8;
  if (this->ac_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->ac_canerror(), target);
  }

  // uint32 ADU_CANerror = 9;
  if (this->adu_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->adu_canerror(), target);
  }

  // uint32 ICU_CANerror = 10;
  if (this->icu_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->icu_canerror(), target);
  }

  // uint32 DC12V_CANerror = 11;
  if (this->dc12v_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->dc12v_canerror(), target);
  }

  // uint32 GPS_CANerror = 12;
  if (this->gps_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->gps_canerror(), target);
  }

  // uint32 FJI_CANerror = 13;
  if (this->fji_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->fji_canerror(), target);
  }

  // uint32 WP_CANerror = 14;
  if (this->wp_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->wp_canerror(), target);
  }

  // uint32 SPL_CANerror = 15;
  if (this->spl_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->spl_canerror(), target);
  }

  // uint32 SPR_CANerror = 16;
  if (this->spr_canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->spr_canerror(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x62)
  return target;
}

size_t CanMsg_0x62::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x62)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 BMS_CANerror = 2;
  if (this->bms_canerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bms_canerror());
  }

  // uint32 MCU_CANerror = 3;
  if (this->mcu_canerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mcu_canerror());
  }

  // uint32 EHB_CANerror = 4;
  if (this->ehb_canerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ehb_canerror());
  }

  // uint32 EPB_CANerror = 5;
  if (this->epb_canerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->epb_canerror());
  }

  // uint32 EPS_CANerror = 6;
  if (this->eps_canerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eps_canerror());
  }

  // uint32 DC48V_CANerror = 7;
  if (this->dc48v_canerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dc48v_canerror());
  }

  // uint32 AC_CANerror = 8;
  if (this->ac_canerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ac_canerror());
  }

  // uint32 ADU_CANerror = 9;
  if (this->adu_canerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->adu_canerror());
  }

  // uint32 ICU_CANerror = 10;
  if (this->icu_canerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->icu_canerror());
  }

  // uint32 DC12V_CANerror = 11;
  if (this->dc12v_canerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dc12v_canerror());
  }

  // uint32 GPS_CANerror = 12;
  if (this->gps_canerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gps_canerror());
  }

  // uint32 FJI_CANerror = 13;
  if (this->fji_canerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fji_canerror());
  }

  // uint32 WP_CANerror = 14;
  if (this->wp_canerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wp_canerror());
  }

  // uint32 SPL_CANerror = 15;
  if (this->spl_canerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spl_canerror());
  }

  // uint32 SPR_CANerror = 16;
  if (this->spr_canerror() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spr_canerror());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x62::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x62)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x62* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x62>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x62)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x62)
    MergeFrom(*source);
  }
}

void CanMsg_0x62::MergeFrom(const CanMsg_0x62& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x62)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.bms_canerror() != 0) {
    set_bms_canerror(from.bms_canerror());
  }
  if (from.mcu_canerror() != 0) {
    set_mcu_canerror(from.mcu_canerror());
  }
  if (from.ehb_canerror() != 0) {
    set_ehb_canerror(from.ehb_canerror());
  }
  if (from.epb_canerror() != 0) {
    set_epb_canerror(from.epb_canerror());
  }
  if (from.eps_canerror() != 0) {
    set_eps_canerror(from.eps_canerror());
  }
  if (from.dc48v_canerror() != 0) {
    set_dc48v_canerror(from.dc48v_canerror());
  }
  if (from.ac_canerror() != 0) {
    set_ac_canerror(from.ac_canerror());
  }
  if (from.adu_canerror() != 0) {
    set_adu_canerror(from.adu_canerror());
  }
  if (from.icu_canerror() != 0) {
    set_icu_canerror(from.icu_canerror());
  }
  if (from.dc12v_canerror() != 0) {
    set_dc12v_canerror(from.dc12v_canerror());
  }
  if (from.gps_canerror() != 0) {
    set_gps_canerror(from.gps_canerror());
  }
  if (from.fji_canerror() != 0) {
    set_fji_canerror(from.fji_canerror());
  }
  if (from.wp_canerror() != 0) {
    set_wp_canerror(from.wp_canerror());
  }
  if (from.spl_canerror() != 0) {
    set_spl_canerror(from.spl_canerror());
  }
  if (from.spr_canerror() != 0) {
    set_spr_canerror(from.spr_canerror());
  }
}

void CanMsg_0x62::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x62)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x62::CopyFrom(const CanMsg_0x62& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x62)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x62::IsInitialized() const {
  return true;
}

void CanMsg_0x62::Swap(CanMsg_0x62* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x62::InternalSwap(CanMsg_0x62* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(bms_canerror_, other->bms_canerror_);
  std::swap(mcu_canerror_, other->mcu_canerror_);
  std::swap(ehb_canerror_, other->ehb_canerror_);
  std::swap(epb_canerror_, other->epb_canerror_);
  std::swap(eps_canerror_, other->eps_canerror_);
  std::swap(dc48v_canerror_, other->dc48v_canerror_);
  std::swap(ac_canerror_, other->ac_canerror_);
  std::swap(adu_canerror_, other->adu_canerror_);
  std::swap(icu_canerror_, other->icu_canerror_);
  std::swap(dc12v_canerror_, other->dc12v_canerror_);
  std::swap(gps_canerror_, other->gps_canerror_);
  std::swap(fji_canerror_, other->fji_canerror_);
  std::swap(wp_canerror_, other->wp_canerror_);
  std::swap(spl_canerror_, other->spl_canerror_);
  std::swap(spr_canerror_, other->spr_canerror_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x62::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x62

// bool isValid = 1;
void CanMsg_0x62::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x62::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x62.isValid)
  return isvalid_;
}
void CanMsg_0x62::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x62.isValid)
}

// uint32 BMS_CANerror = 2;
void CanMsg_0x62::clear_bms_canerror() {
  bms_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x62::bms_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x62.BMS_CANerror)
  return bms_canerror_;
}
void CanMsg_0x62::set_bms_canerror(::google::protobuf::uint32 value) {
  
  bms_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x62.BMS_CANerror)
}

// uint32 MCU_CANerror = 3;
void CanMsg_0x62::clear_mcu_canerror() {
  mcu_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x62::mcu_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x62.MCU_CANerror)
  return mcu_canerror_;
}
void CanMsg_0x62::set_mcu_canerror(::google::protobuf::uint32 value) {
  
  mcu_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x62.MCU_CANerror)
}

// uint32 EHB_CANerror = 4;
void CanMsg_0x62::clear_ehb_canerror() {
  ehb_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x62::ehb_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x62.EHB_CANerror)
  return ehb_canerror_;
}
void CanMsg_0x62::set_ehb_canerror(::google::protobuf::uint32 value) {
  
  ehb_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x62.EHB_CANerror)
}

// uint32 EPB_CANerror = 5;
void CanMsg_0x62::clear_epb_canerror() {
  epb_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x62::epb_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x62.EPB_CANerror)
  return epb_canerror_;
}
void CanMsg_0x62::set_epb_canerror(::google::protobuf::uint32 value) {
  
  epb_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x62.EPB_CANerror)
}

// uint32 EPS_CANerror = 6;
void CanMsg_0x62::clear_eps_canerror() {
  eps_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x62::eps_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x62.EPS_CANerror)
  return eps_canerror_;
}
void CanMsg_0x62::set_eps_canerror(::google::protobuf::uint32 value) {
  
  eps_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x62.EPS_CANerror)
}

// uint32 DC48V_CANerror = 7;
void CanMsg_0x62::clear_dc48v_canerror() {
  dc48v_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x62::dc48v_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x62.DC48V_CANerror)
  return dc48v_canerror_;
}
void CanMsg_0x62::set_dc48v_canerror(::google::protobuf::uint32 value) {
  
  dc48v_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x62.DC48V_CANerror)
}

// uint32 AC_CANerror = 8;
void CanMsg_0x62::clear_ac_canerror() {
  ac_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x62::ac_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x62.AC_CANerror)
  return ac_canerror_;
}
void CanMsg_0x62::set_ac_canerror(::google::protobuf::uint32 value) {
  
  ac_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x62.AC_CANerror)
}

// uint32 ADU_CANerror = 9;
void CanMsg_0x62::clear_adu_canerror() {
  adu_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x62::adu_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x62.ADU_CANerror)
  return adu_canerror_;
}
void CanMsg_0x62::set_adu_canerror(::google::protobuf::uint32 value) {
  
  adu_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x62.ADU_CANerror)
}

// uint32 ICU_CANerror = 10;
void CanMsg_0x62::clear_icu_canerror() {
  icu_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x62::icu_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x62.ICU_CANerror)
  return icu_canerror_;
}
void CanMsg_0x62::set_icu_canerror(::google::protobuf::uint32 value) {
  
  icu_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x62.ICU_CANerror)
}

// uint32 DC12V_CANerror = 11;
void CanMsg_0x62::clear_dc12v_canerror() {
  dc12v_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x62::dc12v_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x62.DC12V_CANerror)
  return dc12v_canerror_;
}
void CanMsg_0x62::set_dc12v_canerror(::google::protobuf::uint32 value) {
  
  dc12v_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x62.DC12V_CANerror)
}

// uint32 GPS_CANerror = 12;
void CanMsg_0x62::clear_gps_canerror() {
  gps_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x62::gps_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x62.GPS_CANerror)
  return gps_canerror_;
}
void CanMsg_0x62::set_gps_canerror(::google::protobuf::uint32 value) {
  
  gps_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x62.GPS_CANerror)
}

// uint32 FJI_CANerror = 13;
void CanMsg_0x62::clear_fji_canerror() {
  fji_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x62::fji_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x62.FJI_CANerror)
  return fji_canerror_;
}
void CanMsg_0x62::set_fji_canerror(::google::protobuf::uint32 value) {
  
  fji_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x62.FJI_CANerror)
}

// uint32 WP_CANerror = 14;
void CanMsg_0x62::clear_wp_canerror() {
  wp_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x62::wp_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x62.WP_CANerror)
  return wp_canerror_;
}
void CanMsg_0x62::set_wp_canerror(::google::protobuf::uint32 value) {
  
  wp_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x62.WP_CANerror)
}

// uint32 SPL_CANerror = 15;
void CanMsg_0x62::clear_spl_canerror() {
  spl_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x62::spl_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x62.SPL_CANerror)
  return spl_canerror_;
}
void CanMsg_0x62::set_spl_canerror(::google::protobuf::uint32 value) {
  
  spl_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x62.SPL_CANerror)
}

// uint32 SPR_CANerror = 16;
void CanMsg_0x62::clear_spr_canerror() {
  spr_canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x62::spr_canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x62.SPR_CANerror)
  return spr_canerror_;
}
void CanMsg_0x62::set_spr_canerror(::google::protobuf::uint32 value) {
  
  spr_canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x62.SPR_CANerror)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x61::kIsValidFieldNumber;
const int CanMsg_0x61::kEHBWorkStsFieldNumber;
const int CanMsg_0x61::kParkReqFieldNumber;
const int CanMsg_0x61::kBrakeStsFieldNumber;
const int CanMsg_0x61::kFaultLevelFieldNumber;
const int CanMsg_0x61::kBrakePressFieldNumber;
const int CanMsg_0x61::kPedalPercentFieldNumber;
const int CanMsg_0x61::kPistonDisplacementFieldNumber;
const int CanMsg_0x61::kTargetPressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x61::CanMsg_0x61()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x61)
}
CanMsg_0x61::CanMsg_0x61(const CanMsg_0x61& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&targetpress_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(targetpress_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x61)
}

void CanMsg_0x61::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&targetpress_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(targetpress_));
  _cached_size_ = 0;
}

CanMsg_0x61::~CanMsg_0x61() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x61)
  SharedDtor();
}

void CanMsg_0x61::SharedDtor() {
}

void CanMsg_0x61::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x61::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x61& CanMsg_0x61::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x61* CanMsg_0x61::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x61* n = new CanMsg_0x61;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x61::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x61)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&targetpress_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(targetpress_));
}

bool CanMsg_0x61::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x61)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EHB_WorkSts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ehb_worksts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ParkReq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parkreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BrakeSts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &brakests_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 faultLevel = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &faultlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BrakePress = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &brakepress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pedal_percent = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pedal_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PistonDisplacement = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pistondisplacement_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 targetPress = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targetpress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x61)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x61)
  return false;
#undef DO_
}

void CanMsg_0x61::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x61)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 EHB_WorkSts = 2;
  if (this->ehb_worksts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ehb_worksts(), output);
  }

  // uint32 ParkReq = 3;
  if (this->parkreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->parkreq(), output);
  }

  // uint32 BrakeSts = 4;
  if (this->brakests() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->brakests(), output);
  }

  // uint32 faultLevel = 5;
  if (this->faultlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->faultlevel(), output);
  }

  // uint32 BrakePress = 6;
  if (this->brakepress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->brakepress(), output);
  }

  // uint32 pedal_percent = 7;
  if (this->pedal_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pedal_percent(), output);
  }

  // uint32 PistonDisplacement = 8;
  if (this->pistondisplacement() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->pistondisplacement(), output);
  }

  // uint32 targetPress = 9;
  if (this->targetpress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->targetpress(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x61)
}

::google::protobuf::uint8* CanMsg_0x61::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x61)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 EHB_WorkSts = 2;
  if (this->ehb_worksts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ehb_worksts(), target);
  }

  // uint32 ParkReq = 3;
  if (this->parkreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->parkreq(), target);
  }

  // uint32 BrakeSts = 4;
  if (this->brakests() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->brakests(), target);
  }

  // uint32 faultLevel = 5;
  if (this->faultlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->faultlevel(), target);
  }

  // uint32 BrakePress = 6;
  if (this->brakepress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->brakepress(), target);
  }

  // uint32 pedal_percent = 7;
  if (this->pedal_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pedal_percent(), target);
  }

  // uint32 PistonDisplacement = 8;
  if (this->pistondisplacement() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->pistondisplacement(), target);
  }

  // uint32 targetPress = 9;
  if (this->targetpress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->targetpress(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x61)
  return target;
}

size_t CanMsg_0x61::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x61)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 EHB_WorkSts = 2;
  if (this->ehb_worksts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ehb_worksts());
  }

  // uint32 ParkReq = 3;
  if (this->parkreq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parkreq());
  }

  // uint32 BrakeSts = 4;
  if (this->brakests() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->brakests());
  }

  // uint32 faultLevel = 5;
  if (this->faultlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->faultlevel());
  }

  // uint32 BrakePress = 6;
  if (this->brakepress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->brakepress());
  }

  // uint32 pedal_percent = 7;
  if (this->pedal_percent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pedal_percent());
  }

  // uint32 PistonDisplacement = 8;
  if (this->pistondisplacement() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pistondisplacement());
  }

  // uint32 targetPress = 9;
  if (this->targetpress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->targetpress());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x61::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x61)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x61* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x61>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x61)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x61)
    MergeFrom(*source);
  }
}

void CanMsg_0x61::MergeFrom(const CanMsg_0x61& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x61)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.ehb_worksts() != 0) {
    set_ehb_worksts(from.ehb_worksts());
  }
  if (from.parkreq() != 0) {
    set_parkreq(from.parkreq());
  }
  if (from.brakests() != 0) {
    set_brakests(from.brakests());
  }
  if (from.faultlevel() != 0) {
    set_faultlevel(from.faultlevel());
  }
  if (from.brakepress() != 0) {
    set_brakepress(from.brakepress());
  }
  if (from.pedal_percent() != 0) {
    set_pedal_percent(from.pedal_percent());
  }
  if (from.pistondisplacement() != 0) {
    set_pistondisplacement(from.pistondisplacement());
  }
  if (from.targetpress() != 0) {
    set_targetpress(from.targetpress());
  }
}

void CanMsg_0x61::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x61)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x61::CopyFrom(const CanMsg_0x61& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x61)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x61::IsInitialized() const {
  return true;
}

void CanMsg_0x61::Swap(CanMsg_0x61* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x61::InternalSwap(CanMsg_0x61* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(ehb_worksts_, other->ehb_worksts_);
  std::swap(parkreq_, other->parkreq_);
  std::swap(brakests_, other->brakests_);
  std::swap(faultlevel_, other->faultlevel_);
  std::swap(brakepress_, other->brakepress_);
  std::swap(pedal_percent_, other->pedal_percent_);
  std::swap(pistondisplacement_, other->pistondisplacement_);
  std::swap(targetpress_, other->targetpress_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x61::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x61

// bool isValid = 1;
void CanMsg_0x61::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x61::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x61.isValid)
  return isvalid_;
}
void CanMsg_0x61::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x61.isValid)
}

// uint32 EHB_WorkSts = 2;
void CanMsg_0x61::clear_ehb_worksts() {
  ehb_worksts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x61::ehb_worksts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x61.EHB_WorkSts)
  return ehb_worksts_;
}
void CanMsg_0x61::set_ehb_worksts(::google::protobuf::uint32 value) {
  
  ehb_worksts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x61.EHB_WorkSts)
}

// uint32 ParkReq = 3;
void CanMsg_0x61::clear_parkreq() {
  parkreq_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x61::parkreq() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x61.ParkReq)
  return parkreq_;
}
void CanMsg_0x61::set_parkreq(::google::protobuf::uint32 value) {
  
  parkreq_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x61.ParkReq)
}

// uint32 BrakeSts = 4;
void CanMsg_0x61::clear_brakests() {
  brakests_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x61::brakests() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x61.BrakeSts)
  return brakests_;
}
void CanMsg_0x61::set_brakests(::google::protobuf::uint32 value) {
  
  brakests_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x61.BrakeSts)
}

// uint32 faultLevel = 5;
void CanMsg_0x61::clear_faultlevel() {
  faultlevel_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x61::faultlevel() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x61.faultLevel)
  return faultlevel_;
}
void CanMsg_0x61::set_faultlevel(::google::protobuf::uint32 value) {
  
  faultlevel_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x61.faultLevel)
}

// uint32 BrakePress = 6;
void CanMsg_0x61::clear_brakepress() {
  brakepress_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x61::brakepress() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x61.BrakePress)
  return brakepress_;
}
void CanMsg_0x61::set_brakepress(::google::protobuf::uint32 value) {
  
  brakepress_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x61.BrakePress)
}

// uint32 pedal_percent = 7;
void CanMsg_0x61::clear_pedal_percent() {
  pedal_percent_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x61::pedal_percent() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x61.pedal_percent)
  return pedal_percent_;
}
void CanMsg_0x61::set_pedal_percent(::google::protobuf::uint32 value) {
  
  pedal_percent_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x61.pedal_percent)
}

// uint32 PistonDisplacement = 8;
void CanMsg_0x61::clear_pistondisplacement() {
  pistondisplacement_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x61::pistondisplacement() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x61.PistonDisplacement)
  return pistondisplacement_;
}
void CanMsg_0x61::set_pistondisplacement(::google::protobuf::uint32 value) {
  
  pistondisplacement_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x61.PistonDisplacement)
}

// uint32 targetPress = 9;
void CanMsg_0x61::clear_targetpress() {
  targetpress_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x61::targetpress() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x61.targetPress)
  return targetpress_;
}
void CanMsg_0x61::set_targetpress(::google::protobuf::uint32 value) {
  
  targetpress_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x61.targetPress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x5F::kIsValidFieldNumber;
const int CanMsg_0x5F::kFaultCode1FieldNumber;
const int CanMsg_0x5F::kFaultCode2FieldNumber;
const int CanMsg_0x5F::kFaultCode3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x5F::CanMsg_0x5F()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x5F)
}
CanMsg_0x5F::CanMsg_0x5F(const CanMsg_0x5F& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&faultcode3_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(faultcode3_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x5F)
}

void CanMsg_0x5F::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&faultcode3_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(faultcode3_));
  _cached_size_ = 0;
}

CanMsg_0x5F::~CanMsg_0x5F() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x5F)
  SharedDtor();
}

void CanMsg_0x5F::SharedDtor() {
}

void CanMsg_0x5F::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x5F::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x5F& CanMsg_0x5F::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x5F* CanMsg_0x5F::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x5F* n = new CanMsg_0x5F;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x5F::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x5F)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&faultcode3_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(faultcode3_));
}

bool CanMsg_0x5F::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x5F)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 faultCode1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &faultcode1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 faultCode2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &faultcode2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 faultCode3 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &faultcode3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x5F)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x5F)
  return false;
#undef DO_
}

void CanMsg_0x5F::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x5F)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 faultCode1 = 2;
  if (this->faultcode1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->faultcode1(), output);
  }

  // uint32 faultCode2 = 3;
  if (this->faultcode2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->faultcode2(), output);
  }

  // uint32 faultCode3 = 4;
  if (this->faultcode3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->faultcode3(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x5F)
}

::google::protobuf::uint8* CanMsg_0x5F::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x5F)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 faultCode1 = 2;
  if (this->faultcode1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->faultcode1(), target);
  }

  // uint32 faultCode2 = 3;
  if (this->faultcode2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->faultcode2(), target);
  }

  // uint32 faultCode3 = 4;
  if (this->faultcode3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->faultcode3(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x5F)
  return target;
}

size_t CanMsg_0x5F::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x5F)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 faultCode1 = 2;
  if (this->faultcode1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->faultcode1());
  }

  // uint32 faultCode2 = 3;
  if (this->faultcode2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->faultcode2());
  }

  // uint32 faultCode3 = 4;
  if (this->faultcode3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->faultcode3());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x5F::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x5F)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x5F* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x5F>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x5F)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x5F)
    MergeFrom(*source);
  }
}

void CanMsg_0x5F::MergeFrom(const CanMsg_0x5F& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x5F)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.faultcode1() != 0) {
    set_faultcode1(from.faultcode1());
  }
  if (from.faultcode2() != 0) {
    set_faultcode2(from.faultcode2());
  }
  if (from.faultcode3() != 0) {
    set_faultcode3(from.faultcode3());
  }
}

void CanMsg_0x5F::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x5F)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x5F::CopyFrom(const CanMsg_0x5F& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x5F)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x5F::IsInitialized() const {
  return true;
}

void CanMsg_0x5F::Swap(CanMsg_0x5F* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x5F::InternalSwap(CanMsg_0x5F* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(faultcode1_, other->faultcode1_);
  std::swap(faultcode2_, other->faultcode2_);
  std::swap(faultcode3_, other->faultcode3_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x5F::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x5F

// bool isValid = 1;
void CanMsg_0x5F::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x5F::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5F.isValid)
  return isvalid_;
}
void CanMsg_0x5F::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5F.isValid)
}

// uint32 faultCode1 = 2;
void CanMsg_0x5F::clear_faultcode1() {
  faultcode1_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x5F::faultcode1() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5F.faultCode1)
  return faultcode1_;
}
void CanMsg_0x5F::set_faultcode1(::google::protobuf::uint32 value) {
  
  faultcode1_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5F.faultCode1)
}

// uint32 faultCode2 = 3;
void CanMsg_0x5F::clear_faultcode2() {
  faultcode2_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x5F::faultcode2() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5F.faultCode2)
  return faultcode2_;
}
void CanMsg_0x5F::set_faultcode2(::google::protobuf::uint32 value) {
  
  faultcode2_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5F.faultCode2)
}

// uint32 faultCode3 = 4;
void CanMsg_0x5F::clear_faultcode3() {
  faultcode3_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x5F::faultcode3() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5F.faultCode3)
  return faultcode3_;
}
void CanMsg_0x5F::set_faultcode3(::google::protobuf::uint32 value) {
  
  faultcode3_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5F.faultCode3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x60::kIsValidFieldNumber;
const int CanMsg_0x60::kParklightStsFieldNumber;
const int CanMsg_0x60::kFaultlightStsFieldNumber;
const int CanMsg_0x60::kSwitchStsFieldNumber;
const int CanMsg_0x60::kBrakeStsFieldNumber;
const int CanMsg_0x60::kSystemStsFieldNumber;
const int CanMsg_0x60::kFaultMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x60::CanMsg_0x60()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x60)
}
CanMsg_0x60::CanMsg_0x60(const CanMsg_0x60& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&fault_message_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(fault_message_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x60)
}

void CanMsg_0x60::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&fault_message_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(fault_message_));
  _cached_size_ = 0;
}

CanMsg_0x60::~CanMsg_0x60() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x60)
  SharedDtor();
}

void CanMsg_0x60::SharedDtor() {
}

void CanMsg_0x60::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x60::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x60& CanMsg_0x60::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x60* CanMsg_0x60::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x60* n = new CanMsg_0x60;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x60::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x60)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&fault_message_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(fault_message_));
}

bool CanMsg_0x60::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x60)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Parklight_sts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parklight_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 faultlight_sts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &faultlight_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 switch_sts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &switch_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 brake_sts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &brake_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 system_sts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &system_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fault_message = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fault_message_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x60)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x60)
  return false;
#undef DO_
}

void CanMsg_0x60::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x60)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 Parklight_sts = 2;
  if (this->parklight_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->parklight_sts(), output);
  }

  // uint32 faultlight_sts = 3;
  if (this->faultlight_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->faultlight_sts(), output);
  }

  // uint32 switch_sts = 4;
  if (this->switch_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->switch_sts(), output);
  }

  // uint32 brake_sts = 5;
  if (this->brake_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->brake_sts(), output);
  }

  // uint32 system_sts = 6;
  if (this->system_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->system_sts(), output);
  }

  // uint32 fault_message = 7;
  if (this->fault_message() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->fault_message(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x60)
}

::google::protobuf::uint8* CanMsg_0x60::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x60)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 Parklight_sts = 2;
  if (this->parklight_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->parklight_sts(), target);
  }

  // uint32 faultlight_sts = 3;
  if (this->faultlight_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->faultlight_sts(), target);
  }

  // uint32 switch_sts = 4;
  if (this->switch_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->switch_sts(), target);
  }

  // uint32 brake_sts = 5;
  if (this->brake_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->brake_sts(), target);
  }

  // uint32 system_sts = 6;
  if (this->system_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->system_sts(), target);
  }

  // uint32 fault_message = 7;
  if (this->fault_message() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->fault_message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x60)
  return target;
}

size_t CanMsg_0x60::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x60)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 Parklight_sts = 2;
  if (this->parklight_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parklight_sts());
  }

  // uint32 faultlight_sts = 3;
  if (this->faultlight_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->faultlight_sts());
  }

  // uint32 switch_sts = 4;
  if (this->switch_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->switch_sts());
  }

  // uint32 brake_sts = 5;
  if (this->brake_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->brake_sts());
  }

  // uint32 system_sts = 6;
  if (this->system_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->system_sts());
  }

  // uint32 fault_message = 7;
  if (this->fault_message() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fault_message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x60::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x60)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x60* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x60>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x60)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x60)
    MergeFrom(*source);
  }
}

void CanMsg_0x60::MergeFrom(const CanMsg_0x60& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x60)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.parklight_sts() != 0) {
    set_parklight_sts(from.parklight_sts());
  }
  if (from.faultlight_sts() != 0) {
    set_faultlight_sts(from.faultlight_sts());
  }
  if (from.switch_sts() != 0) {
    set_switch_sts(from.switch_sts());
  }
  if (from.brake_sts() != 0) {
    set_brake_sts(from.brake_sts());
  }
  if (from.system_sts() != 0) {
    set_system_sts(from.system_sts());
  }
  if (from.fault_message() != 0) {
    set_fault_message(from.fault_message());
  }
}

void CanMsg_0x60::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x60)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x60::CopyFrom(const CanMsg_0x60& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x60)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x60::IsInitialized() const {
  return true;
}

void CanMsg_0x60::Swap(CanMsg_0x60* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x60::InternalSwap(CanMsg_0x60* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(parklight_sts_, other->parklight_sts_);
  std::swap(faultlight_sts_, other->faultlight_sts_);
  std::swap(switch_sts_, other->switch_sts_);
  std::swap(brake_sts_, other->brake_sts_);
  std::swap(system_sts_, other->system_sts_);
  std::swap(fault_message_, other->fault_message_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x60::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x60

// bool isValid = 1;
void CanMsg_0x60::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x60::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x60.isValid)
  return isvalid_;
}
void CanMsg_0x60::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x60.isValid)
}

// uint32 Parklight_sts = 2;
void CanMsg_0x60::clear_parklight_sts() {
  parklight_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x60::parklight_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x60.Parklight_sts)
  return parklight_sts_;
}
void CanMsg_0x60::set_parklight_sts(::google::protobuf::uint32 value) {
  
  parklight_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x60.Parklight_sts)
}

// uint32 faultlight_sts = 3;
void CanMsg_0x60::clear_faultlight_sts() {
  faultlight_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x60::faultlight_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x60.faultlight_sts)
  return faultlight_sts_;
}
void CanMsg_0x60::set_faultlight_sts(::google::protobuf::uint32 value) {
  
  faultlight_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x60.faultlight_sts)
}

// uint32 switch_sts = 4;
void CanMsg_0x60::clear_switch_sts() {
  switch_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x60::switch_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x60.switch_sts)
  return switch_sts_;
}
void CanMsg_0x60::set_switch_sts(::google::protobuf::uint32 value) {
  
  switch_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x60.switch_sts)
}

// uint32 brake_sts = 5;
void CanMsg_0x60::clear_brake_sts() {
  brake_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x60::brake_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x60.brake_sts)
  return brake_sts_;
}
void CanMsg_0x60::set_brake_sts(::google::protobuf::uint32 value) {
  
  brake_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x60.brake_sts)
}

// uint32 system_sts = 6;
void CanMsg_0x60::clear_system_sts() {
  system_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x60::system_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x60.system_sts)
  return system_sts_;
}
void CanMsg_0x60::set_system_sts(::google::protobuf::uint32 value) {
  
  system_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x60.system_sts)
}

// uint32 fault_message = 7;
void CanMsg_0x60::clear_fault_message() {
  fault_message_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x60::fault_message() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x60.fault_message)
  return fault_message_;
}
void CanMsg_0x60::set_fault_message(::google::protobuf::uint32 value) {
  
  fault_message_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x60.fault_message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x5E::kIsValidFieldNumber;
const int CanMsg_0x5E::kCompressorSpeedFieldNumber;
const int CanMsg_0x5E::kOutPowerFieldNumber;
const int CanMsg_0x5E::kCompressorStsFieldNumber;
const int CanMsg_0x5E::kFaultCodeMainFieldNumber;
const int CanMsg_0x5E::kFaultCodeSonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x5E::CanMsg_0x5E()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x5E)
}
CanMsg_0x5E::CanMsg_0x5E(const CanMsg_0x5E& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&faultcode_son_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(faultcode_son_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x5E)
}

void CanMsg_0x5E::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&faultcode_son_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(faultcode_son_));
  _cached_size_ = 0;
}

CanMsg_0x5E::~CanMsg_0x5E() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x5E)
  SharedDtor();
}

void CanMsg_0x5E::SharedDtor() {
}

void CanMsg_0x5E::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x5E::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x5E& CanMsg_0x5E::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x5E* CanMsg_0x5E::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x5E* n = new CanMsg_0x5E;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x5E::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x5E)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&faultcode_son_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(faultcode_son_));
}

bool CanMsg_0x5E::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x5E)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 compressor_speed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compressor_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 out_power = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &out_power_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 compressor_sts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compressor_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 faultCode_main = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &faultcode_main_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 faultCode_son = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &faultcode_son_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x5E)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x5E)
  return false;
#undef DO_
}

void CanMsg_0x5E::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x5E)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 compressor_speed = 2;
  if (this->compressor_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->compressor_speed(), output);
  }

  // uint32 out_power = 3;
  if (this->out_power() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->out_power(), output);
  }

  // uint32 compressor_sts = 4;
  if (this->compressor_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->compressor_sts(), output);
  }

  // uint32 faultCode_main = 5;
  if (this->faultcode_main() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->faultcode_main(), output);
  }

  // uint32 faultCode_son = 6;
  if (this->faultcode_son() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->faultcode_son(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x5E)
}

::google::protobuf::uint8* CanMsg_0x5E::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x5E)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 compressor_speed = 2;
  if (this->compressor_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->compressor_speed(), target);
  }

  // uint32 out_power = 3;
  if (this->out_power() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->out_power(), target);
  }

  // uint32 compressor_sts = 4;
  if (this->compressor_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->compressor_sts(), target);
  }

  // uint32 faultCode_main = 5;
  if (this->faultcode_main() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->faultcode_main(), target);
  }

  // uint32 faultCode_son = 6;
  if (this->faultcode_son() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->faultcode_son(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x5E)
  return target;
}

size_t CanMsg_0x5E::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x5E)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 compressor_speed = 2;
  if (this->compressor_speed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->compressor_speed());
  }

  // uint32 out_power = 3;
  if (this->out_power() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->out_power());
  }

  // uint32 compressor_sts = 4;
  if (this->compressor_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->compressor_sts());
  }

  // uint32 faultCode_main = 5;
  if (this->faultcode_main() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->faultcode_main());
  }

  // uint32 faultCode_son = 6;
  if (this->faultcode_son() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->faultcode_son());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x5E::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x5E)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x5E* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x5E>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x5E)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x5E)
    MergeFrom(*source);
  }
}

void CanMsg_0x5E::MergeFrom(const CanMsg_0x5E& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x5E)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.compressor_speed() != 0) {
    set_compressor_speed(from.compressor_speed());
  }
  if (from.out_power() != 0) {
    set_out_power(from.out_power());
  }
  if (from.compressor_sts() != 0) {
    set_compressor_sts(from.compressor_sts());
  }
  if (from.faultcode_main() != 0) {
    set_faultcode_main(from.faultcode_main());
  }
  if (from.faultcode_son() != 0) {
    set_faultcode_son(from.faultcode_son());
  }
}

void CanMsg_0x5E::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x5E)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x5E::CopyFrom(const CanMsg_0x5E& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x5E)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x5E::IsInitialized() const {
  return true;
}

void CanMsg_0x5E::Swap(CanMsg_0x5E* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x5E::InternalSwap(CanMsg_0x5E* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(compressor_speed_, other->compressor_speed_);
  std::swap(out_power_, other->out_power_);
  std::swap(compressor_sts_, other->compressor_sts_);
  std::swap(faultcode_main_, other->faultcode_main_);
  std::swap(faultcode_son_, other->faultcode_son_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x5E::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x5E

// bool isValid = 1;
void CanMsg_0x5E::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x5E::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5E.isValid)
  return isvalid_;
}
void CanMsg_0x5E::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5E.isValid)
}

// uint32 compressor_speed = 2;
void CanMsg_0x5E::clear_compressor_speed() {
  compressor_speed_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x5E::compressor_speed() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5E.compressor_speed)
  return compressor_speed_;
}
void CanMsg_0x5E::set_compressor_speed(::google::protobuf::uint32 value) {
  
  compressor_speed_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5E.compressor_speed)
}

// uint32 out_power = 3;
void CanMsg_0x5E::clear_out_power() {
  out_power_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x5E::out_power() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5E.out_power)
  return out_power_;
}
void CanMsg_0x5E::set_out_power(::google::protobuf::uint32 value) {
  
  out_power_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5E.out_power)
}

// uint32 compressor_sts = 4;
void CanMsg_0x5E::clear_compressor_sts() {
  compressor_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x5E::compressor_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5E.compressor_sts)
  return compressor_sts_;
}
void CanMsg_0x5E::set_compressor_sts(::google::protobuf::uint32 value) {
  
  compressor_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5E.compressor_sts)
}

// uint32 faultCode_main = 5;
void CanMsg_0x5E::clear_faultcode_main() {
  faultcode_main_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x5E::faultcode_main() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5E.faultCode_main)
  return faultcode_main_;
}
void CanMsg_0x5E::set_faultcode_main(::google::protobuf::uint32 value) {
  
  faultcode_main_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5E.faultCode_main)
}

// uint32 faultCode_son = 6;
void CanMsg_0x5E::clear_faultcode_son() {
  faultcode_son_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x5E::faultcode_son() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5E.faultCode_son)
  return faultcode_son_;
}
void CanMsg_0x5E::set_faultcode_son(::google::protobuf::uint32 value) {
  
  faultcode_son_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5E.faultCode_son)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x5D::kIsValidFieldNumber;
const int CanMsg_0x5D::kWorkModelFieldNumber;
const int CanMsg_0x5D::kAutoCMDModelFieldNumber;
const int CanMsg_0x5D::kTargetangleFieldNumber;
const int CanMsg_0x5D::kCurrentangleFieldNumber;
const int CanMsg_0x5D::kWheelpalstanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x5D::CanMsg_0x5D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x5D)
}
CanMsg_0x5D::CanMsg_0x5D(const CanMsg_0x5D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&wheelpalstance_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(wheelpalstance_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x5D)
}

void CanMsg_0x5D::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&wheelpalstance_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(wheelpalstance_));
  _cached_size_ = 0;
}

CanMsg_0x5D::~CanMsg_0x5D() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x5D)
  SharedDtor();
}

void CanMsg_0x5D::SharedDtor() {
}

void CanMsg_0x5D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x5D::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x5D& CanMsg_0x5D::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x5D* CanMsg_0x5D::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x5D* n = new CanMsg_0x5D;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x5D::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x5D)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&wheelpalstance_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(wheelpalstance_));
}

bool CanMsg_0x5D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x5D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 work_model = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &work_model_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 autoCMD_model = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &autocmd_model_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 targetangle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targetangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 currentangle = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currentangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 wheelpalstance = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wheelpalstance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x5D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x5D)
  return false;
#undef DO_
}

void CanMsg_0x5D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x5D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 work_model = 2;
  if (this->work_model() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->work_model(), output);
  }

  // uint32 autoCMD_model = 3;
  if (this->autocmd_model() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->autocmd_model(), output);
  }

  // uint32 targetangle = 4;
  if (this->targetangle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->targetangle(), output);
  }

  // uint32 currentangle = 5;
  if (this->currentangle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->currentangle(), output);
  }

  // uint32 wheelpalstance = 6;
  if (this->wheelpalstance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->wheelpalstance(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x5D)
}

::google::protobuf::uint8* CanMsg_0x5D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x5D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 work_model = 2;
  if (this->work_model() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->work_model(), target);
  }

  // uint32 autoCMD_model = 3;
  if (this->autocmd_model() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->autocmd_model(), target);
  }

  // uint32 targetangle = 4;
  if (this->targetangle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->targetangle(), target);
  }

  // uint32 currentangle = 5;
  if (this->currentangle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->currentangle(), target);
  }

  // uint32 wheelpalstance = 6;
  if (this->wheelpalstance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->wheelpalstance(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x5D)
  return target;
}

size_t CanMsg_0x5D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x5D)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 work_model = 2;
  if (this->work_model() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->work_model());
  }

  // uint32 autoCMD_model = 3;
  if (this->autocmd_model() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->autocmd_model());
  }

  // uint32 targetangle = 4;
  if (this->targetangle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->targetangle());
  }

  // uint32 currentangle = 5;
  if (this->currentangle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->currentangle());
  }

  // uint32 wheelpalstance = 6;
  if (this->wheelpalstance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wheelpalstance());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x5D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x5D)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x5D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x5D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x5D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x5D)
    MergeFrom(*source);
  }
}

void CanMsg_0x5D::MergeFrom(const CanMsg_0x5D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x5D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.work_model() != 0) {
    set_work_model(from.work_model());
  }
  if (from.autocmd_model() != 0) {
    set_autocmd_model(from.autocmd_model());
  }
  if (from.targetangle() != 0) {
    set_targetangle(from.targetangle());
  }
  if (from.currentangle() != 0) {
    set_currentangle(from.currentangle());
  }
  if (from.wheelpalstance() != 0) {
    set_wheelpalstance(from.wheelpalstance());
  }
}

void CanMsg_0x5D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x5D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x5D::CopyFrom(const CanMsg_0x5D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x5D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x5D::IsInitialized() const {
  return true;
}

void CanMsg_0x5D::Swap(CanMsg_0x5D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x5D::InternalSwap(CanMsg_0x5D* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(work_model_, other->work_model_);
  std::swap(autocmd_model_, other->autocmd_model_);
  std::swap(targetangle_, other->targetangle_);
  std::swap(currentangle_, other->currentangle_);
  std::swap(wheelpalstance_, other->wheelpalstance_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x5D::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x5D

// bool isValid = 1;
void CanMsg_0x5D::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x5D::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5D.isValid)
  return isvalid_;
}
void CanMsg_0x5D::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5D.isValid)
}

// uint32 work_model = 2;
void CanMsg_0x5D::clear_work_model() {
  work_model_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x5D::work_model() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5D.work_model)
  return work_model_;
}
void CanMsg_0x5D::set_work_model(::google::protobuf::uint32 value) {
  
  work_model_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5D.work_model)
}

// uint32 autoCMD_model = 3;
void CanMsg_0x5D::clear_autocmd_model() {
  autocmd_model_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x5D::autocmd_model() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5D.autoCMD_model)
  return autocmd_model_;
}
void CanMsg_0x5D::set_autocmd_model(::google::protobuf::uint32 value) {
  
  autocmd_model_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5D.autoCMD_model)
}

// uint32 targetangle = 4;
void CanMsg_0x5D::clear_targetangle() {
  targetangle_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x5D::targetangle() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5D.targetangle)
  return targetangle_;
}
void CanMsg_0x5D::set_targetangle(::google::protobuf::uint32 value) {
  
  targetangle_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5D.targetangle)
}

// uint32 currentangle = 5;
void CanMsg_0x5D::clear_currentangle() {
  currentangle_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x5D::currentangle() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5D.currentangle)
  return currentangle_;
}
void CanMsg_0x5D::set_currentangle(::google::protobuf::uint32 value) {
  
  currentangle_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5D.currentangle)
}

// uint32 wheelpalstance = 6;
void CanMsg_0x5D::clear_wheelpalstance() {
  wheelpalstance_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x5D::wheelpalstance() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5D.wheelpalstance)
  return wheelpalstance_;
}
void CanMsg_0x5D::set_wheelpalstance(::google::protobuf::uint32 value) {
  
  wheelpalstance_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5D.wheelpalstance)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x5C::kIsValidFieldNumber;
const int CanMsg_0x5C::kOutTorqueFieldNumber;
const int CanMsg_0x5C::kTargetTorqueFieldNumber;
const int CanMsg_0x5C::kFaultCode92FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x5C::CanMsg_0x5C()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x5C)
}
CanMsg_0x5C::CanMsg_0x5C(const CanMsg_0x5C& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&faultcode_92_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(faultcode_92_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x5C)
}

void CanMsg_0x5C::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&faultcode_92_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(faultcode_92_));
  _cached_size_ = 0;
}

CanMsg_0x5C::~CanMsg_0x5C() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x5C)
  SharedDtor();
}

void CanMsg_0x5C::SharedDtor() {
}

void CanMsg_0x5C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x5C::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x5C& CanMsg_0x5C::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x5C* CanMsg_0x5C::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x5C* n = new CanMsg_0x5C;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x5C::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x5C)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&faultcode_92_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(faultcode_92_));
}

bool CanMsg_0x5C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x5C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 out_torque = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &out_torque_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_torque = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_torque_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 faultCode_92 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &faultcode_92_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x5C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x5C)
  return false;
#undef DO_
}

void CanMsg_0x5C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x5C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 out_torque = 2;
  if (this->out_torque() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->out_torque(), output);
  }

  // uint32 target_torque = 3;
  if (this->target_torque() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->target_torque(), output);
  }

  // uint32 faultCode_92 = 4;
  if (this->faultcode_92() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->faultcode_92(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x5C)
}

::google::protobuf::uint8* CanMsg_0x5C::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x5C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 out_torque = 2;
  if (this->out_torque() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->out_torque(), target);
  }

  // uint32 target_torque = 3;
  if (this->target_torque() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->target_torque(), target);
  }

  // uint32 faultCode_92 = 4;
  if (this->faultcode_92() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->faultcode_92(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x5C)
  return target;
}

size_t CanMsg_0x5C::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x5C)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 out_torque = 2;
  if (this->out_torque() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->out_torque());
  }

  // uint32 target_torque = 3;
  if (this->target_torque() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_torque());
  }

  // uint32 faultCode_92 = 4;
  if (this->faultcode_92() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->faultcode_92());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x5C::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x5C)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x5C* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x5C>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x5C)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x5C)
    MergeFrom(*source);
  }
}

void CanMsg_0x5C::MergeFrom(const CanMsg_0x5C& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x5C)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.out_torque() != 0) {
    set_out_torque(from.out_torque());
  }
  if (from.target_torque() != 0) {
    set_target_torque(from.target_torque());
  }
  if (from.faultcode_92() != 0) {
    set_faultcode_92(from.faultcode_92());
  }
}

void CanMsg_0x5C::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x5C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x5C::CopyFrom(const CanMsg_0x5C& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x5C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x5C::IsInitialized() const {
  return true;
}

void CanMsg_0x5C::Swap(CanMsg_0x5C* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x5C::InternalSwap(CanMsg_0x5C* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(out_torque_, other->out_torque_);
  std::swap(target_torque_, other->target_torque_);
  std::swap(faultcode_92_, other->faultcode_92_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x5C::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x5C

// bool isValid = 1;
void CanMsg_0x5C::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x5C::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5C.isValid)
  return isvalid_;
}
void CanMsg_0x5C::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5C.isValid)
}

// uint32 out_torque = 2;
void CanMsg_0x5C::clear_out_torque() {
  out_torque_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x5C::out_torque() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5C.out_torque)
  return out_torque_;
}
void CanMsg_0x5C::set_out_torque(::google::protobuf::uint32 value) {
  
  out_torque_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5C.out_torque)
}

// uint32 target_torque = 3;
void CanMsg_0x5C::clear_target_torque() {
  target_torque_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x5C::target_torque() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5C.target_torque)
  return target_torque_;
}
void CanMsg_0x5C::set_target_torque(::google::protobuf::uint32 value) {
  
  target_torque_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5C.target_torque)
}

// uint32 faultCode_92 = 4;
void CanMsg_0x5C::clear_faultcode_92() {
  faultcode_92_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x5C::faultcode_92() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x5C.faultCode_92)
  return faultcode_92_;
}
void CanMsg_0x5C::set_faultcode_92(::google::protobuf::uint32 value) {
  
  faultcode_92_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x5C.faultCode_92)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x511::kIsValidFieldNumber;
const int CanMsg_0x511::kSPRMainVoltageFieldNumber;
const int CanMsg_0x511::kSPRCurrentmotcurrentFieldNumber;
const int CanMsg_0x511::kSPREnableStsFieldNumber;
const int CanMsg_0x511::kSPRWheelStsFieldNumber;
const int CanMsg_0x511::kSPRMotTemperatureFieldNumber;
const int CanMsg_0x511::kSPRMotcurrentspeedFieldNumber;
const int CanMsg_0x511::kSPROvercurrentFieldNumber;
const int CanMsg_0x511::kSPROvervoltage511FieldNumber;
const int CanMsg_0x511::kSPROvertemperatureFieldNumber;
const int CanMsg_0x511::kSPRLochedrotorFieldNumber;
const int CanMsg_0x511::kSPRHallsignalerrorFieldNumber;
const int CanMsg_0x511::kSPRMotfualtItselfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x511::CanMsg_0x511()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x511)
}
CanMsg_0x511::CanMsg_0x511(const CanMsg_0x511& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&spr_motfualt_itself_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(spr_motfualt_itself_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x511)
}

void CanMsg_0x511::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&spr_motfualt_itself_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(spr_motfualt_itself_));
  _cached_size_ = 0;
}

CanMsg_0x511::~CanMsg_0x511() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x511)
  SharedDtor();
}

void CanMsg_0x511::SharedDtor() {
}

void CanMsg_0x511::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x511::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x511& CanMsg_0x511::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x511* CanMsg_0x511::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x511* n = new CanMsg_0x511;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x511::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x511)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&spr_motfualt_itself_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(spr_motfualt_itself_));
}

bool CanMsg_0x511::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x511)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPR_main_voltage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spr_main_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPR_currentmotcurrent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spr_currentmotcurrent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPR_enable_sts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spr_enable_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPR_wheel_sts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spr_wheel_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPR_mot_temperature = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spr_mot_temperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPR_motcurrentspeed = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spr_motcurrentspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPR_overcurrent = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spr_overcurrent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPR_overvoltage511 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spr_overvoltage511_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPR_overtemperature = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spr_overtemperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPR_lochedrotor = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spr_lochedrotor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPR_Hallsignalerror = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spr_hallsignalerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPR_motfualt_itself = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spr_motfualt_itself_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x511)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x511)
  return false;
#undef DO_
}

void CanMsg_0x511::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x511)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 SPR_main_voltage = 2;
  if (this->spr_main_voltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->spr_main_voltage(), output);
  }

  // uint32 SPR_currentmotcurrent = 3;
  if (this->spr_currentmotcurrent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->spr_currentmotcurrent(), output);
  }

  // uint32 SPR_enable_sts = 4;
  if (this->spr_enable_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->spr_enable_sts(), output);
  }

  // uint32 SPR_wheel_sts = 5;
  if (this->spr_wheel_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->spr_wheel_sts(), output);
  }

  // uint32 SPR_mot_temperature = 6;
  if (this->spr_mot_temperature() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->spr_mot_temperature(), output);
  }

  // uint32 SPR_motcurrentspeed = 7;
  if (this->spr_motcurrentspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->spr_motcurrentspeed(), output);
  }

  // uint32 SPR_overcurrent = 8;
  if (this->spr_overcurrent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->spr_overcurrent(), output);
  }

  // uint32 SPR_overvoltage511 = 9;
  if (this->spr_overvoltage511() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->spr_overvoltage511(), output);
  }

  // uint32 SPR_overtemperature = 10;
  if (this->spr_overtemperature() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->spr_overtemperature(), output);
  }

  // uint32 SPR_lochedrotor = 11;
  if (this->spr_lochedrotor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->spr_lochedrotor(), output);
  }

  // uint32 SPR_Hallsignalerror = 12;
  if (this->spr_hallsignalerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->spr_hallsignalerror(), output);
  }

  // uint32 SPR_motfualt_itself = 13;
  if (this->spr_motfualt_itself() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->spr_motfualt_itself(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x511)
}

::google::protobuf::uint8* CanMsg_0x511::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x511)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 SPR_main_voltage = 2;
  if (this->spr_main_voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->spr_main_voltage(), target);
  }

  // uint32 SPR_currentmotcurrent = 3;
  if (this->spr_currentmotcurrent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->spr_currentmotcurrent(), target);
  }

  // uint32 SPR_enable_sts = 4;
  if (this->spr_enable_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->spr_enable_sts(), target);
  }

  // uint32 SPR_wheel_sts = 5;
  if (this->spr_wheel_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->spr_wheel_sts(), target);
  }

  // uint32 SPR_mot_temperature = 6;
  if (this->spr_mot_temperature() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->spr_mot_temperature(), target);
  }

  // uint32 SPR_motcurrentspeed = 7;
  if (this->spr_motcurrentspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->spr_motcurrentspeed(), target);
  }

  // uint32 SPR_overcurrent = 8;
  if (this->spr_overcurrent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->spr_overcurrent(), target);
  }

  // uint32 SPR_overvoltage511 = 9;
  if (this->spr_overvoltage511() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->spr_overvoltage511(), target);
  }

  // uint32 SPR_overtemperature = 10;
  if (this->spr_overtemperature() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->spr_overtemperature(), target);
  }

  // uint32 SPR_lochedrotor = 11;
  if (this->spr_lochedrotor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->spr_lochedrotor(), target);
  }

  // uint32 SPR_Hallsignalerror = 12;
  if (this->spr_hallsignalerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->spr_hallsignalerror(), target);
  }

  // uint32 SPR_motfualt_itself = 13;
  if (this->spr_motfualt_itself() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->spr_motfualt_itself(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x511)
  return target;
}

size_t CanMsg_0x511::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x511)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 SPR_main_voltage = 2;
  if (this->spr_main_voltage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spr_main_voltage());
  }

  // uint32 SPR_currentmotcurrent = 3;
  if (this->spr_currentmotcurrent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spr_currentmotcurrent());
  }

  // uint32 SPR_enable_sts = 4;
  if (this->spr_enable_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spr_enable_sts());
  }

  // uint32 SPR_wheel_sts = 5;
  if (this->spr_wheel_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spr_wheel_sts());
  }

  // uint32 SPR_mot_temperature = 6;
  if (this->spr_mot_temperature() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spr_mot_temperature());
  }

  // uint32 SPR_motcurrentspeed = 7;
  if (this->spr_motcurrentspeed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spr_motcurrentspeed());
  }

  // uint32 SPR_overcurrent = 8;
  if (this->spr_overcurrent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spr_overcurrent());
  }

  // uint32 SPR_overvoltage511 = 9;
  if (this->spr_overvoltage511() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spr_overvoltage511());
  }

  // uint32 SPR_overtemperature = 10;
  if (this->spr_overtemperature() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spr_overtemperature());
  }

  // uint32 SPR_lochedrotor = 11;
  if (this->spr_lochedrotor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spr_lochedrotor());
  }

  // uint32 SPR_Hallsignalerror = 12;
  if (this->spr_hallsignalerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spr_hallsignalerror());
  }

  // uint32 SPR_motfualt_itself = 13;
  if (this->spr_motfualt_itself() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spr_motfualt_itself());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x511::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x511)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x511* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x511>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x511)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x511)
    MergeFrom(*source);
  }
}

void CanMsg_0x511::MergeFrom(const CanMsg_0x511& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x511)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.spr_main_voltage() != 0) {
    set_spr_main_voltage(from.spr_main_voltage());
  }
  if (from.spr_currentmotcurrent() != 0) {
    set_spr_currentmotcurrent(from.spr_currentmotcurrent());
  }
  if (from.spr_enable_sts() != 0) {
    set_spr_enable_sts(from.spr_enable_sts());
  }
  if (from.spr_wheel_sts() != 0) {
    set_spr_wheel_sts(from.spr_wheel_sts());
  }
  if (from.spr_mot_temperature() != 0) {
    set_spr_mot_temperature(from.spr_mot_temperature());
  }
  if (from.spr_motcurrentspeed() != 0) {
    set_spr_motcurrentspeed(from.spr_motcurrentspeed());
  }
  if (from.spr_overcurrent() != 0) {
    set_spr_overcurrent(from.spr_overcurrent());
  }
  if (from.spr_overvoltage511() != 0) {
    set_spr_overvoltage511(from.spr_overvoltage511());
  }
  if (from.spr_overtemperature() != 0) {
    set_spr_overtemperature(from.spr_overtemperature());
  }
  if (from.spr_lochedrotor() != 0) {
    set_spr_lochedrotor(from.spr_lochedrotor());
  }
  if (from.spr_hallsignalerror() != 0) {
    set_spr_hallsignalerror(from.spr_hallsignalerror());
  }
  if (from.spr_motfualt_itself() != 0) {
    set_spr_motfualt_itself(from.spr_motfualt_itself());
  }
}

void CanMsg_0x511::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x511)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x511::CopyFrom(const CanMsg_0x511& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x511)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x511::IsInitialized() const {
  return true;
}

void CanMsg_0x511::Swap(CanMsg_0x511* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x511::InternalSwap(CanMsg_0x511* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(spr_main_voltage_, other->spr_main_voltage_);
  std::swap(spr_currentmotcurrent_, other->spr_currentmotcurrent_);
  std::swap(spr_enable_sts_, other->spr_enable_sts_);
  std::swap(spr_wheel_sts_, other->spr_wheel_sts_);
  std::swap(spr_mot_temperature_, other->spr_mot_temperature_);
  std::swap(spr_motcurrentspeed_, other->spr_motcurrentspeed_);
  std::swap(spr_overcurrent_, other->spr_overcurrent_);
  std::swap(spr_overvoltage511_, other->spr_overvoltage511_);
  std::swap(spr_overtemperature_, other->spr_overtemperature_);
  std::swap(spr_lochedrotor_, other->spr_lochedrotor_);
  std::swap(spr_hallsignalerror_, other->spr_hallsignalerror_);
  std::swap(spr_motfualt_itself_, other->spr_motfualt_itself_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x511::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x511

// bool isValid = 1;
void CanMsg_0x511::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x511::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x511.isValid)
  return isvalid_;
}
void CanMsg_0x511::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x511.isValid)
}

// uint32 SPR_main_voltage = 2;
void CanMsg_0x511::clear_spr_main_voltage() {
  spr_main_voltage_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x511::spr_main_voltage() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x511.SPR_main_voltage)
  return spr_main_voltage_;
}
void CanMsg_0x511::set_spr_main_voltage(::google::protobuf::uint32 value) {
  
  spr_main_voltage_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x511.SPR_main_voltage)
}

// uint32 SPR_currentmotcurrent = 3;
void CanMsg_0x511::clear_spr_currentmotcurrent() {
  spr_currentmotcurrent_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x511::spr_currentmotcurrent() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x511.SPR_currentmotcurrent)
  return spr_currentmotcurrent_;
}
void CanMsg_0x511::set_spr_currentmotcurrent(::google::protobuf::uint32 value) {
  
  spr_currentmotcurrent_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x511.SPR_currentmotcurrent)
}

// uint32 SPR_enable_sts = 4;
void CanMsg_0x511::clear_spr_enable_sts() {
  spr_enable_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x511::spr_enable_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x511.SPR_enable_sts)
  return spr_enable_sts_;
}
void CanMsg_0x511::set_spr_enable_sts(::google::protobuf::uint32 value) {
  
  spr_enable_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x511.SPR_enable_sts)
}

// uint32 SPR_wheel_sts = 5;
void CanMsg_0x511::clear_spr_wheel_sts() {
  spr_wheel_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x511::spr_wheel_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x511.SPR_wheel_sts)
  return spr_wheel_sts_;
}
void CanMsg_0x511::set_spr_wheel_sts(::google::protobuf::uint32 value) {
  
  spr_wheel_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x511.SPR_wheel_sts)
}

// uint32 SPR_mot_temperature = 6;
void CanMsg_0x511::clear_spr_mot_temperature() {
  spr_mot_temperature_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x511::spr_mot_temperature() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x511.SPR_mot_temperature)
  return spr_mot_temperature_;
}
void CanMsg_0x511::set_spr_mot_temperature(::google::protobuf::uint32 value) {
  
  spr_mot_temperature_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x511.SPR_mot_temperature)
}

// uint32 SPR_motcurrentspeed = 7;
void CanMsg_0x511::clear_spr_motcurrentspeed() {
  spr_motcurrentspeed_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x511::spr_motcurrentspeed() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x511.SPR_motcurrentspeed)
  return spr_motcurrentspeed_;
}
void CanMsg_0x511::set_spr_motcurrentspeed(::google::protobuf::uint32 value) {
  
  spr_motcurrentspeed_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x511.SPR_motcurrentspeed)
}

// uint32 SPR_overcurrent = 8;
void CanMsg_0x511::clear_spr_overcurrent() {
  spr_overcurrent_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x511::spr_overcurrent() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x511.SPR_overcurrent)
  return spr_overcurrent_;
}
void CanMsg_0x511::set_spr_overcurrent(::google::protobuf::uint32 value) {
  
  spr_overcurrent_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x511.SPR_overcurrent)
}

// uint32 SPR_overvoltage511 = 9;
void CanMsg_0x511::clear_spr_overvoltage511() {
  spr_overvoltage511_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x511::spr_overvoltage511() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x511.SPR_overvoltage511)
  return spr_overvoltage511_;
}
void CanMsg_0x511::set_spr_overvoltage511(::google::protobuf::uint32 value) {
  
  spr_overvoltage511_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x511.SPR_overvoltage511)
}

// uint32 SPR_overtemperature = 10;
void CanMsg_0x511::clear_spr_overtemperature() {
  spr_overtemperature_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x511::spr_overtemperature() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x511.SPR_overtemperature)
  return spr_overtemperature_;
}
void CanMsg_0x511::set_spr_overtemperature(::google::protobuf::uint32 value) {
  
  spr_overtemperature_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x511.SPR_overtemperature)
}

// uint32 SPR_lochedrotor = 11;
void CanMsg_0x511::clear_spr_lochedrotor() {
  spr_lochedrotor_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x511::spr_lochedrotor() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x511.SPR_lochedrotor)
  return spr_lochedrotor_;
}
void CanMsg_0x511::set_spr_lochedrotor(::google::protobuf::uint32 value) {
  
  spr_lochedrotor_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x511.SPR_lochedrotor)
}

// uint32 SPR_Hallsignalerror = 12;
void CanMsg_0x511::clear_spr_hallsignalerror() {
  spr_hallsignalerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x511::spr_hallsignalerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x511.SPR_Hallsignalerror)
  return spr_hallsignalerror_;
}
void CanMsg_0x511::set_spr_hallsignalerror(::google::protobuf::uint32 value) {
  
  spr_hallsignalerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x511.SPR_Hallsignalerror)
}

// uint32 SPR_motfualt_itself = 13;
void CanMsg_0x511::clear_spr_motfualt_itself() {
  spr_motfualt_itself_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x511::spr_motfualt_itself() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x511.SPR_motfualt_itself)
  return spr_motfualt_itself_;
}
void CanMsg_0x511::set_spr_motfualt_itself(::google::protobuf::uint32 value) {
  
  spr_motfualt_itself_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x511.SPR_motfualt_itself)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x512::kIsValidFieldNumber;
const int CanMsg_0x512::kSPLMainVoltageFieldNumber;
const int CanMsg_0x512::kSPLCurrentmotcurrentFieldNumber;
const int CanMsg_0x512::kSPLEnableStsFieldNumber;
const int CanMsg_0x512::kSPLWheelStsFieldNumber;
const int CanMsg_0x512::kSPLMotTemperatureFieldNumber;
const int CanMsg_0x512::kSPLMotcurrentspeedFieldNumber;
const int CanMsg_0x512::kSPLOvercurrent511FieldNumber;
const int CanMsg_0x512::kSPLOvervoltage511FieldNumber;
const int CanMsg_0x512::kSPLOvertemperatureFieldNumber;
const int CanMsg_0x512::kSPLLochedrotorFieldNumber;
const int CanMsg_0x512::kSPLHallsignalerrorFieldNumber;
const int CanMsg_0x512::kSPLMotfualtItselfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x512::CanMsg_0x512()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x512)
}
CanMsg_0x512::CanMsg_0x512(const CanMsg_0x512& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&spl_motfualt_itself_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(spl_motfualt_itself_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x512)
}

void CanMsg_0x512::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&spl_motfualt_itself_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(spl_motfualt_itself_));
  _cached_size_ = 0;
}

CanMsg_0x512::~CanMsg_0x512() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x512)
  SharedDtor();
}

void CanMsg_0x512::SharedDtor() {
}

void CanMsg_0x512::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x512::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x512& CanMsg_0x512::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x512* CanMsg_0x512::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x512* n = new CanMsg_0x512;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x512::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x512)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&spl_motfualt_itself_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(spl_motfualt_itself_));
}

bool CanMsg_0x512::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x512)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPL_main_voltage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spl_main_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPL_currentmotcurrent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spl_currentmotcurrent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPL_enable_sts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spl_enable_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPL_wheel_sts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spl_wheel_sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPL_mot_temperature = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spl_mot_temperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPL_motcurrentspeed = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spl_motcurrentspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPL_overcurrent511 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spl_overcurrent511_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPL_overvoltage511 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spl_overvoltage511_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPL_overtemperature = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spl_overtemperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPL_lochedrotor = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spl_lochedrotor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPL_Hallsignalerror = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spl_hallsignalerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SPL_motfualt_itself = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spl_motfualt_itself_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x512)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x512)
  return false;
#undef DO_
}

void CanMsg_0x512::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x512)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 SPL_main_voltage = 2;
  if (this->spl_main_voltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->spl_main_voltage(), output);
  }

  // uint32 SPL_currentmotcurrent = 3;
  if (this->spl_currentmotcurrent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->spl_currentmotcurrent(), output);
  }

  // uint32 SPL_enable_sts = 4;
  if (this->spl_enable_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->spl_enable_sts(), output);
  }

  // uint32 SPL_wheel_sts = 5;
  if (this->spl_wheel_sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->spl_wheel_sts(), output);
  }

  // uint32 SPL_mot_temperature = 6;
  if (this->spl_mot_temperature() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->spl_mot_temperature(), output);
  }

  // uint32 SPL_motcurrentspeed = 7;
  if (this->spl_motcurrentspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->spl_motcurrentspeed(), output);
  }

  // uint32 SPL_overcurrent511 = 8;
  if (this->spl_overcurrent511() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->spl_overcurrent511(), output);
  }

  // uint32 SPL_overvoltage511 = 9;
  if (this->spl_overvoltage511() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->spl_overvoltage511(), output);
  }

  // uint32 SPL_overtemperature = 10;
  if (this->spl_overtemperature() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->spl_overtemperature(), output);
  }

  // uint32 SPL_lochedrotor = 11;
  if (this->spl_lochedrotor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->spl_lochedrotor(), output);
  }

  // uint32 SPL_Hallsignalerror = 12;
  if (this->spl_hallsignalerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->spl_hallsignalerror(), output);
  }

  // uint32 SPL_motfualt_itself = 13;
  if (this->spl_motfualt_itself() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->spl_motfualt_itself(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x512)
}

::google::protobuf::uint8* CanMsg_0x512::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x512)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 SPL_main_voltage = 2;
  if (this->spl_main_voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->spl_main_voltage(), target);
  }

  // uint32 SPL_currentmotcurrent = 3;
  if (this->spl_currentmotcurrent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->spl_currentmotcurrent(), target);
  }

  // uint32 SPL_enable_sts = 4;
  if (this->spl_enable_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->spl_enable_sts(), target);
  }

  // uint32 SPL_wheel_sts = 5;
  if (this->spl_wheel_sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->spl_wheel_sts(), target);
  }

  // uint32 SPL_mot_temperature = 6;
  if (this->spl_mot_temperature() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->spl_mot_temperature(), target);
  }

  // uint32 SPL_motcurrentspeed = 7;
  if (this->spl_motcurrentspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->spl_motcurrentspeed(), target);
  }

  // uint32 SPL_overcurrent511 = 8;
  if (this->spl_overcurrent511() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->spl_overcurrent511(), target);
  }

  // uint32 SPL_overvoltage511 = 9;
  if (this->spl_overvoltage511() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->spl_overvoltage511(), target);
  }

  // uint32 SPL_overtemperature = 10;
  if (this->spl_overtemperature() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->spl_overtemperature(), target);
  }

  // uint32 SPL_lochedrotor = 11;
  if (this->spl_lochedrotor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->spl_lochedrotor(), target);
  }

  // uint32 SPL_Hallsignalerror = 12;
  if (this->spl_hallsignalerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->spl_hallsignalerror(), target);
  }

  // uint32 SPL_motfualt_itself = 13;
  if (this->spl_motfualt_itself() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->spl_motfualt_itself(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x512)
  return target;
}

size_t CanMsg_0x512::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x512)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 SPL_main_voltage = 2;
  if (this->spl_main_voltage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spl_main_voltage());
  }

  // uint32 SPL_currentmotcurrent = 3;
  if (this->spl_currentmotcurrent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spl_currentmotcurrent());
  }

  // uint32 SPL_enable_sts = 4;
  if (this->spl_enable_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spl_enable_sts());
  }

  // uint32 SPL_wheel_sts = 5;
  if (this->spl_wheel_sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spl_wheel_sts());
  }

  // uint32 SPL_mot_temperature = 6;
  if (this->spl_mot_temperature() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spl_mot_temperature());
  }

  // uint32 SPL_motcurrentspeed = 7;
  if (this->spl_motcurrentspeed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spl_motcurrentspeed());
  }

  // uint32 SPL_overcurrent511 = 8;
  if (this->spl_overcurrent511() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spl_overcurrent511());
  }

  // uint32 SPL_overvoltage511 = 9;
  if (this->spl_overvoltage511() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spl_overvoltage511());
  }

  // uint32 SPL_overtemperature = 10;
  if (this->spl_overtemperature() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spl_overtemperature());
  }

  // uint32 SPL_lochedrotor = 11;
  if (this->spl_lochedrotor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spl_lochedrotor());
  }

  // uint32 SPL_Hallsignalerror = 12;
  if (this->spl_hallsignalerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spl_hallsignalerror());
  }

  // uint32 SPL_motfualt_itself = 13;
  if (this->spl_motfualt_itself() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spl_motfualt_itself());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x512::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x512)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x512* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x512>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x512)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x512)
    MergeFrom(*source);
  }
}

void CanMsg_0x512::MergeFrom(const CanMsg_0x512& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x512)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.spl_main_voltage() != 0) {
    set_spl_main_voltage(from.spl_main_voltage());
  }
  if (from.spl_currentmotcurrent() != 0) {
    set_spl_currentmotcurrent(from.spl_currentmotcurrent());
  }
  if (from.spl_enable_sts() != 0) {
    set_spl_enable_sts(from.spl_enable_sts());
  }
  if (from.spl_wheel_sts() != 0) {
    set_spl_wheel_sts(from.spl_wheel_sts());
  }
  if (from.spl_mot_temperature() != 0) {
    set_spl_mot_temperature(from.spl_mot_temperature());
  }
  if (from.spl_motcurrentspeed() != 0) {
    set_spl_motcurrentspeed(from.spl_motcurrentspeed());
  }
  if (from.spl_overcurrent511() != 0) {
    set_spl_overcurrent511(from.spl_overcurrent511());
  }
  if (from.spl_overvoltage511() != 0) {
    set_spl_overvoltage511(from.spl_overvoltage511());
  }
  if (from.spl_overtemperature() != 0) {
    set_spl_overtemperature(from.spl_overtemperature());
  }
  if (from.spl_lochedrotor() != 0) {
    set_spl_lochedrotor(from.spl_lochedrotor());
  }
  if (from.spl_hallsignalerror() != 0) {
    set_spl_hallsignalerror(from.spl_hallsignalerror());
  }
  if (from.spl_motfualt_itself() != 0) {
    set_spl_motfualt_itself(from.spl_motfualt_itself());
  }
}

void CanMsg_0x512::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x512)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x512::CopyFrom(const CanMsg_0x512& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x512)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x512::IsInitialized() const {
  return true;
}

void CanMsg_0x512::Swap(CanMsg_0x512* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x512::InternalSwap(CanMsg_0x512* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(spl_main_voltage_, other->spl_main_voltage_);
  std::swap(spl_currentmotcurrent_, other->spl_currentmotcurrent_);
  std::swap(spl_enable_sts_, other->spl_enable_sts_);
  std::swap(spl_wheel_sts_, other->spl_wheel_sts_);
  std::swap(spl_mot_temperature_, other->spl_mot_temperature_);
  std::swap(spl_motcurrentspeed_, other->spl_motcurrentspeed_);
  std::swap(spl_overcurrent511_, other->spl_overcurrent511_);
  std::swap(spl_overvoltage511_, other->spl_overvoltage511_);
  std::swap(spl_overtemperature_, other->spl_overtemperature_);
  std::swap(spl_lochedrotor_, other->spl_lochedrotor_);
  std::swap(spl_hallsignalerror_, other->spl_hallsignalerror_);
  std::swap(spl_motfualt_itself_, other->spl_motfualt_itself_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x512::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x512

// bool isValid = 1;
void CanMsg_0x512::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x512::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x512.isValid)
  return isvalid_;
}
void CanMsg_0x512::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x512.isValid)
}

// uint32 SPL_main_voltage = 2;
void CanMsg_0x512::clear_spl_main_voltage() {
  spl_main_voltage_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x512::spl_main_voltage() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x512.SPL_main_voltage)
  return spl_main_voltage_;
}
void CanMsg_0x512::set_spl_main_voltage(::google::protobuf::uint32 value) {
  
  spl_main_voltage_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x512.SPL_main_voltage)
}

// uint32 SPL_currentmotcurrent = 3;
void CanMsg_0x512::clear_spl_currentmotcurrent() {
  spl_currentmotcurrent_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x512::spl_currentmotcurrent() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x512.SPL_currentmotcurrent)
  return spl_currentmotcurrent_;
}
void CanMsg_0x512::set_spl_currentmotcurrent(::google::protobuf::uint32 value) {
  
  spl_currentmotcurrent_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x512.SPL_currentmotcurrent)
}

// uint32 SPL_enable_sts = 4;
void CanMsg_0x512::clear_spl_enable_sts() {
  spl_enable_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x512::spl_enable_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x512.SPL_enable_sts)
  return spl_enable_sts_;
}
void CanMsg_0x512::set_spl_enable_sts(::google::protobuf::uint32 value) {
  
  spl_enable_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x512.SPL_enable_sts)
}

// uint32 SPL_wheel_sts = 5;
void CanMsg_0x512::clear_spl_wheel_sts() {
  spl_wheel_sts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x512::spl_wheel_sts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x512.SPL_wheel_sts)
  return spl_wheel_sts_;
}
void CanMsg_0x512::set_spl_wheel_sts(::google::protobuf::uint32 value) {
  
  spl_wheel_sts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x512.SPL_wheel_sts)
}

// uint32 SPL_mot_temperature = 6;
void CanMsg_0x512::clear_spl_mot_temperature() {
  spl_mot_temperature_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x512::spl_mot_temperature() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x512.SPL_mot_temperature)
  return spl_mot_temperature_;
}
void CanMsg_0x512::set_spl_mot_temperature(::google::protobuf::uint32 value) {
  
  spl_mot_temperature_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x512.SPL_mot_temperature)
}

// uint32 SPL_motcurrentspeed = 7;
void CanMsg_0x512::clear_spl_motcurrentspeed() {
  spl_motcurrentspeed_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x512::spl_motcurrentspeed() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x512.SPL_motcurrentspeed)
  return spl_motcurrentspeed_;
}
void CanMsg_0x512::set_spl_motcurrentspeed(::google::protobuf::uint32 value) {
  
  spl_motcurrentspeed_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x512.SPL_motcurrentspeed)
}

// uint32 SPL_overcurrent511 = 8;
void CanMsg_0x512::clear_spl_overcurrent511() {
  spl_overcurrent511_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x512::spl_overcurrent511() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x512.SPL_overcurrent511)
  return spl_overcurrent511_;
}
void CanMsg_0x512::set_spl_overcurrent511(::google::protobuf::uint32 value) {
  
  spl_overcurrent511_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x512.SPL_overcurrent511)
}

// uint32 SPL_overvoltage511 = 9;
void CanMsg_0x512::clear_spl_overvoltage511() {
  spl_overvoltage511_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x512::spl_overvoltage511() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x512.SPL_overvoltage511)
  return spl_overvoltage511_;
}
void CanMsg_0x512::set_spl_overvoltage511(::google::protobuf::uint32 value) {
  
  spl_overvoltage511_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x512.SPL_overvoltage511)
}

// uint32 SPL_overtemperature = 10;
void CanMsg_0x512::clear_spl_overtemperature() {
  spl_overtemperature_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x512::spl_overtemperature() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x512.SPL_overtemperature)
  return spl_overtemperature_;
}
void CanMsg_0x512::set_spl_overtemperature(::google::protobuf::uint32 value) {
  
  spl_overtemperature_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x512.SPL_overtemperature)
}

// uint32 SPL_lochedrotor = 11;
void CanMsg_0x512::clear_spl_lochedrotor() {
  spl_lochedrotor_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x512::spl_lochedrotor() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x512.SPL_lochedrotor)
  return spl_lochedrotor_;
}
void CanMsg_0x512::set_spl_lochedrotor(::google::protobuf::uint32 value) {
  
  spl_lochedrotor_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x512.SPL_lochedrotor)
}

// uint32 SPL_Hallsignalerror = 12;
void CanMsg_0x512::clear_spl_hallsignalerror() {
  spl_hallsignalerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x512::spl_hallsignalerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x512.SPL_Hallsignalerror)
  return spl_hallsignalerror_;
}
void CanMsg_0x512::set_spl_hallsignalerror(::google::protobuf::uint32 value) {
  
  spl_hallsignalerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x512.SPL_Hallsignalerror)
}

// uint32 SPL_motfualt_itself = 13;
void CanMsg_0x512::clear_spl_motfualt_itself() {
  spl_motfualt_itself_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x512::spl_motfualt_itself() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x512.SPL_motfualt_itself)
  return spl_motfualt_itself_;
}
void CanMsg_0x512::set_spl_motfualt_itself(::google::protobuf::uint32 value) {
  
  spl_motfualt_itself_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x512.SPL_motfualt_itself)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x08FF32F0::kIsValidFieldNumber;
const int CanMsg_0x08FF32F0::kMotSpeedFieldNumber;
const int CanMsg_0x08FF32F0::kMotTorqueFieldNumber;
const int CanMsg_0x08FF32F0::kRotaryWarningFieldNumber;
const int CanMsg_0x08FF32F0::kOverCurrentFaultFieldNumber;
const int CanMsg_0x08FF32F0::kPowerLimtWarningFieldNumber;
const int CanMsg_0x08FF32F0::kMCUTempWarningFieldNumber;
const int CanMsg_0x08FF32F0::kMotTempWarningFieldNumber;
const int CanMsg_0x08FF32F0::kIntePassFieldNumber;
const int CanMsg_0x08FF32F0::kBusbarOverVoltFaultFieldNumber;
const int CanMsg_0x08FF32F0::kBusbarLessVoltFaultFieldNumber;
const int CanMsg_0x08FF32F0::kGearStsFieldNumber;
const int CanMsg_0x08FF32F0::kBackBrakeFieldNumber;
const int CanMsg_0x08FF32F0::kAccPdlStsFieldNumber;
const int CanMsg_0x08FF32F0::kSpeedControlValidFieldNumber;
const int CanMsg_0x08FF32F0::kGeneralFaultWarningFieldNumber;
const int CanMsg_0x08FF32F0::kBusbardischargFieldNumber;
const int CanMsg_0x08FF32F0::kBrakeActiveFieldNumber;
const int CanMsg_0x08FF32F0::kMotSpeedValidFieldNumber;
const int CanMsg_0x08FF32F0::kGearWarningFieldNumber;
const int CanMsg_0x08FF32F0::kHoldReqFieldNumber;
const int CanMsg_0x08FF32F0::kApdlPercentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x08FF32F0::CanMsg_0x08FF32F0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x08FF32F0)
}
CanMsg_0x08FF32F0::CanMsg_0x08FF32F0(const CanMsg_0x08FF32F0& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&apdlpercent_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(apdlpercent_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x08FF32F0)
}

void CanMsg_0x08FF32F0::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&apdlpercent_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(apdlpercent_));
  _cached_size_ = 0;
}

CanMsg_0x08FF32F0::~CanMsg_0x08FF32F0() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x08FF32F0)
  SharedDtor();
}

void CanMsg_0x08FF32F0::SharedDtor() {
}

void CanMsg_0x08FF32F0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x08FF32F0::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x08FF32F0& CanMsg_0x08FF32F0::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x08FF32F0* CanMsg_0x08FF32F0::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x08FF32F0* n = new CanMsg_0x08FF32F0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x08FF32F0::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x08FF32F0)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&apdlpercent_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(apdlpercent_));
}

bool CanMsg_0x08FF32F0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x08FF32F0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MotSpeed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &motspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MotTorque = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mottorque_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RotaryWarning = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rotarywarning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 OverCurrentFault = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &overcurrentfault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PowerLimtWarning = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &powerlimtwarning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MCUTempWarning = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mcutempwarning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MotTempWarning = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mottempwarning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 IntePass = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &intepass_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BusbarOverVoltFault = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &busbarovervoltfault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BusbarLessVoltFault = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &busbarlessvoltfault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 GearSts = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gearsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BackBrake = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &backbrake_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 AccPdlSts = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accpdlsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SpeedControlValid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &speedcontrolvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 GeneralFaultWarning = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &generalfaultwarning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Busbardischarg = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &busbardischarg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BrakeActive = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &brakeactive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MotSpeedValid = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &motspeedvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 GearWarning = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gearwarning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 HoldReq = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &holdreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ApdlPercent = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &apdlpercent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x08FF32F0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x08FF32F0)
  return false;
#undef DO_
}

void CanMsg_0x08FF32F0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x08FF32F0)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 MotSpeed = 2;
  if (this->motspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->motspeed(), output);
  }

  // uint32 MotTorque = 3;
  if (this->mottorque() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mottorque(), output);
  }

  // uint32 RotaryWarning = 4;
  if (this->rotarywarning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->rotarywarning(), output);
  }

  // uint32 OverCurrentFault = 5;
  if (this->overcurrentfault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->overcurrentfault(), output);
  }

  // uint32 PowerLimtWarning = 6;
  if (this->powerlimtwarning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->powerlimtwarning(), output);
  }

  // uint32 MCUTempWarning = 7;
  if (this->mcutempwarning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->mcutempwarning(), output);
  }

  // uint32 MotTempWarning = 8;
  if (this->mottempwarning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->mottempwarning(), output);
  }

  // uint32 IntePass = 9;
  if (this->intepass() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->intepass(), output);
  }

  // uint32 BusbarOverVoltFault = 10;
  if (this->busbarovervoltfault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->busbarovervoltfault(), output);
  }

  // uint32 BusbarLessVoltFault = 11;
  if (this->busbarlessvoltfault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->busbarlessvoltfault(), output);
  }

  // uint32 GearSts = 12;
  if (this->gearsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->gearsts(), output);
  }

  // uint32 BackBrake = 13;
  if (this->backbrake() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->backbrake(), output);
  }

  // uint32 AccPdlSts = 14;
  if (this->accpdlsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->accpdlsts(), output);
  }

  // uint32 SpeedControlValid = 15;
  if (this->speedcontrolvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->speedcontrolvalid(), output);
  }

  // uint32 GeneralFaultWarning = 16;
  if (this->generalfaultwarning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->generalfaultwarning(), output);
  }

  // uint32 Busbardischarg = 17;
  if (this->busbardischarg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->busbardischarg(), output);
  }

  // uint32 BrakeActive = 18;
  if (this->brakeactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->brakeactive(), output);
  }

  // uint32 MotSpeedValid = 19;
  if (this->motspeedvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->motspeedvalid(), output);
  }

  // uint32 GearWarning = 20;
  if (this->gearwarning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->gearwarning(), output);
  }

  // uint32 HoldReq = 21;
  if (this->holdreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->holdreq(), output);
  }

  // uint32 ApdlPercent = 22;
  if (this->apdlpercent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->apdlpercent(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x08FF32F0)
}

::google::protobuf::uint8* CanMsg_0x08FF32F0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x08FF32F0)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 MotSpeed = 2;
  if (this->motspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->motspeed(), target);
  }

  // uint32 MotTorque = 3;
  if (this->mottorque() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mottorque(), target);
  }

  // uint32 RotaryWarning = 4;
  if (this->rotarywarning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->rotarywarning(), target);
  }

  // uint32 OverCurrentFault = 5;
  if (this->overcurrentfault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->overcurrentfault(), target);
  }

  // uint32 PowerLimtWarning = 6;
  if (this->powerlimtwarning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->powerlimtwarning(), target);
  }

  // uint32 MCUTempWarning = 7;
  if (this->mcutempwarning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->mcutempwarning(), target);
  }

  // uint32 MotTempWarning = 8;
  if (this->mottempwarning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->mottempwarning(), target);
  }

  // uint32 IntePass = 9;
  if (this->intepass() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->intepass(), target);
  }

  // uint32 BusbarOverVoltFault = 10;
  if (this->busbarovervoltfault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->busbarovervoltfault(), target);
  }

  // uint32 BusbarLessVoltFault = 11;
  if (this->busbarlessvoltfault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->busbarlessvoltfault(), target);
  }

  // uint32 GearSts = 12;
  if (this->gearsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->gearsts(), target);
  }

  // uint32 BackBrake = 13;
  if (this->backbrake() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->backbrake(), target);
  }

  // uint32 AccPdlSts = 14;
  if (this->accpdlsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->accpdlsts(), target);
  }

  // uint32 SpeedControlValid = 15;
  if (this->speedcontrolvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->speedcontrolvalid(), target);
  }

  // uint32 GeneralFaultWarning = 16;
  if (this->generalfaultwarning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->generalfaultwarning(), target);
  }

  // uint32 Busbardischarg = 17;
  if (this->busbardischarg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->busbardischarg(), target);
  }

  // uint32 BrakeActive = 18;
  if (this->brakeactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->brakeactive(), target);
  }

  // uint32 MotSpeedValid = 19;
  if (this->motspeedvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->motspeedvalid(), target);
  }

  // uint32 GearWarning = 20;
  if (this->gearwarning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->gearwarning(), target);
  }

  // uint32 HoldReq = 21;
  if (this->holdreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->holdreq(), target);
  }

  // uint32 ApdlPercent = 22;
  if (this->apdlpercent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->apdlpercent(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x08FF32F0)
  return target;
}

size_t CanMsg_0x08FF32F0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x08FF32F0)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 MotSpeed = 2;
  if (this->motspeed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->motspeed());
  }

  // uint32 MotTorque = 3;
  if (this->mottorque() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mottorque());
  }

  // uint32 RotaryWarning = 4;
  if (this->rotarywarning() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rotarywarning());
  }

  // uint32 OverCurrentFault = 5;
  if (this->overcurrentfault() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->overcurrentfault());
  }

  // uint32 PowerLimtWarning = 6;
  if (this->powerlimtwarning() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->powerlimtwarning());
  }

  // uint32 MCUTempWarning = 7;
  if (this->mcutempwarning() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mcutempwarning());
  }

  // uint32 MotTempWarning = 8;
  if (this->mottempwarning() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mottempwarning());
  }

  // uint32 IntePass = 9;
  if (this->intepass() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->intepass());
  }

  // uint32 BusbarOverVoltFault = 10;
  if (this->busbarovervoltfault() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->busbarovervoltfault());
  }

  // uint32 BusbarLessVoltFault = 11;
  if (this->busbarlessvoltfault() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->busbarlessvoltfault());
  }

  // uint32 GearSts = 12;
  if (this->gearsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gearsts());
  }

  // uint32 BackBrake = 13;
  if (this->backbrake() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->backbrake());
  }

  // uint32 AccPdlSts = 14;
  if (this->accpdlsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->accpdlsts());
  }

  // uint32 SpeedControlValid = 15;
  if (this->speedcontrolvalid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->speedcontrolvalid());
  }

  // uint32 GeneralFaultWarning = 16;
  if (this->generalfaultwarning() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->generalfaultwarning());
  }

  // uint32 Busbardischarg = 17;
  if (this->busbardischarg() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->busbardischarg());
  }

  // uint32 BrakeActive = 18;
  if (this->brakeactive() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->brakeactive());
  }

  // uint32 MotSpeedValid = 19;
  if (this->motspeedvalid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->motspeedvalid());
  }

  // uint32 GearWarning = 20;
  if (this->gearwarning() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gearwarning());
  }

  // uint32 HoldReq = 21;
  if (this->holdreq() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->holdreq());
  }

  // uint32 ApdlPercent = 22;
  if (this->apdlpercent() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->apdlpercent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x08FF32F0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x08FF32F0)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x08FF32F0* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x08FF32F0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x08FF32F0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x08FF32F0)
    MergeFrom(*source);
  }
}

void CanMsg_0x08FF32F0::MergeFrom(const CanMsg_0x08FF32F0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x08FF32F0)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.motspeed() != 0) {
    set_motspeed(from.motspeed());
  }
  if (from.mottorque() != 0) {
    set_mottorque(from.mottorque());
  }
  if (from.rotarywarning() != 0) {
    set_rotarywarning(from.rotarywarning());
  }
  if (from.overcurrentfault() != 0) {
    set_overcurrentfault(from.overcurrentfault());
  }
  if (from.powerlimtwarning() != 0) {
    set_powerlimtwarning(from.powerlimtwarning());
  }
  if (from.mcutempwarning() != 0) {
    set_mcutempwarning(from.mcutempwarning());
  }
  if (from.mottempwarning() != 0) {
    set_mottempwarning(from.mottempwarning());
  }
  if (from.intepass() != 0) {
    set_intepass(from.intepass());
  }
  if (from.busbarovervoltfault() != 0) {
    set_busbarovervoltfault(from.busbarovervoltfault());
  }
  if (from.busbarlessvoltfault() != 0) {
    set_busbarlessvoltfault(from.busbarlessvoltfault());
  }
  if (from.gearsts() != 0) {
    set_gearsts(from.gearsts());
  }
  if (from.backbrake() != 0) {
    set_backbrake(from.backbrake());
  }
  if (from.accpdlsts() != 0) {
    set_accpdlsts(from.accpdlsts());
  }
  if (from.speedcontrolvalid() != 0) {
    set_speedcontrolvalid(from.speedcontrolvalid());
  }
  if (from.generalfaultwarning() != 0) {
    set_generalfaultwarning(from.generalfaultwarning());
  }
  if (from.busbardischarg() != 0) {
    set_busbardischarg(from.busbardischarg());
  }
  if (from.brakeactive() != 0) {
    set_brakeactive(from.brakeactive());
  }
  if (from.motspeedvalid() != 0) {
    set_motspeedvalid(from.motspeedvalid());
  }
  if (from.gearwarning() != 0) {
    set_gearwarning(from.gearwarning());
  }
  if (from.holdreq() != 0) {
    set_holdreq(from.holdreq());
  }
  if (from.apdlpercent() != 0) {
    set_apdlpercent(from.apdlpercent());
  }
}

void CanMsg_0x08FF32F0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x08FF32F0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x08FF32F0::CopyFrom(const CanMsg_0x08FF32F0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x08FF32F0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x08FF32F0::IsInitialized() const {
  return true;
}

void CanMsg_0x08FF32F0::Swap(CanMsg_0x08FF32F0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x08FF32F0::InternalSwap(CanMsg_0x08FF32F0* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(motspeed_, other->motspeed_);
  std::swap(mottorque_, other->mottorque_);
  std::swap(rotarywarning_, other->rotarywarning_);
  std::swap(overcurrentfault_, other->overcurrentfault_);
  std::swap(powerlimtwarning_, other->powerlimtwarning_);
  std::swap(mcutempwarning_, other->mcutempwarning_);
  std::swap(mottempwarning_, other->mottempwarning_);
  std::swap(intepass_, other->intepass_);
  std::swap(busbarovervoltfault_, other->busbarovervoltfault_);
  std::swap(busbarlessvoltfault_, other->busbarlessvoltfault_);
  std::swap(gearsts_, other->gearsts_);
  std::swap(backbrake_, other->backbrake_);
  std::swap(accpdlsts_, other->accpdlsts_);
  std::swap(speedcontrolvalid_, other->speedcontrolvalid_);
  std::swap(generalfaultwarning_, other->generalfaultwarning_);
  std::swap(busbardischarg_, other->busbardischarg_);
  std::swap(brakeactive_, other->brakeactive_);
  std::swap(motspeedvalid_, other->motspeedvalid_);
  std::swap(gearwarning_, other->gearwarning_);
  std::swap(holdreq_, other->holdreq_);
  std::swap(apdlpercent_, other->apdlpercent_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x08FF32F0::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x08FF32F0

// bool isValid = 1;
void CanMsg_0x08FF32F0::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x08FF32F0::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.isValid)
  return isvalid_;
}
void CanMsg_0x08FF32F0::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.isValid)
}

// uint32 MotSpeed = 2;
void CanMsg_0x08FF32F0::clear_motspeed() {
  motspeed_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::motspeed() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.MotSpeed)
  return motspeed_;
}
void CanMsg_0x08FF32F0::set_motspeed(::google::protobuf::uint32 value) {
  
  motspeed_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.MotSpeed)
}

// uint32 MotTorque = 3;
void CanMsg_0x08FF32F0::clear_mottorque() {
  mottorque_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::mottorque() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.MotTorque)
  return mottorque_;
}
void CanMsg_0x08FF32F0::set_mottorque(::google::protobuf::uint32 value) {
  
  mottorque_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.MotTorque)
}

// uint32 RotaryWarning = 4;
void CanMsg_0x08FF32F0::clear_rotarywarning() {
  rotarywarning_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::rotarywarning() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.RotaryWarning)
  return rotarywarning_;
}
void CanMsg_0x08FF32F0::set_rotarywarning(::google::protobuf::uint32 value) {
  
  rotarywarning_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.RotaryWarning)
}

// uint32 OverCurrentFault = 5;
void CanMsg_0x08FF32F0::clear_overcurrentfault() {
  overcurrentfault_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::overcurrentfault() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.OverCurrentFault)
  return overcurrentfault_;
}
void CanMsg_0x08FF32F0::set_overcurrentfault(::google::protobuf::uint32 value) {
  
  overcurrentfault_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.OverCurrentFault)
}

// uint32 PowerLimtWarning = 6;
void CanMsg_0x08FF32F0::clear_powerlimtwarning() {
  powerlimtwarning_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::powerlimtwarning() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.PowerLimtWarning)
  return powerlimtwarning_;
}
void CanMsg_0x08FF32F0::set_powerlimtwarning(::google::protobuf::uint32 value) {
  
  powerlimtwarning_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.PowerLimtWarning)
}

// uint32 MCUTempWarning = 7;
void CanMsg_0x08FF32F0::clear_mcutempwarning() {
  mcutempwarning_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::mcutempwarning() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.MCUTempWarning)
  return mcutempwarning_;
}
void CanMsg_0x08FF32F0::set_mcutempwarning(::google::protobuf::uint32 value) {
  
  mcutempwarning_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.MCUTempWarning)
}

// uint32 MotTempWarning = 8;
void CanMsg_0x08FF32F0::clear_mottempwarning() {
  mottempwarning_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::mottempwarning() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.MotTempWarning)
  return mottempwarning_;
}
void CanMsg_0x08FF32F0::set_mottempwarning(::google::protobuf::uint32 value) {
  
  mottempwarning_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.MotTempWarning)
}

// uint32 IntePass = 9;
void CanMsg_0x08FF32F0::clear_intepass() {
  intepass_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::intepass() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.IntePass)
  return intepass_;
}
void CanMsg_0x08FF32F0::set_intepass(::google::protobuf::uint32 value) {
  
  intepass_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.IntePass)
}

// uint32 BusbarOverVoltFault = 10;
void CanMsg_0x08FF32F0::clear_busbarovervoltfault() {
  busbarovervoltfault_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::busbarovervoltfault() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.BusbarOverVoltFault)
  return busbarovervoltfault_;
}
void CanMsg_0x08FF32F0::set_busbarovervoltfault(::google::protobuf::uint32 value) {
  
  busbarovervoltfault_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.BusbarOverVoltFault)
}

// uint32 BusbarLessVoltFault = 11;
void CanMsg_0x08FF32F0::clear_busbarlessvoltfault() {
  busbarlessvoltfault_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::busbarlessvoltfault() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.BusbarLessVoltFault)
  return busbarlessvoltfault_;
}
void CanMsg_0x08FF32F0::set_busbarlessvoltfault(::google::protobuf::uint32 value) {
  
  busbarlessvoltfault_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.BusbarLessVoltFault)
}

// uint32 GearSts = 12;
void CanMsg_0x08FF32F0::clear_gearsts() {
  gearsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::gearsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.GearSts)
  return gearsts_;
}
void CanMsg_0x08FF32F0::set_gearsts(::google::protobuf::uint32 value) {
  
  gearsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.GearSts)
}

// uint32 BackBrake = 13;
void CanMsg_0x08FF32F0::clear_backbrake() {
  backbrake_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::backbrake() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.BackBrake)
  return backbrake_;
}
void CanMsg_0x08FF32F0::set_backbrake(::google::protobuf::uint32 value) {
  
  backbrake_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.BackBrake)
}

// uint32 AccPdlSts = 14;
void CanMsg_0x08FF32F0::clear_accpdlsts() {
  accpdlsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::accpdlsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.AccPdlSts)
  return accpdlsts_;
}
void CanMsg_0x08FF32F0::set_accpdlsts(::google::protobuf::uint32 value) {
  
  accpdlsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.AccPdlSts)
}

// uint32 SpeedControlValid = 15;
void CanMsg_0x08FF32F0::clear_speedcontrolvalid() {
  speedcontrolvalid_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::speedcontrolvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.SpeedControlValid)
  return speedcontrolvalid_;
}
void CanMsg_0x08FF32F0::set_speedcontrolvalid(::google::protobuf::uint32 value) {
  
  speedcontrolvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.SpeedControlValid)
}

// uint32 GeneralFaultWarning = 16;
void CanMsg_0x08FF32F0::clear_generalfaultwarning() {
  generalfaultwarning_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::generalfaultwarning() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.GeneralFaultWarning)
  return generalfaultwarning_;
}
void CanMsg_0x08FF32F0::set_generalfaultwarning(::google::protobuf::uint32 value) {
  
  generalfaultwarning_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.GeneralFaultWarning)
}

// uint32 Busbardischarg = 17;
void CanMsg_0x08FF32F0::clear_busbardischarg() {
  busbardischarg_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::busbardischarg() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.Busbardischarg)
  return busbardischarg_;
}
void CanMsg_0x08FF32F0::set_busbardischarg(::google::protobuf::uint32 value) {
  
  busbardischarg_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.Busbardischarg)
}

// uint32 BrakeActive = 18;
void CanMsg_0x08FF32F0::clear_brakeactive() {
  brakeactive_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::brakeactive() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.BrakeActive)
  return brakeactive_;
}
void CanMsg_0x08FF32F0::set_brakeactive(::google::protobuf::uint32 value) {
  
  brakeactive_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.BrakeActive)
}

// uint32 MotSpeedValid = 19;
void CanMsg_0x08FF32F0::clear_motspeedvalid() {
  motspeedvalid_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::motspeedvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.MotSpeedValid)
  return motspeedvalid_;
}
void CanMsg_0x08FF32F0::set_motspeedvalid(::google::protobuf::uint32 value) {
  
  motspeedvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.MotSpeedValid)
}

// uint32 GearWarning = 20;
void CanMsg_0x08FF32F0::clear_gearwarning() {
  gearwarning_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::gearwarning() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.GearWarning)
  return gearwarning_;
}
void CanMsg_0x08FF32F0::set_gearwarning(::google::protobuf::uint32 value) {
  
  gearwarning_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.GearWarning)
}

// uint32 HoldReq = 21;
void CanMsg_0x08FF32F0::clear_holdreq() {
  holdreq_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::holdreq() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.HoldReq)
  return holdreq_;
}
void CanMsg_0x08FF32F0::set_holdreq(::google::protobuf::uint32 value) {
  
  holdreq_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.HoldReq)
}

// uint32 ApdlPercent = 22;
void CanMsg_0x08FF32F0::clear_apdlpercent() {
  apdlpercent_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x08FF32F0::apdlpercent() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x08FF32F0.ApdlPercent)
  return apdlpercent_;
}
void CanMsg_0x08FF32F0::set_apdlpercent(::google::protobuf::uint32 value) {
  
  apdlpercent_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x08FF32F0.ApdlPercent)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x0CFF15EF::kIsValidFieldNumber;
const int CanMsg_0x0CFF15EF::kMOTspeedFieldNumber;
const int CanMsg_0x0CFF15EF::kMOTBusbarVoltFieldNumber;
const int CanMsg_0x0CFF15EF::kMotTempFieldNumber;
const int CanMsg_0x0CFF15EF::kIGBTTempFieldNumber;
const int CanMsg_0x0CFF15EF::kMOTCurrentACFieldNumber;
const int CanMsg_0x0CFF15EF::kMOTFaultCodeSignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x0CFF15EF::CanMsg_0x0CFF15EF()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x0CFF15EF)
}
CanMsg_0x0CFF15EF::CanMsg_0x0CFF15EF(const CanMsg_0x0CFF15EF& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&motfaultcodesign_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(motfaultcodesign_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x0CFF15EF)
}

void CanMsg_0x0CFF15EF::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&motfaultcodesign_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(motfaultcodesign_));
  _cached_size_ = 0;
}

CanMsg_0x0CFF15EF::~CanMsg_0x0CFF15EF() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x0CFF15EF)
  SharedDtor();
}

void CanMsg_0x0CFF15EF::SharedDtor() {
}

void CanMsg_0x0CFF15EF::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x0CFF15EF::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x0CFF15EF& CanMsg_0x0CFF15EF::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x0CFF15EF* CanMsg_0x0CFF15EF::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x0CFF15EF* n = new CanMsg_0x0CFF15EF;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x0CFF15EF::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x0CFF15EF)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&motfaultcodesign_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(motfaultcodesign_));
}

bool CanMsg_0x0CFF15EF::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x0CFF15EF)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MOTspeed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &motspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MOTBusbarVolt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &motbusbarvolt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MotTemp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mottemp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 IGBTTemp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &igbttemp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MOT_current_AC = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mot_current_ac_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MOTFaultCodeSign = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &motfaultcodesign_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x0CFF15EF)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x0CFF15EF)
  return false;
#undef DO_
}

void CanMsg_0x0CFF15EF::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x0CFF15EF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 MOTspeed = 2;
  if (this->motspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->motspeed(), output);
  }

  // uint32 MOTBusbarVolt = 3;
  if (this->motbusbarvolt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->motbusbarvolt(), output);
  }

  // uint32 MotTemp = 4;
  if (this->mottemp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->mottemp(), output);
  }

  // uint32 IGBTTemp = 5;
  if (this->igbttemp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->igbttemp(), output);
  }

  // uint32 MOT_current_AC = 6;
  if (this->mot_current_ac() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->mot_current_ac(), output);
  }

  // uint32 MOTFaultCodeSign = 7;
  if (this->motfaultcodesign() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->motfaultcodesign(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x0CFF15EF)
}

::google::protobuf::uint8* CanMsg_0x0CFF15EF::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x0CFF15EF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 MOTspeed = 2;
  if (this->motspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->motspeed(), target);
  }

  // uint32 MOTBusbarVolt = 3;
  if (this->motbusbarvolt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->motbusbarvolt(), target);
  }

  // uint32 MotTemp = 4;
  if (this->mottemp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->mottemp(), target);
  }

  // uint32 IGBTTemp = 5;
  if (this->igbttemp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->igbttemp(), target);
  }

  // uint32 MOT_current_AC = 6;
  if (this->mot_current_ac() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->mot_current_ac(), target);
  }

  // uint32 MOTFaultCodeSign = 7;
  if (this->motfaultcodesign() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->motfaultcodesign(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x0CFF15EF)
  return target;
}

size_t CanMsg_0x0CFF15EF::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x0CFF15EF)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 MOTspeed = 2;
  if (this->motspeed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->motspeed());
  }

  // uint32 MOTBusbarVolt = 3;
  if (this->motbusbarvolt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->motbusbarvolt());
  }

  // uint32 MotTemp = 4;
  if (this->mottemp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mottemp());
  }

  // uint32 IGBTTemp = 5;
  if (this->igbttemp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->igbttemp());
  }

  // uint32 MOT_current_AC = 6;
  if (this->mot_current_ac() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mot_current_ac());
  }

  // uint32 MOTFaultCodeSign = 7;
  if (this->motfaultcodesign() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->motfaultcodesign());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x0CFF15EF::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x0CFF15EF)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x0CFF15EF* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x0CFF15EF>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x0CFF15EF)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x0CFF15EF)
    MergeFrom(*source);
  }
}

void CanMsg_0x0CFF15EF::MergeFrom(const CanMsg_0x0CFF15EF& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x0CFF15EF)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.motspeed() != 0) {
    set_motspeed(from.motspeed());
  }
  if (from.motbusbarvolt() != 0) {
    set_motbusbarvolt(from.motbusbarvolt());
  }
  if (from.mottemp() != 0) {
    set_mottemp(from.mottemp());
  }
  if (from.igbttemp() != 0) {
    set_igbttemp(from.igbttemp());
  }
  if (from.mot_current_ac() != 0) {
    set_mot_current_ac(from.mot_current_ac());
  }
  if (from.motfaultcodesign() != 0) {
    set_motfaultcodesign(from.motfaultcodesign());
  }
}

void CanMsg_0x0CFF15EF::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x0CFF15EF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x0CFF15EF::CopyFrom(const CanMsg_0x0CFF15EF& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x0CFF15EF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x0CFF15EF::IsInitialized() const {
  return true;
}

void CanMsg_0x0CFF15EF::Swap(CanMsg_0x0CFF15EF* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x0CFF15EF::InternalSwap(CanMsg_0x0CFF15EF* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(motspeed_, other->motspeed_);
  std::swap(motbusbarvolt_, other->motbusbarvolt_);
  std::swap(mottemp_, other->mottemp_);
  std::swap(igbttemp_, other->igbttemp_);
  std::swap(mot_current_ac_, other->mot_current_ac_);
  std::swap(motfaultcodesign_, other->motfaultcodesign_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x0CFF15EF::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x0CFF15EF

// bool isValid = 1;
void CanMsg_0x0CFF15EF::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x0CFF15EF::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF15EF.isValid)
  return isvalid_;
}
void CanMsg_0x0CFF15EF::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF15EF.isValid)
}

// uint32 MOTspeed = 2;
void CanMsg_0x0CFF15EF::clear_motspeed() {
  motspeed_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF15EF::motspeed() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF15EF.MOTspeed)
  return motspeed_;
}
void CanMsg_0x0CFF15EF::set_motspeed(::google::protobuf::uint32 value) {
  
  motspeed_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF15EF.MOTspeed)
}

// uint32 MOTBusbarVolt = 3;
void CanMsg_0x0CFF15EF::clear_motbusbarvolt() {
  motbusbarvolt_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF15EF::motbusbarvolt() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF15EF.MOTBusbarVolt)
  return motbusbarvolt_;
}
void CanMsg_0x0CFF15EF::set_motbusbarvolt(::google::protobuf::uint32 value) {
  
  motbusbarvolt_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF15EF.MOTBusbarVolt)
}

// uint32 MotTemp = 4;
void CanMsg_0x0CFF15EF::clear_mottemp() {
  mottemp_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF15EF::mottemp() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF15EF.MotTemp)
  return mottemp_;
}
void CanMsg_0x0CFF15EF::set_mottemp(::google::protobuf::uint32 value) {
  
  mottemp_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF15EF.MotTemp)
}

// uint32 IGBTTemp = 5;
void CanMsg_0x0CFF15EF::clear_igbttemp() {
  igbttemp_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF15EF::igbttemp() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF15EF.IGBTTemp)
  return igbttemp_;
}
void CanMsg_0x0CFF15EF::set_igbttemp(::google::protobuf::uint32 value) {
  
  igbttemp_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF15EF.IGBTTemp)
}

// uint32 MOT_current_AC = 6;
void CanMsg_0x0CFF15EF::clear_mot_current_ac() {
  mot_current_ac_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF15EF::mot_current_ac() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF15EF.MOT_current_AC)
  return mot_current_ac_;
}
void CanMsg_0x0CFF15EF::set_mot_current_ac(::google::protobuf::uint32 value) {
  
  mot_current_ac_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF15EF.MOT_current_AC)
}

// uint32 MOTFaultCodeSign = 7;
void CanMsg_0x0CFF15EF::clear_motfaultcodesign() {
  motfaultcodesign_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF15EF::motfaultcodesign() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF15EF.MOTFaultCodeSign)
  return motfaultcodesign_;
}
void CanMsg_0x0CFF15EF::set_motfaultcodesign(::google::protobuf::uint32 value) {
  
  motfaultcodesign_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF15EF.MOTFaultCodeSign)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x0CFF16EF::kIsValidFieldNumber;
const int CanMsg_0x0CFF16EF::kMCUintStsFieldNumber;
const int CanMsg_0x0CFF16EF::kMCUModelStsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x0CFF16EF::CanMsg_0x0CFF16EF()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x0CFF16EF)
}
CanMsg_0x0CFF16EF::CanMsg_0x0CFF16EF(const CanMsg_0x0CFF16EF& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&mcumodelsts_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(mcumodelsts_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x0CFF16EF)
}

void CanMsg_0x0CFF16EF::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&mcumodelsts_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(mcumodelsts_));
  _cached_size_ = 0;
}

CanMsg_0x0CFF16EF::~CanMsg_0x0CFF16EF() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x0CFF16EF)
  SharedDtor();
}

void CanMsg_0x0CFF16EF::SharedDtor() {
}

void CanMsg_0x0CFF16EF::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x0CFF16EF::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x0CFF16EF& CanMsg_0x0CFF16EF::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x0CFF16EF* CanMsg_0x0CFF16EF::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x0CFF16EF* n = new CanMsg_0x0CFF16EF;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x0CFF16EF::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x0CFF16EF)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&mcumodelsts_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(mcumodelsts_));
}

bool CanMsg_0x0CFF16EF::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x0CFF16EF)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MCUintSts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mcuintsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MCUModelSts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mcumodelsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x0CFF16EF)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x0CFF16EF)
  return false;
#undef DO_
}

void CanMsg_0x0CFF16EF::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x0CFF16EF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 MCUintSts = 2;
  if (this->mcuintsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mcuintsts(), output);
  }

  // uint32 MCUModelSts = 3;
  if (this->mcumodelsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mcumodelsts(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x0CFF16EF)
}

::google::protobuf::uint8* CanMsg_0x0CFF16EF::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x0CFF16EF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 MCUintSts = 2;
  if (this->mcuintsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mcuintsts(), target);
  }

  // uint32 MCUModelSts = 3;
  if (this->mcumodelsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mcumodelsts(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x0CFF16EF)
  return target;
}

size_t CanMsg_0x0CFF16EF::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x0CFF16EF)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 MCUintSts = 2;
  if (this->mcuintsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mcuintsts());
  }

  // uint32 MCUModelSts = 3;
  if (this->mcumodelsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mcumodelsts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x0CFF16EF::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x0CFF16EF)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x0CFF16EF* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x0CFF16EF>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x0CFF16EF)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x0CFF16EF)
    MergeFrom(*source);
  }
}

void CanMsg_0x0CFF16EF::MergeFrom(const CanMsg_0x0CFF16EF& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x0CFF16EF)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.mcuintsts() != 0) {
    set_mcuintsts(from.mcuintsts());
  }
  if (from.mcumodelsts() != 0) {
    set_mcumodelsts(from.mcumodelsts());
  }
}

void CanMsg_0x0CFF16EF::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x0CFF16EF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x0CFF16EF::CopyFrom(const CanMsg_0x0CFF16EF& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x0CFF16EF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x0CFF16EF::IsInitialized() const {
  return true;
}

void CanMsg_0x0CFF16EF::Swap(CanMsg_0x0CFF16EF* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x0CFF16EF::InternalSwap(CanMsg_0x0CFF16EF* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(mcuintsts_, other->mcuintsts_);
  std::swap(mcumodelsts_, other->mcumodelsts_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x0CFF16EF::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x0CFF16EF

// bool isValid = 1;
void CanMsg_0x0CFF16EF::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x0CFF16EF::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF16EF.isValid)
  return isvalid_;
}
void CanMsg_0x0CFF16EF::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF16EF.isValid)
}

// uint32 MCUintSts = 2;
void CanMsg_0x0CFF16EF::clear_mcuintsts() {
  mcuintsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF16EF::mcuintsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF16EF.MCUintSts)
  return mcuintsts_;
}
void CanMsg_0x0CFF16EF::set_mcuintsts(::google::protobuf::uint32 value) {
  
  mcuintsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF16EF.MCUintSts)
}

// uint32 MCUModelSts = 3;
void CanMsg_0x0CFF16EF::clear_mcumodelsts() {
  mcumodelsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF16EF::mcumodelsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF16EF.MCUModelSts)
  return mcumodelsts_;
}
void CanMsg_0x0CFF16EF::set_mcumodelsts(::google::protobuf::uint32 value) {
  
  mcumodelsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF16EF.MCUModelSts)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x18FF12F7::kIsValidFieldNumber;
const int CanMsg_0x18FF12F7::kOUTVoltFieldNumber;
const int CanMsg_0x18FF12F7::kOUTCurrentFieldNumber;
const int CanMsg_0x18FF12F7::kDCStsFieldNumber;
const int CanMsg_0x18FF12F7::kOUTCutDownStsFieldNumber;
const int CanMsg_0x18FF12F7::kINCutDownStsFieldNumber;
const int CanMsg_0x18FF12F7::kFaultLevelFieldNumber;
const int CanMsg_0x18FF12F7::kRadiatorTempFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x18FF12F7::CanMsg_0x18FF12F7()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x18FF12F7)
}
CanMsg_0x18FF12F7::CanMsg_0x18FF12F7(const CanMsg_0x18FF12F7& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&radiatortemp_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(radiatortemp_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x18FF12F7)
}

void CanMsg_0x18FF12F7::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&radiatortemp_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(radiatortemp_));
  _cached_size_ = 0;
}

CanMsg_0x18FF12F7::~CanMsg_0x18FF12F7() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x18FF12F7)
  SharedDtor();
}

void CanMsg_0x18FF12F7::SharedDtor() {
}

void CanMsg_0x18FF12F7::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x18FF12F7::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x18FF12F7& CanMsg_0x18FF12F7::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x18FF12F7* CanMsg_0x18FF12F7::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x18FF12F7* n = new CanMsg_0x18FF12F7;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x18FF12F7::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x18FF12F7)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&radiatortemp_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(radiatortemp_));
}

bool CanMsg_0x18FF12F7::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x18FF12F7)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 OUTVolt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &outvolt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 OUTCurrent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &outcurrent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DCSts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dcsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 OUTCutDownSts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &outcutdownsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 INCutDownSts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &incutdownsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 FaultLevel = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &faultlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RadiatorTemp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &radiatortemp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x18FF12F7)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x18FF12F7)
  return false;
#undef DO_
}

void CanMsg_0x18FF12F7::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x18FF12F7)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 OUTVolt = 2;
  if (this->outvolt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->outvolt(), output);
  }

  // uint32 OUTCurrent = 3;
  if (this->outcurrent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->outcurrent(), output);
  }

  // uint32 DCSts = 4;
  if (this->dcsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->dcsts(), output);
  }

  // uint32 OUTCutDownSts = 5;
  if (this->outcutdownsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->outcutdownsts(), output);
  }

  // uint32 INCutDownSts = 6;
  if (this->incutdownsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->incutdownsts(), output);
  }

  // uint32 FaultLevel = 7;
  if (this->faultlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->faultlevel(), output);
  }

  // uint32 RadiatorTemp = 8;
  if (this->radiatortemp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->radiatortemp(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x18FF12F7)
}

::google::protobuf::uint8* CanMsg_0x18FF12F7::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x18FF12F7)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 OUTVolt = 2;
  if (this->outvolt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->outvolt(), target);
  }

  // uint32 OUTCurrent = 3;
  if (this->outcurrent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->outcurrent(), target);
  }

  // uint32 DCSts = 4;
  if (this->dcsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->dcsts(), target);
  }

  // uint32 OUTCutDownSts = 5;
  if (this->outcutdownsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->outcutdownsts(), target);
  }

  // uint32 INCutDownSts = 6;
  if (this->incutdownsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->incutdownsts(), target);
  }

  // uint32 FaultLevel = 7;
  if (this->faultlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->faultlevel(), target);
  }

  // uint32 RadiatorTemp = 8;
  if (this->radiatortemp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->radiatortemp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x18FF12F7)
  return target;
}

size_t CanMsg_0x18FF12F7::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x18FF12F7)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 OUTVolt = 2;
  if (this->outvolt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->outvolt());
  }

  // uint32 OUTCurrent = 3;
  if (this->outcurrent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->outcurrent());
  }

  // uint32 DCSts = 4;
  if (this->dcsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dcsts());
  }

  // uint32 OUTCutDownSts = 5;
  if (this->outcutdownsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->outcutdownsts());
  }

  // uint32 INCutDownSts = 6;
  if (this->incutdownsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->incutdownsts());
  }

  // uint32 FaultLevel = 7;
  if (this->faultlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->faultlevel());
  }

  // uint32 RadiatorTemp = 8;
  if (this->radiatortemp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->radiatortemp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x18FF12F7::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x18FF12F7)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x18FF12F7* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x18FF12F7>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x18FF12F7)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x18FF12F7)
    MergeFrom(*source);
  }
}

void CanMsg_0x18FF12F7::MergeFrom(const CanMsg_0x18FF12F7& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x18FF12F7)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.outvolt() != 0) {
    set_outvolt(from.outvolt());
  }
  if (from.outcurrent() != 0) {
    set_outcurrent(from.outcurrent());
  }
  if (from.dcsts() != 0) {
    set_dcsts(from.dcsts());
  }
  if (from.outcutdownsts() != 0) {
    set_outcutdownsts(from.outcutdownsts());
  }
  if (from.incutdownsts() != 0) {
    set_incutdownsts(from.incutdownsts());
  }
  if (from.faultlevel() != 0) {
    set_faultlevel(from.faultlevel());
  }
  if (from.radiatortemp() != 0) {
    set_radiatortemp(from.radiatortemp());
  }
}

void CanMsg_0x18FF12F7::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x18FF12F7)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x18FF12F7::CopyFrom(const CanMsg_0x18FF12F7& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x18FF12F7)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x18FF12F7::IsInitialized() const {
  return true;
}

void CanMsg_0x18FF12F7::Swap(CanMsg_0x18FF12F7* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x18FF12F7::InternalSwap(CanMsg_0x18FF12F7* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(outvolt_, other->outvolt_);
  std::swap(outcurrent_, other->outcurrent_);
  std::swap(dcsts_, other->dcsts_);
  std::swap(outcutdownsts_, other->outcutdownsts_);
  std::swap(incutdownsts_, other->incutdownsts_);
  std::swap(faultlevel_, other->faultlevel_);
  std::swap(radiatortemp_, other->radiatortemp_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x18FF12F7::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x18FF12F7

// bool isValid = 1;
void CanMsg_0x18FF12F7::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x18FF12F7::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18FF12F7.isValid)
  return isvalid_;
}
void CanMsg_0x18FF12F7::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18FF12F7.isValid)
}

// uint32 OUTVolt = 2;
void CanMsg_0x18FF12F7::clear_outvolt() {
  outvolt_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18FF12F7::outvolt() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18FF12F7.OUTVolt)
  return outvolt_;
}
void CanMsg_0x18FF12F7::set_outvolt(::google::protobuf::uint32 value) {
  
  outvolt_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18FF12F7.OUTVolt)
}

// uint32 OUTCurrent = 3;
void CanMsg_0x18FF12F7::clear_outcurrent() {
  outcurrent_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18FF12F7::outcurrent() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18FF12F7.OUTCurrent)
  return outcurrent_;
}
void CanMsg_0x18FF12F7::set_outcurrent(::google::protobuf::uint32 value) {
  
  outcurrent_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18FF12F7.OUTCurrent)
}

// uint32 DCSts = 4;
void CanMsg_0x18FF12F7::clear_dcsts() {
  dcsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18FF12F7::dcsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18FF12F7.DCSts)
  return dcsts_;
}
void CanMsg_0x18FF12F7::set_dcsts(::google::protobuf::uint32 value) {
  
  dcsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18FF12F7.DCSts)
}

// uint32 OUTCutDownSts = 5;
void CanMsg_0x18FF12F7::clear_outcutdownsts() {
  outcutdownsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18FF12F7::outcutdownsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18FF12F7.OUTCutDownSts)
  return outcutdownsts_;
}
void CanMsg_0x18FF12F7::set_outcutdownsts(::google::protobuf::uint32 value) {
  
  outcutdownsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18FF12F7.OUTCutDownSts)
}

// uint32 INCutDownSts = 6;
void CanMsg_0x18FF12F7::clear_incutdownsts() {
  incutdownsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18FF12F7::incutdownsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18FF12F7.INCutDownSts)
  return incutdownsts_;
}
void CanMsg_0x18FF12F7::set_incutdownsts(::google::protobuf::uint32 value) {
  
  incutdownsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18FF12F7.INCutDownSts)
}

// uint32 FaultLevel = 7;
void CanMsg_0x18FF12F7::clear_faultlevel() {
  faultlevel_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18FF12F7::faultlevel() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18FF12F7.FaultLevel)
  return faultlevel_;
}
void CanMsg_0x18FF12F7::set_faultlevel(::google::protobuf::uint32 value) {
  
  faultlevel_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18FF12F7.FaultLevel)
}

// uint32 RadiatorTemp = 8;
void CanMsg_0x18FF12F7::clear_radiatortemp() {
  radiatortemp_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18FF12F7::radiatortemp() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18FF12F7.RadiatorTemp)
  return radiatortemp_;
}
void CanMsg_0x18FF12F7::set_radiatortemp(::google::protobuf::uint32 value) {
  
  radiatortemp_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18FF12F7.RadiatorTemp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x18F412EF::kIsValidFieldNumber;
const int CanMsg_0x18F412EF::kBattOverTempFaultFieldNumber;
const int CanMsg_0x18F412EF::kInsulationFaultFieldNumber;
const int CanMsg_0x18F412EF::kCellLessVoltWarningFieldNumber;
const int CanMsg_0x18F412EF::kCellOverVoltWarningFieldNumber;
const int CanMsg_0x18F412EF::kBattLessElectWarningFieldNumber;
const int CanMsg_0x18F412EF::kPositiveRelayAdhesionFieldNumber;
const int CanMsg_0x18F412EF::kPTCRelayAdhesionFieldNumber;
const int CanMsg_0x18F412EF::kSOHWarningFieldNumber;
const int CanMsg_0x18F412EF::kPositionRelayStsFieldNumber;
const int CanMsg_0x18F412EF::kPTCRelayStsFieldNumber;
const int CanMsg_0x18F412EF::kBattVoltImbalanceFieldNumber;
const int CanMsg_0x18F412EF::kDischgOverCurrentFieldNumber;
const int CanMsg_0x18F412EF::kChgOverCurrentFieldNumber;
const int CanMsg_0x18F412EF::kItselfCANerrorFieldNumber;
const int CanMsg_0x18F412EF::kBattGeneralLessVoltFieldNumber;
const int CanMsg_0x18F412EF::kBattGeneralOverVoltFieldNumber;
const int CanMsg_0x18F412EF::kBMSHardwareFaultFieldNumber;
const int CanMsg_0x18F412EF::kCANerrorFieldNumber;
const int CanMsg_0x18F412EF::kCCsignConnetStsFieldNumber;
const int CanMsg_0x18F412EF::kPrechargeStsFieldNumber;
const int CanMsg_0x18F412EF::kBMSstsFieldNumber;
const int CanMsg_0x18F412EF::kBackChgEnbFieldNumber;
const int CanMsg_0x18F412EF::kWarmModelFieldNumber;
const int CanMsg_0x18F412EF::kBalanceStsFieldNumber;
const int CanMsg_0x18F412EF::kSOCLowFieldNumber;
const int CanMsg_0x18F412EF::kCurrentSensorFaultFieldNumber;
const int CanMsg_0x18F412EF::kTempSensorFaultFieldNumber;
const int CanMsg_0x18F412EF::kNegativeRelayAdhesionFieldNumber;
const int CanMsg_0x18F412EF::kPrechgRelayStsFieldNumber;
const int CanMsg_0x18F412EF::kNegativeRelayStsFieldNumber;
const int CanMsg_0x18F412EF::kDCchgPositiveRelayStsFieldNumber;
const int CanMsg_0x18F412EF::kDCchgGunOverTempFaultFieldNumber;
const int CanMsg_0x18F412EF::kCellCollectLineCutFaultFieldNumber;
const int CanMsg_0x18F412EF::kPrechgRelayAdhesionFieldNumber;
const int CanMsg_0x18F412EF::kDCchgPositiveRelayAdhesionFieldNumber;
const int CanMsg_0x18F412EF::kWakeUpTypeFieldNumber;
const int CanMsg_0x18F412EF::kBattTempImbalanceFaultFieldNumber;
const int CanMsg_0x18F412EF::kBattLessTempFaultFieldNumber;
const int CanMsg_0x18F412EF::kWarmStsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x18F412EF::CanMsg_0x18F412EF()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x18F412EF)
}
CanMsg_0x18F412EF::CanMsg_0x18F412EF(const CanMsg_0x18F412EF& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&warmsts_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(warmsts_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x18F412EF)
}

void CanMsg_0x18F412EF::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&warmsts_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(warmsts_));
  _cached_size_ = 0;
}

CanMsg_0x18F412EF::~CanMsg_0x18F412EF() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x18F412EF)
  SharedDtor();
}

void CanMsg_0x18F412EF::SharedDtor() {
}

void CanMsg_0x18F412EF::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x18F412EF::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x18F412EF& CanMsg_0x18F412EF::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x18F412EF* CanMsg_0x18F412EF::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x18F412EF* n = new CanMsg_0x18F412EF;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x18F412EF::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x18F412EF)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&warmsts_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(warmsts_));
}

bool CanMsg_0x18F412EF::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x18F412EF)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BattOverTempFault = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battovertempfault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 InsulationFault = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &insulationfault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CellLessVoltWarning = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &celllessvoltwarning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CellOverVoltWarning = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cellovervoltwarning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BattLessElectWarning = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battlesselectwarning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 positiveRelayAdhesion = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &positiverelayadhesion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PTCRelayAdhesion = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ptcrelayadhesion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SOHWarning = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sohwarning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PositionRelaySts = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &positionrelaysts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PTCRelaySts = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ptcrelaysts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BattVoltImbalance = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battvoltimbalance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DischgOverCurrent = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dischgovercurrent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ChgOverCurrent = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chgovercurrent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ItselfCANerror = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itselfcanerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BattGeneralLessVolt = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battgenerallessvolt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BattGeneralOverVolt = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battgeneralovervolt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BMSHardwareFault = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bmshardwarefault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CANerror = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &canerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CCsignConnetSts = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ccsignconnetsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PrechargeSts = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prechargests_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BMSsts = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bmssts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BackChgEnb = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &backchgenb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 WarmModel = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &warmmodel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BalanceSts = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &balancests_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SOCLow = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &soclow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CurrentSensorFault = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currentsensorfault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 TempSensorFault = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tempsensorfault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 NegativeRelayAdhesion = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &negativerelayadhesion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PrechgRelaySts = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prechgrelaysts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 NegativeRelaySts = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &negativerelaysts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DCchgPositiveRelaySts = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(256u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dcchgpositiverelaysts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DCchgGunOverTempFault = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(264u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dcchggunovertempfault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CellCollectLineCutFault = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(272u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cellcollectlinecutfault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PrechgRelayAdhesion = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(280u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prechgrelayadhesion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DCchgPositiveRelayAdhesion = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(288u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dcchgpositiverelayadhesion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 WakeUpType = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(296u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wakeuptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BattTempImbalanceFault = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(304u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &batttempimbalancefault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BattLessTempFault = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(312u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battlesstempfault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 WarmSts = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(320u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &warmsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x18F412EF)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x18F412EF)
  return false;
#undef DO_
}

void CanMsg_0x18F412EF::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x18F412EF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 BattOverTempFault = 2;
  if (this->battovertempfault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->battovertempfault(), output);
  }

  // uint32 InsulationFault = 3;
  if (this->insulationfault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->insulationfault(), output);
  }

  // uint32 CellLessVoltWarning = 4;
  if (this->celllessvoltwarning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->celllessvoltwarning(), output);
  }

  // uint32 CellOverVoltWarning = 5;
  if (this->cellovervoltwarning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->cellovervoltwarning(), output);
  }

  // uint32 BattLessElectWarning = 6;
  if (this->battlesselectwarning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->battlesselectwarning(), output);
  }

  // uint32 positiveRelayAdhesion = 7;
  if (this->positiverelayadhesion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->positiverelayadhesion(), output);
  }

  // uint32 PTCRelayAdhesion = 8;
  if (this->ptcrelayadhesion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->ptcrelayadhesion(), output);
  }

  // uint32 SOHWarning = 9;
  if (this->sohwarning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->sohwarning(), output);
  }

  // uint32 PositionRelaySts = 10;
  if (this->positionrelaysts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->positionrelaysts(), output);
  }

  // uint32 PTCRelaySts = 11;
  if (this->ptcrelaysts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->ptcrelaysts(), output);
  }

  // uint32 BattVoltImbalance = 12;
  if (this->battvoltimbalance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->battvoltimbalance(), output);
  }

  // uint32 DischgOverCurrent = 13;
  if (this->dischgovercurrent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->dischgovercurrent(), output);
  }

  // uint32 ChgOverCurrent = 14;
  if (this->chgovercurrent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->chgovercurrent(), output);
  }

  // uint32 ItselfCANerror = 15;
  if (this->itselfcanerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->itselfcanerror(), output);
  }

  // uint32 BattGeneralLessVolt = 16;
  if (this->battgenerallessvolt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->battgenerallessvolt(), output);
  }

  // uint32 BattGeneralOverVolt = 17;
  if (this->battgeneralovervolt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->battgeneralovervolt(), output);
  }

  // uint32 BMSHardwareFault = 18;
  if (this->bmshardwarefault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->bmshardwarefault(), output);
  }

  // uint32 CANerror = 19;
  if (this->canerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->canerror(), output);
  }

  // uint32 CCsignConnetSts = 20;
  if (this->ccsignconnetsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->ccsignconnetsts(), output);
  }

  // uint32 PrechargeSts = 21;
  if (this->prechargests() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->prechargests(), output);
  }

  // uint32 BMSsts = 22;
  if (this->bmssts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->bmssts(), output);
  }

  // uint32 BackChgEnb = 23;
  if (this->backchgenb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->backchgenb(), output);
  }

  // uint32 WarmModel = 24;
  if (this->warmmodel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->warmmodel(), output);
  }

  // uint32 BalanceSts = 25;
  if (this->balancests() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->balancests(), output);
  }

  // uint32 SOCLow = 26;
  if (this->soclow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->soclow(), output);
  }

  // uint32 CurrentSensorFault = 27;
  if (this->currentsensorfault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->currentsensorfault(), output);
  }

  // uint32 TempSensorFault = 28;
  if (this->tempsensorfault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->tempsensorfault(), output);
  }

  // uint32 NegativeRelayAdhesion = 29;
  if (this->negativerelayadhesion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(29, this->negativerelayadhesion(), output);
  }

  // uint32 PrechgRelaySts = 30;
  if (this->prechgrelaysts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->prechgrelaysts(), output);
  }

  // uint32 NegativeRelaySts = 31;
  if (this->negativerelaysts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->negativerelaysts(), output);
  }

  // uint32 DCchgPositiveRelaySts = 32;
  if (this->dcchgpositiverelaysts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(32, this->dcchgpositiverelaysts(), output);
  }

  // uint32 DCchgGunOverTempFault = 33;
  if (this->dcchggunovertempfault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(33, this->dcchggunovertempfault(), output);
  }

  // uint32 CellCollectLineCutFault = 34;
  if (this->cellcollectlinecutfault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(34, this->cellcollectlinecutfault(), output);
  }

  // uint32 PrechgRelayAdhesion = 35;
  if (this->prechgrelayadhesion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(35, this->prechgrelayadhesion(), output);
  }

  // uint32 DCchgPositiveRelayAdhesion = 36;
  if (this->dcchgpositiverelayadhesion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(36, this->dcchgpositiverelayadhesion(), output);
  }

  // uint32 WakeUpType = 37;
  if (this->wakeuptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(37, this->wakeuptype(), output);
  }

  // uint32 BattTempImbalanceFault = 38;
  if (this->batttempimbalancefault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(38, this->batttempimbalancefault(), output);
  }

  // uint32 BattLessTempFault = 39;
  if (this->battlesstempfault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(39, this->battlesstempfault(), output);
  }

  // uint32 WarmSts = 40;
  if (this->warmsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(40, this->warmsts(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x18F412EF)
}

::google::protobuf::uint8* CanMsg_0x18F412EF::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x18F412EF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 BattOverTempFault = 2;
  if (this->battovertempfault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->battovertempfault(), target);
  }

  // uint32 InsulationFault = 3;
  if (this->insulationfault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->insulationfault(), target);
  }

  // uint32 CellLessVoltWarning = 4;
  if (this->celllessvoltwarning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->celllessvoltwarning(), target);
  }

  // uint32 CellOverVoltWarning = 5;
  if (this->cellovervoltwarning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->cellovervoltwarning(), target);
  }

  // uint32 BattLessElectWarning = 6;
  if (this->battlesselectwarning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->battlesselectwarning(), target);
  }

  // uint32 positiveRelayAdhesion = 7;
  if (this->positiverelayadhesion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->positiverelayadhesion(), target);
  }

  // uint32 PTCRelayAdhesion = 8;
  if (this->ptcrelayadhesion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->ptcrelayadhesion(), target);
  }

  // uint32 SOHWarning = 9;
  if (this->sohwarning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->sohwarning(), target);
  }

  // uint32 PositionRelaySts = 10;
  if (this->positionrelaysts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->positionrelaysts(), target);
  }

  // uint32 PTCRelaySts = 11;
  if (this->ptcrelaysts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->ptcrelaysts(), target);
  }

  // uint32 BattVoltImbalance = 12;
  if (this->battvoltimbalance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->battvoltimbalance(), target);
  }

  // uint32 DischgOverCurrent = 13;
  if (this->dischgovercurrent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->dischgovercurrent(), target);
  }

  // uint32 ChgOverCurrent = 14;
  if (this->chgovercurrent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->chgovercurrent(), target);
  }

  // uint32 ItselfCANerror = 15;
  if (this->itselfcanerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->itselfcanerror(), target);
  }

  // uint32 BattGeneralLessVolt = 16;
  if (this->battgenerallessvolt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->battgenerallessvolt(), target);
  }

  // uint32 BattGeneralOverVolt = 17;
  if (this->battgeneralovervolt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->battgeneralovervolt(), target);
  }

  // uint32 BMSHardwareFault = 18;
  if (this->bmshardwarefault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->bmshardwarefault(), target);
  }

  // uint32 CANerror = 19;
  if (this->canerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->canerror(), target);
  }

  // uint32 CCsignConnetSts = 20;
  if (this->ccsignconnetsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->ccsignconnetsts(), target);
  }

  // uint32 PrechargeSts = 21;
  if (this->prechargests() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->prechargests(), target);
  }

  // uint32 BMSsts = 22;
  if (this->bmssts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->bmssts(), target);
  }

  // uint32 BackChgEnb = 23;
  if (this->backchgenb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->backchgenb(), target);
  }

  // uint32 WarmModel = 24;
  if (this->warmmodel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->warmmodel(), target);
  }

  // uint32 BalanceSts = 25;
  if (this->balancests() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->balancests(), target);
  }

  // uint32 SOCLow = 26;
  if (this->soclow() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->soclow(), target);
  }

  // uint32 CurrentSensorFault = 27;
  if (this->currentsensorfault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->currentsensorfault(), target);
  }

  // uint32 TempSensorFault = 28;
  if (this->tempsensorfault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(28, this->tempsensorfault(), target);
  }

  // uint32 NegativeRelayAdhesion = 29;
  if (this->negativerelayadhesion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(29, this->negativerelayadhesion(), target);
  }

  // uint32 PrechgRelaySts = 30;
  if (this->prechgrelaysts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->prechgrelaysts(), target);
  }

  // uint32 NegativeRelaySts = 31;
  if (this->negativerelaysts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->negativerelaysts(), target);
  }

  // uint32 DCchgPositiveRelaySts = 32;
  if (this->dcchgpositiverelaysts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(32, this->dcchgpositiverelaysts(), target);
  }

  // uint32 DCchgGunOverTempFault = 33;
  if (this->dcchggunovertempfault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(33, this->dcchggunovertempfault(), target);
  }

  // uint32 CellCollectLineCutFault = 34;
  if (this->cellcollectlinecutfault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(34, this->cellcollectlinecutfault(), target);
  }

  // uint32 PrechgRelayAdhesion = 35;
  if (this->prechgrelayadhesion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(35, this->prechgrelayadhesion(), target);
  }

  // uint32 DCchgPositiveRelayAdhesion = 36;
  if (this->dcchgpositiverelayadhesion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(36, this->dcchgpositiverelayadhesion(), target);
  }

  // uint32 WakeUpType = 37;
  if (this->wakeuptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(37, this->wakeuptype(), target);
  }

  // uint32 BattTempImbalanceFault = 38;
  if (this->batttempimbalancefault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(38, this->batttempimbalancefault(), target);
  }

  // uint32 BattLessTempFault = 39;
  if (this->battlesstempfault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(39, this->battlesstempfault(), target);
  }

  // uint32 WarmSts = 40;
  if (this->warmsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(40, this->warmsts(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x18F412EF)
  return target;
}

size_t CanMsg_0x18F412EF::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x18F412EF)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 BattOverTempFault = 2;
  if (this->battovertempfault() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battovertempfault());
  }

  // uint32 InsulationFault = 3;
  if (this->insulationfault() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->insulationfault());
  }

  // uint32 CellLessVoltWarning = 4;
  if (this->celllessvoltwarning() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->celllessvoltwarning());
  }

  // uint32 CellOverVoltWarning = 5;
  if (this->cellovervoltwarning() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cellovervoltwarning());
  }

  // uint32 BattLessElectWarning = 6;
  if (this->battlesselectwarning() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battlesselectwarning());
  }

  // uint32 positiveRelayAdhesion = 7;
  if (this->positiverelayadhesion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->positiverelayadhesion());
  }

  // uint32 PTCRelayAdhesion = 8;
  if (this->ptcrelayadhesion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ptcrelayadhesion());
  }

  // uint32 SOHWarning = 9;
  if (this->sohwarning() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sohwarning());
  }

  // uint32 PositionRelaySts = 10;
  if (this->positionrelaysts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->positionrelaysts());
  }

  // uint32 PTCRelaySts = 11;
  if (this->ptcrelaysts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ptcrelaysts());
  }

  // uint32 BattVoltImbalance = 12;
  if (this->battvoltimbalance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battvoltimbalance());
  }

  // uint32 DischgOverCurrent = 13;
  if (this->dischgovercurrent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dischgovercurrent());
  }

  // uint32 ChgOverCurrent = 14;
  if (this->chgovercurrent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chgovercurrent());
  }

  // uint32 ItselfCANerror = 15;
  if (this->itselfcanerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itselfcanerror());
  }

  // uint32 BattGeneralLessVolt = 16;
  if (this->battgenerallessvolt() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battgenerallessvolt());
  }

  // uint32 BattGeneralOverVolt = 17;
  if (this->battgeneralovervolt() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battgeneralovervolt());
  }

  // uint32 BMSHardwareFault = 18;
  if (this->bmshardwarefault() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bmshardwarefault());
  }

  // uint32 CANerror = 19;
  if (this->canerror() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->canerror());
  }

  // uint32 CCsignConnetSts = 20;
  if (this->ccsignconnetsts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ccsignconnetsts());
  }

  // uint32 PrechargeSts = 21;
  if (this->prechargests() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prechargests());
  }

  // uint32 BMSsts = 22;
  if (this->bmssts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bmssts());
  }

  // uint32 BackChgEnb = 23;
  if (this->backchgenb() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->backchgenb());
  }

  // uint32 WarmModel = 24;
  if (this->warmmodel() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->warmmodel());
  }

  // uint32 BalanceSts = 25;
  if (this->balancests() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->balancests());
  }

  // uint32 SOCLow = 26;
  if (this->soclow() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->soclow());
  }

  // uint32 CurrentSensorFault = 27;
  if (this->currentsensorfault() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->currentsensorfault());
  }

  // uint32 TempSensorFault = 28;
  if (this->tempsensorfault() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tempsensorfault());
  }

  // uint32 NegativeRelayAdhesion = 29;
  if (this->negativerelayadhesion() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->negativerelayadhesion());
  }

  // uint32 PrechgRelaySts = 30;
  if (this->prechgrelaysts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prechgrelaysts());
  }

  // uint32 NegativeRelaySts = 31;
  if (this->negativerelaysts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->negativerelaysts());
  }

  // uint32 DCchgPositiveRelaySts = 32;
  if (this->dcchgpositiverelaysts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dcchgpositiverelaysts());
  }

  // uint32 DCchgGunOverTempFault = 33;
  if (this->dcchggunovertempfault() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dcchggunovertempfault());
  }

  // uint32 CellCollectLineCutFault = 34;
  if (this->cellcollectlinecutfault() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cellcollectlinecutfault());
  }

  // uint32 PrechgRelayAdhesion = 35;
  if (this->prechgrelayadhesion() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prechgrelayadhesion());
  }

  // uint32 DCchgPositiveRelayAdhesion = 36;
  if (this->dcchgpositiverelayadhesion() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dcchgpositiverelayadhesion());
  }

  // uint32 WakeUpType = 37;
  if (this->wakeuptype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wakeuptype());
  }

  // uint32 BattTempImbalanceFault = 38;
  if (this->batttempimbalancefault() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->batttempimbalancefault());
  }

  // uint32 BattLessTempFault = 39;
  if (this->battlesstempfault() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battlesstempfault());
  }

  // uint32 WarmSts = 40;
  if (this->warmsts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->warmsts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x18F412EF::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x18F412EF)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x18F412EF* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x18F412EF>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x18F412EF)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x18F412EF)
    MergeFrom(*source);
  }
}

void CanMsg_0x18F412EF::MergeFrom(const CanMsg_0x18F412EF& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x18F412EF)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.battovertempfault() != 0) {
    set_battovertempfault(from.battovertempfault());
  }
  if (from.insulationfault() != 0) {
    set_insulationfault(from.insulationfault());
  }
  if (from.celllessvoltwarning() != 0) {
    set_celllessvoltwarning(from.celllessvoltwarning());
  }
  if (from.cellovervoltwarning() != 0) {
    set_cellovervoltwarning(from.cellovervoltwarning());
  }
  if (from.battlesselectwarning() != 0) {
    set_battlesselectwarning(from.battlesselectwarning());
  }
  if (from.positiverelayadhesion() != 0) {
    set_positiverelayadhesion(from.positiverelayadhesion());
  }
  if (from.ptcrelayadhesion() != 0) {
    set_ptcrelayadhesion(from.ptcrelayadhesion());
  }
  if (from.sohwarning() != 0) {
    set_sohwarning(from.sohwarning());
  }
  if (from.positionrelaysts() != 0) {
    set_positionrelaysts(from.positionrelaysts());
  }
  if (from.ptcrelaysts() != 0) {
    set_ptcrelaysts(from.ptcrelaysts());
  }
  if (from.battvoltimbalance() != 0) {
    set_battvoltimbalance(from.battvoltimbalance());
  }
  if (from.dischgovercurrent() != 0) {
    set_dischgovercurrent(from.dischgovercurrent());
  }
  if (from.chgovercurrent() != 0) {
    set_chgovercurrent(from.chgovercurrent());
  }
  if (from.itselfcanerror() != 0) {
    set_itselfcanerror(from.itselfcanerror());
  }
  if (from.battgenerallessvolt() != 0) {
    set_battgenerallessvolt(from.battgenerallessvolt());
  }
  if (from.battgeneralovervolt() != 0) {
    set_battgeneralovervolt(from.battgeneralovervolt());
  }
  if (from.bmshardwarefault() != 0) {
    set_bmshardwarefault(from.bmshardwarefault());
  }
  if (from.canerror() != 0) {
    set_canerror(from.canerror());
  }
  if (from.ccsignconnetsts() != 0) {
    set_ccsignconnetsts(from.ccsignconnetsts());
  }
  if (from.prechargests() != 0) {
    set_prechargests(from.prechargests());
  }
  if (from.bmssts() != 0) {
    set_bmssts(from.bmssts());
  }
  if (from.backchgenb() != 0) {
    set_backchgenb(from.backchgenb());
  }
  if (from.warmmodel() != 0) {
    set_warmmodel(from.warmmodel());
  }
  if (from.balancests() != 0) {
    set_balancests(from.balancests());
  }
  if (from.soclow() != 0) {
    set_soclow(from.soclow());
  }
  if (from.currentsensorfault() != 0) {
    set_currentsensorfault(from.currentsensorfault());
  }
  if (from.tempsensorfault() != 0) {
    set_tempsensorfault(from.tempsensorfault());
  }
  if (from.negativerelayadhesion() != 0) {
    set_negativerelayadhesion(from.negativerelayadhesion());
  }
  if (from.prechgrelaysts() != 0) {
    set_prechgrelaysts(from.prechgrelaysts());
  }
  if (from.negativerelaysts() != 0) {
    set_negativerelaysts(from.negativerelaysts());
  }
  if (from.dcchgpositiverelaysts() != 0) {
    set_dcchgpositiverelaysts(from.dcchgpositiverelaysts());
  }
  if (from.dcchggunovertempfault() != 0) {
    set_dcchggunovertempfault(from.dcchggunovertempfault());
  }
  if (from.cellcollectlinecutfault() != 0) {
    set_cellcollectlinecutfault(from.cellcollectlinecutfault());
  }
  if (from.prechgrelayadhesion() != 0) {
    set_prechgrelayadhesion(from.prechgrelayadhesion());
  }
  if (from.dcchgpositiverelayadhesion() != 0) {
    set_dcchgpositiverelayadhesion(from.dcchgpositiverelayadhesion());
  }
  if (from.wakeuptype() != 0) {
    set_wakeuptype(from.wakeuptype());
  }
  if (from.batttempimbalancefault() != 0) {
    set_batttempimbalancefault(from.batttempimbalancefault());
  }
  if (from.battlesstempfault() != 0) {
    set_battlesstempfault(from.battlesstempfault());
  }
  if (from.warmsts() != 0) {
    set_warmsts(from.warmsts());
  }
}

void CanMsg_0x18F412EF::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x18F412EF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x18F412EF::CopyFrom(const CanMsg_0x18F412EF& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x18F412EF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x18F412EF::IsInitialized() const {
  return true;
}

void CanMsg_0x18F412EF::Swap(CanMsg_0x18F412EF* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x18F412EF::InternalSwap(CanMsg_0x18F412EF* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(battovertempfault_, other->battovertempfault_);
  std::swap(insulationfault_, other->insulationfault_);
  std::swap(celllessvoltwarning_, other->celllessvoltwarning_);
  std::swap(cellovervoltwarning_, other->cellovervoltwarning_);
  std::swap(battlesselectwarning_, other->battlesselectwarning_);
  std::swap(positiverelayadhesion_, other->positiverelayadhesion_);
  std::swap(ptcrelayadhesion_, other->ptcrelayadhesion_);
  std::swap(sohwarning_, other->sohwarning_);
  std::swap(positionrelaysts_, other->positionrelaysts_);
  std::swap(ptcrelaysts_, other->ptcrelaysts_);
  std::swap(battvoltimbalance_, other->battvoltimbalance_);
  std::swap(dischgovercurrent_, other->dischgovercurrent_);
  std::swap(chgovercurrent_, other->chgovercurrent_);
  std::swap(itselfcanerror_, other->itselfcanerror_);
  std::swap(battgenerallessvolt_, other->battgenerallessvolt_);
  std::swap(battgeneralovervolt_, other->battgeneralovervolt_);
  std::swap(bmshardwarefault_, other->bmshardwarefault_);
  std::swap(canerror_, other->canerror_);
  std::swap(ccsignconnetsts_, other->ccsignconnetsts_);
  std::swap(prechargests_, other->prechargests_);
  std::swap(bmssts_, other->bmssts_);
  std::swap(backchgenb_, other->backchgenb_);
  std::swap(warmmodel_, other->warmmodel_);
  std::swap(balancests_, other->balancests_);
  std::swap(soclow_, other->soclow_);
  std::swap(currentsensorfault_, other->currentsensorfault_);
  std::swap(tempsensorfault_, other->tempsensorfault_);
  std::swap(negativerelayadhesion_, other->negativerelayadhesion_);
  std::swap(prechgrelaysts_, other->prechgrelaysts_);
  std::swap(negativerelaysts_, other->negativerelaysts_);
  std::swap(dcchgpositiverelaysts_, other->dcchgpositiverelaysts_);
  std::swap(dcchggunovertempfault_, other->dcchggunovertempfault_);
  std::swap(cellcollectlinecutfault_, other->cellcollectlinecutfault_);
  std::swap(prechgrelayadhesion_, other->prechgrelayadhesion_);
  std::swap(dcchgpositiverelayadhesion_, other->dcchgpositiverelayadhesion_);
  std::swap(wakeuptype_, other->wakeuptype_);
  std::swap(batttempimbalancefault_, other->batttempimbalancefault_);
  std::swap(battlesstempfault_, other->battlesstempfault_);
  std::swap(warmsts_, other->warmsts_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x18F412EF::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x18F412EF

// bool isValid = 1;
void CanMsg_0x18F412EF::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x18F412EF::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.isValid)
  return isvalid_;
}
void CanMsg_0x18F412EF::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.isValid)
}

// uint32 BattOverTempFault = 2;
void CanMsg_0x18F412EF::clear_battovertempfault() {
  battovertempfault_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::battovertempfault() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.BattOverTempFault)
  return battovertempfault_;
}
void CanMsg_0x18F412EF::set_battovertempfault(::google::protobuf::uint32 value) {
  
  battovertempfault_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.BattOverTempFault)
}

// uint32 InsulationFault = 3;
void CanMsg_0x18F412EF::clear_insulationfault() {
  insulationfault_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::insulationfault() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.InsulationFault)
  return insulationfault_;
}
void CanMsg_0x18F412EF::set_insulationfault(::google::protobuf::uint32 value) {
  
  insulationfault_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.InsulationFault)
}

// uint32 CellLessVoltWarning = 4;
void CanMsg_0x18F412EF::clear_celllessvoltwarning() {
  celllessvoltwarning_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::celllessvoltwarning() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.CellLessVoltWarning)
  return celllessvoltwarning_;
}
void CanMsg_0x18F412EF::set_celllessvoltwarning(::google::protobuf::uint32 value) {
  
  celllessvoltwarning_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.CellLessVoltWarning)
}

// uint32 CellOverVoltWarning = 5;
void CanMsg_0x18F412EF::clear_cellovervoltwarning() {
  cellovervoltwarning_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::cellovervoltwarning() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.CellOverVoltWarning)
  return cellovervoltwarning_;
}
void CanMsg_0x18F412EF::set_cellovervoltwarning(::google::protobuf::uint32 value) {
  
  cellovervoltwarning_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.CellOverVoltWarning)
}

// uint32 BattLessElectWarning = 6;
void CanMsg_0x18F412EF::clear_battlesselectwarning() {
  battlesselectwarning_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::battlesselectwarning() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.BattLessElectWarning)
  return battlesselectwarning_;
}
void CanMsg_0x18F412EF::set_battlesselectwarning(::google::protobuf::uint32 value) {
  
  battlesselectwarning_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.BattLessElectWarning)
}

// uint32 positiveRelayAdhesion = 7;
void CanMsg_0x18F412EF::clear_positiverelayadhesion() {
  positiverelayadhesion_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::positiverelayadhesion() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.positiveRelayAdhesion)
  return positiverelayadhesion_;
}
void CanMsg_0x18F412EF::set_positiverelayadhesion(::google::protobuf::uint32 value) {
  
  positiverelayadhesion_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.positiveRelayAdhesion)
}

// uint32 PTCRelayAdhesion = 8;
void CanMsg_0x18F412EF::clear_ptcrelayadhesion() {
  ptcrelayadhesion_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::ptcrelayadhesion() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.PTCRelayAdhesion)
  return ptcrelayadhesion_;
}
void CanMsg_0x18F412EF::set_ptcrelayadhesion(::google::protobuf::uint32 value) {
  
  ptcrelayadhesion_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.PTCRelayAdhesion)
}

// uint32 SOHWarning = 9;
void CanMsg_0x18F412EF::clear_sohwarning() {
  sohwarning_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::sohwarning() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.SOHWarning)
  return sohwarning_;
}
void CanMsg_0x18F412EF::set_sohwarning(::google::protobuf::uint32 value) {
  
  sohwarning_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.SOHWarning)
}

// uint32 PositionRelaySts = 10;
void CanMsg_0x18F412EF::clear_positionrelaysts() {
  positionrelaysts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::positionrelaysts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.PositionRelaySts)
  return positionrelaysts_;
}
void CanMsg_0x18F412EF::set_positionrelaysts(::google::protobuf::uint32 value) {
  
  positionrelaysts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.PositionRelaySts)
}

// uint32 PTCRelaySts = 11;
void CanMsg_0x18F412EF::clear_ptcrelaysts() {
  ptcrelaysts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::ptcrelaysts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.PTCRelaySts)
  return ptcrelaysts_;
}
void CanMsg_0x18F412EF::set_ptcrelaysts(::google::protobuf::uint32 value) {
  
  ptcrelaysts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.PTCRelaySts)
}

// uint32 BattVoltImbalance = 12;
void CanMsg_0x18F412EF::clear_battvoltimbalance() {
  battvoltimbalance_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::battvoltimbalance() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.BattVoltImbalance)
  return battvoltimbalance_;
}
void CanMsg_0x18F412EF::set_battvoltimbalance(::google::protobuf::uint32 value) {
  
  battvoltimbalance_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.BattVoltImbalance)
}

// uint32 DischgOverCurrent = 13;
void CanMsg_0x18F412EF::clear_dischgovercurrent() {
  dischgovercurrent_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::dischgovercurrent() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.DischgOverCurrent)
  return dischgovercurrent_;
}
void CanMsg_0x18F412EF::set_dischgovercurrent(::google::protobuf::uint32 value) {
  
  dischgovercurrent_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.DischgOverCurrent)
}

// uint32 ChgOverCurrent = 14;
void CanMsg_0x18F412EF::clear_chgovercurrent() {
  chgovercurrent_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::chgovercurrent() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.ChgOverCurrent)
  return chgovercurrent_;
}
void CanMsg_0x18F412EF::set_chgovercurrent(::google::protobuf::uint32 value) {
  
  chgovercurrent_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.ChgOverCurrent)
}

// uint32 ItselfCANerror = 15;
void CanMsg_0x18F412EF::clear_itselfcanerror() {
  itselfcanerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::itselfcanerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.ItselfCANerror)
  return itselfcanerror_;
}
void CanMsg_0x18F412EF::set_itselfcanerror(::google::protobuf::uint32 value) {
  
  itselfcanerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.ItselfCANerror)
}

// uint32 BattGeneralLessVolt = 16;
void CanMsg_0x18F412EF::clear_battgenerallessvolt() {
  battgenerallessvolt_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::battgenerallessvolt() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.BattGeneralLessVolt)
  return battgenerallessvolt_;
}
void CanMsg_0x18F412EF::set_battgenerallessvolt(::google::protobuf::uint32 value) {
  
  battgenerallessvolt_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.BattGeneralLessVolt)
}

// uint32 BattGeneralOverVolt = 17;
void CanMsg_0x18F412EF::clear_battgeneralovervolt() {
  battgeneralovervolt_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::battgeneralovervolt() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.BattGeneralOverVolt)
  return battgeneralovervolt_;
}
void CanMsg_0x18F412EF::set_battgeneralovervolt(::google::protobuf::uint32 value) {
  
  battgeneralovervolt_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.BattGeneralOverVolt)
}

// uint32 BMSHardwareFault = 18;
void CanMsg_0x18F412EF::clear_bmshardwarefault() {
  bmshardwarefault_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::bmshardwarefault() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.BMSHardwareFault)
  return bmshardwarefault_;
}
void CanMsg_0x18F412EF::set_bmshardwarefault(::google::protobuf::uint32 value) {
  
  bmshardwarefault_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.BMSHardwareFault)
}

// uint32 CANerror = 19;
void CanMsg_0x18F412EF::clear_canerror() {
  canerror_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::canerror() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.CANerror)
  return canerror_;
}
void CanMsg_0x18F412EF::set_canerror(::google::protobuf::uint32 value) {
  
  canerror_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.CANerror)
}

// uint32 CCsignConnetSts = 20;
void CanMsg_0x18F412EF::clear_ccsignconnetsts() {
  ccsignconnetsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::ccsignconnetsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.CCsignConnetSts)
  return ccsignconnetsts_;
}
void CanMsg_0x18F412EF::set_ccsignconnetsts(::google::protobuf::uint32 value) {
  
  ccsignconnetsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.CCsignConnetSts)
}

// uint32 PrechargeSts = 21;
void CanMsg_0x18F412EF::clear_prechargests() {
  prechargests_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::prechargests() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.PrechargeSts)
  return prechargests_;
}
void CanMsg_0x18F412EF::set_prechargests(::google::protobuf::uint32 value) {
  
  prechargests_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.PrechargeSts)
}

// uint32 BMSsts = 22;
void CanMsg_0x18F412EF::clear_bmssts() {
  bmssts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::bmssts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.BMSsts)
  return bmssts_;
}
void CanMsg_0x18F412EF::set_bmssts(::google::protobuf::uint32 value) {
  
  bmssts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.BMSsts)
}

// uint32 BackChgEnb = 23;
void CanMsg_0x18F412EF::clear_backchgenb() {
  backchgenb_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::backchgenb() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.BackChgEnb)
  return backchgenb_;
}
void CanMsg_0x18F412EF::set_backchgenb(::google::protobuf::uint32 value) {
  
  backchgenb_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.BackChgEnb)
}

// uint32 WarmModel = 24;
void CanMsg_0x18F412EF::clear_warmmodel() {
  warmmodel_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::warmmodel() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.WarmModel)
  return warmmodel_;
}
void CanMsg_0x18F412EF::set_warmmodel(::google::protobuf::uint32 value) {
  
  warmmodel_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.WarmModel)
}

// uint32 BalanceSts = 25;
void CanMsg_0x18F412EF::clear_balancests() {
  balancests_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::balancests() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.BalanceSts)
  return balancests_;
}
void CanMsg_0x18F412EF::set_balancests(::google::protobuf::uint32 value) {
  
  balancests_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.BalanceSts)
}

// uint32 SOCLow = 26;
void CanMsg_0x18F412EF::clear_soclow() {
  soclow_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::soclow() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.SOCLow)
  return soclow_;
}
void CanMsg_0x18F412EF::set_soclow(::google::protobuf::uint32 value) {
  
  soclow_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.SOCLow)
}

// uint32 CurrentSensorFault = 27;
void CanMsg_0x18F412EF::clear_currentsensorfault() {
  currentsensorfault_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::currentsensorfault() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.CurrentSensorFault)
  return currentsensorfault_;
}
void CanMsg_0x18F412EF::set_currentsensorfault(::google::protobuf::uint32 value) {
  
  currentsensorfault_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.CurrentSensorFault)
}

// uint32 TempSensorFault = 28;
void CanMsg_0x18F412EF::clear_tempsensorfault() {
  tempsensorfault_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::tempsensorfault() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.TempSensorFault)
  return tempsensorfault_;
}
void CanMsg_0x18F412EF::set_tempsensorfault(::google::protobuf::uint32 value) {
  
  tempsensorfault_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.TempSensorFault)
}

// uint32 NegativeRelayAdhesion = 29;
void CanMsg_0x18F412EF::clear_negativerelayadhesion() {
  negativerelayadhesion_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::negativerelayadhesion() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.NegativeRelayAdhesion)
  return negativerelayadhesion_;
}
void CanMsg_0x18F412EF::set_negativerelayadhesion(::google::protobuf::uint32 value) {
  
  negativerelayadhesion_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.NegativeRelayAdhesion)
}

// uint32 PrechgRelaySts = 30;
void CanMsg_0x18F412EF::clear_prechgrelaysts() {
  prechgrelaysts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::prechgrelaysts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.PrechgRelaySts)
  return prechgrelaysts_;
}
void CanMsg_0x18F412EF::set_prechgrelaysts(::google::protobuf::uint32 value) {
  
  prechgrelaysts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.PrechgRelaySts)
}

// uint32 NegativeRelaySts = 31;
void CanMsg_0x18F412EF::clear_negativerelaysts() {
  negativerelaysts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::negativerelaysts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.NegativeRelaySts)
  return negativerelaysts_;
}
void CanMsg_0x18F412EF::set_negativerelaysts(::google::protobuf::uint32 value) {
  
  negativerelaysts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.NegativeRelaySts)
}

// uint32 DCchgPositiveRelaySts = 32;
void CanMsg_0x18F412EF::clear_dcchgpositiverelaysts() {
  dcchgpositiverelaysts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::dcchgpositiverelaysts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.DCchgPositiveRelaySts)
  return dcchgpositiverelaysts_;
}
void CanMsg_0x18F412EF::set_dcchgpositiverelaysts(::google::protobuf::uint32 value) {
  
  dcchgpositiverelaysts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.DCchgPositiveRelaySts)
}

// uint32 DCchgGunOverTempFault = 33;
void CanMsg_0x18F412EF::clear_dcchggunovertempfault() {
  dcchggunovertempfault_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::dcchggunovertempfault() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.DCchgGunOverTempFault)
  return dcchggunovertempfault_;
}
void CanMsg_0x18F412EF::set_dcchggunovertempfault(::google::protobuf::uint32 value) {
  
  dcchggunovertempfault_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.DCchgGunOverTempFault)
}

// uint32 CellCollectLineCutFault = 34;
void CanMsg_0x18F412EF::clear_cellcollectlinecutfault() {
  cellcollectlinecutfault_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::cellcollectlinecutfault() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.CellCollectLineCutFault)
  return cellcollectlinecutfault_;
}
void CanMsg_0x18F412EF::set_cellcollectlinecutfault(::google::protobuf::uint32 value) {
  
  cellcollectlinecutfault_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.CellCollectLineCutFault)
}

// uint32 PrechgRelayAdhesion = 35;
void CanMsg_0x18F412EF::clear_prechgrelayadhesion() {
  prechgrelayadhesion_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::prechgrelayadhesion() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.PrechgRelayAdhesion)
  return prechgrelayadhesion_;
}
void CanMsg_0x18F412EF::set_prechgrelayadhesion(::google::protobuf::uint32 value) {
  
  prechgrelayadhesion_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.PrechgRelayAdhesion)
}

// uint32 DCchgPositiveRelayAdhesion = 36;
void CanMsg_0x18F412EF::clear_dcchgpositiverelayadhesion() {
  dcchgpositiverelayadhesion_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::dcchgpositiverelayadhesion() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.DCchgPositiveRelayAdhesion)
  return dcchgpositiverelayadhesion_;
}
void CanMsg_0x18F412EF::set_dcchgpositiverelayadhesion(::google::protobuf::uint32 value) {
  
  dcchgpositiverelayadhesion_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.DCchgPositiveRelayAdhesion)
}

// uint32 WakeUpType = 37;
void CanMsg_0x18F412EF::clear_wakeuptype() {
  wakeuptype_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::wakeuptype() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.WakeUpType)
  return wakeuptype_;
}
void CanMsg_0x18F412EF::set_wakeuptype(::google::protobuf::uint32 value) {
  
  wakeuptype_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.WakeUpType)
}

// uint32 BattTempImbalanceFault = 38;
void CanMsg_0x18F412EF::clear_batttempimbalancefault() {
  batttempimbalancefault_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::batttempimbalancefault() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.BattTempImbalanceFault)
  return batttempimbalancefault_;
}
void CanMsg_0x18F412EF::set_batttempimbalancefault(::google::protobuf::uint32 value) {
  
  batttempimbalancefault_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.BattTempImbalanceFault)
}

// uint32 BattLessTempFault = 39;
void CanMsg_0x18F412EF::clear_battlesstempfault() {
  battlesstempfault_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::battlesstempfault() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.BattLessTempFault)
  return battlesstempfault_;
}
void CanMsg_0x18F412EF::set_battlesstempfault(::google::protobuf::uint32 value) {
  
  battlesstempfault_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.BattLessTempFault)
}

// uint32 WarmSts = 40;
void CanMsg_0x18F412EF::clear_warmsts() {
  warmsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F412EF::warmsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F412EF.WarmSts)
  return warmsts_;
}
void CanMsg_0x18F412EF::set_warmsts(::google::protobuf::uint32 value) {
  
  warmsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F412EF.WarmSts)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x18F413EF::kIsValidFieldNumber;
const int CanMsg_0x18F413EF::kGeneralVoltFieldNumber;
const int CanMsg_0x18F413EF::kGeneralCurrentFieldNumber;
const int CanMsg_0x18F413EF::kSOCFieldNumber;
const int CanMsg_0x18F413EF::kBattSerialDataFieldNumber;
const int CanMsg_0x18F413EF::kCellVoltSensorFaultFieldNumber;
const int CanMsg_0x18F413EF::kGeneralVoltSensorFaultFieldNumber;
const int CanMsg_0x18F413EF::kLess12VVoltFieldNumber;
const int CanMsg_0x18F413EF::kOver12VVoltFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x18F413EF::CanMsg_0x18F413EF()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x18F413EF)
}
CanMsg_0x18F413EF::CanMsg_0x18F413EF(const CanMsg_0x18F413EF& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&over12vvolt_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(over12vvolt_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x18F413EF)
}

void CanMsg_0x18F413EF::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&over12vvolt_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(over12vvolt_));
  _cached_size_ = 0;
}

CanMsg_0x18F413EF::~CanMsg_0x18F413EF() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x18F413EF)
  SharedDtor();
}

void CanMsg_0x18F413EF::SharedDtor() {
}

void CanMsg_0x18F413EF::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x18F413EF::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x18F413EF& CanMsg_0x18F413EF::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x18F413EF* CanMsg_0x18F413EF::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x18F413EF* n = new CanMsg_0x18F413EF;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x18F413EF::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x18F413EF)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&over12vvolt_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(over12vvolt_));
}

bool CanMsg_0x18F413EF::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x18F413EF)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 GeneralVolt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &generalvolt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 GeneralCurrent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &generalcurrent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SOC = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &soc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BattSerialData = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battserialdata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CellVoltSensorFault = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cellvoltsensorfault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 GeneralVoltSensorFault = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &generalvoltsensorfault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Less12VVolt = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &less12vvolt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Over12VVolt = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &over12vvolt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x18F413EF)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x18F413EF)
  return false;
#undef DO_
}

void CanMsg_0x18F413EF::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x18F413EF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 GeneralVolt = 2;
  if (this->generalvolt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->generalvolt(), output);
  }

  // uint32 GeneralCurrent = 3;
  if (this->generalcurrent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->generalcurrent(), output);
  }

  // uint32 SOC = 4;
  if (this->soc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->soc(), output);
  }

  // uint32 BattSerialData = 5;
  if (this->battserialdata() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->battserialdata(), output);
  }

  // uint32 CellVoltSensorFault = 6;
  if (this->cellvoltsensorfault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->cellvoltsensorfault(), output);
  }

  // uint32 GeneralVoltSensorFault = 7;
  if (this->generalvoltsensorfault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->generalvoltsensorfault(), output);
  }

  // uint32 Less12VVolt = 8;
  if (this->less12vvolt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->less12vvolt(), output);
  }

  // uint32 Over12VVolt = 9;
  if (this->over12vvolt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->over12vvolt(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x18F413EF)
}

::google::protobuf::uint8* CanMsg_0x18F413EF::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x18F413EF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 GeneralVolt = 2;
  if (this->generalvolt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->generalvolt(), target);
  }

  // uint32 GeneralCurrent = 3;
  if (this->generalcurrent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->generalcurrent(), target);
  }

  // uint32 SOC = 4;
  if (this->soc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->soc(), target);
  }

  // uint32 BattSerialData = 5;
  if (this->battserialdata() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->battserialdata(), target);
  }

  // uint32 CellVoltSensorFault = 6;
  if (this->cellvoltsensorfault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->cellvoltsensorfault(), target);
  }

  // uint32 GeneralVoltSensorFault = 7;
  if (this->generalvoltsensorfault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->generalvoltsensorfault(), target);
  }

  // uint32 Less12VVolt = 8;
  if (this->less12vvolt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->less12vvolt(), target);
  }

  // uint32 Over12VVolt = 9;
  if (this->over12vvolt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->over12vvolt(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x18F413EF)
  return target;
}

size_t CanMsg_0x18F413EF::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x18F413EF)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 GeneralVolt = 2;
  if (this->generalvolt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->generalvolt());
  }

  // uint32 GeneralCurrent = 3;
  if (this->generalcurrent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->generalcurrent());
  }

  // uint32 SOC = 4;
  if (this->soc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->soc());
  }

  // uint32 BattSerialData = 5;
  if (this->battserialdata() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battserialdata());
  }

  // uint32 CellVoltSensorFault = 6;
  if (this->cellvoltsensorfault() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cellvoltsensorfault());
  }

  // uint32 GeneralVoltSensorFault = 7;
  if (this->generalvoltsensorfault() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->generalvoltsensorfault());
  }

  // uint32 Less12VVolt = 8;
  if (this->less12vvolt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->less12vvolt());
  }

  // uint32 Over12VVolt = 9;
  if (this->over12vvolt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->over12vvolt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x18F413EF::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x18F413EF)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x18F413EF* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x18F413EF>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x18F413EF)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x18F413EF)
    MergeFrom(*source);
  }
}

void CanMsg_0x18F413EF::MergeFrom(const CanMsg_0x18F413EF& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x18F413EF)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.generalvolt() != 0) {
    set_generalvolt(from.generalvolt());
  }
  if (from.generalcurrent() != 0) {
    set_generalcurrent(from.generalcurrent());
  }
  if (from.soc() != 0) {
    set_soc(from.soc());
  }
  if (from.battserialdata() != 0) {
    set_battserialdata(from.battserialdata());
  }
  if (from.cellvoltsensorfault() != 0) {
    set_cellvoltsensorfault(from.cellvoltsensorfault());
  }
  if (from.generalvoltsensorfault() != 0) {
    set_generalvoltsensorfault(from.generalvoltsensorfault());
  }
  if (from.less12vvolt() != 0) {
    set_less12vvolt(from.less12vvolt());
  }
  if (from.over12vvolt() != 0) {
    set_over12vvolt(from.over12vvolt());
  }
}

void CanMsg_0x18F413EF::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x18F413EF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x18F413EF::CopyFrom(const CanMsg_0x18F413EF& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x18F413EF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x18F413EF::IsInitialized() const {
  return true;
}

void CanMsg_0x18F413EF::Swap(CanMsg_0x18F413EF* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x18F413EF::InternalSwap(CanMsg_0x18F413EF* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(generalvolt_, other->generalvolt_);
  std::swap(generalcurrent_, other->generalcurrent_);
  std::swap(soc_, other->soc_);
  std::swap(battserialdata_, other->battserialdata_);
  std::swap(cellvoltsensorfault_, other->cellvoltsensorfault_);
  std::swap(generalvoltsensorfault_, other->generalvoltsensorfault_);
  std::swap(less12vvolt_, other->less12vvolt_);
  std::swap(over12vvolt_, other->over12vvolt_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x18F413EF::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x18F413EF

// bool isValid = 1;
void CanMsg_0x18F413EF::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x18F413EF::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F413EF.isValid)
  return isvalid_;
}
void CanMsg_0x18F413EF::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F413EF.isValid)
}

// uint32 GeneralVolt = 2;
void CanMsg_0x18F413EF::clear_generalvolt() {
  generalvolt_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F413EF::generalvolt() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F413EF.GeneralVolt)
  return generalvolt_;
}
void CanMsg_0x18F413EF::set_generalvolt(::google::protobuf::uint32 value) {
  
  generalvolt_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F413EF.GeneralVolt)
}

// uint32 GeneralCurrent = 3;
void CanMsg_0x18F413EF::clear_generalcurrent() {
  generalcurrent_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F413EF::generalcurrent() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F413EF.GeneralCurrent)
  return generalcurrent_;
}
void CanMsg_0x18F413EF::set_generalcurrent(::google::protobuf::uint32 value) {
  
  generalcurrent_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F413EF.GeneralCurrent)
}

// uint32 SOC = 4;
void CanMsg_0x18F413EF::clear_soc() {
  soc_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F413EF::soc() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F413EF.SOC)
  return soc_;
}
void CanMsg_0x18F413EF::set_soc(::google::protobuf::uint32 value) {
  
  soc_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F413EF.SOC)
}

// uint32 BattSerialData = 5;
void CanMsg_0x18F413EF::clear_battserialdata() {
  battserialdata_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F413EF::battserialdata() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F413EF.BattSerialData)
  return battserialdata_;
}
void CanMsg_0x18F413EF::set_battserialdata(::google::protobuf::uint32 value) {
  
  battserialdata_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F413EF.BattSerialData)
}

// uint32 CellVoltSensorFault = 6;
void CanMsg_0x18F413EF::clear_cellvoltsensorfault() {
  cellvoltsensorfault_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F413EF::cellvoltsensorfault() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F413EF.CellVoltSensorFault)
  return cellvoltsensorfault_;
}
void CanMsg_0x18F413EF::set_cellvoltsensorfault(::google::protobuf::uint32 value) {
  
  cellvoltsensorfault_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F413EF.CellVoltSensorFault)
}

// uint32 GeneralVoltSensorFault = 7;
void CanMsg_0x18F413EF::clear_generalvoltsensorfault() {
  generalvoltsensorfault_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F413EF::generalvoltsensorfault() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F413EF.GeneralVoltSensorFault)
  return generalvoltsensorfault_;
}
void CanMsg_0x18F413EF::set_generalvoltsensorfault(::google::protobuf::uint32 value) {
  
  generalvoltsensorfault_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F413EF.GeneralVoltSensorFault)
}

// uint32 Less12VVolt = 8;
void CanMsg_0x18F413EF::clear_less12vvolt() {
  less12vvolt_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F413EF::less12vvolt() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F413EF.Less12VVolt)
  return less12vvolt_;
}
void CanMsg_0x18F413EF::set_less12vvolt(::google::protobuf::uint32 value) {
  
  less12vvolt_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F413EF.Less12VVolt)
}

// uint32 Over12VVolt = 9;
void CanMsg_0x18F413EF::clear_over12vvolt() {
  over12vvolt_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F413EF::over12vvolt() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F413EF.Over12VVolt)
  return over12vvolt_;
}
void CanMsg_0x18F413EF::set_over12vvolt(::google::protobuf::uint32 value) {
  
  over12vvolt_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F413EF.Over12VVolt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x18F433EF::kIsValidFieldNumber;
const int CanMsg_0x18F433EF::kBattMaxTempFieldNumber;
const int CanMsg_0x18F433EF::kBattMaxTempCodeFieldNumber;
const int CanMsg_0x18F433EF::kBattMinTempFieldNumber;
const int CanMsg_0x18F433EF::kBattMinTempCodeFieldNumber;
const int CanMsg_0x18F433EF::kDCchgGunBaseTemp0FieldNumber;
const int CanMsg_0x18F433EF::kDCchgGunBaseTemp1FieldNumber;
const int CanMsg_0x18F433EF::kAverageTempFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x18F433EF::CanMsg_0x18F433EF()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x18F433EF)
}
CanMsg_0x18F433EF::CanMsg_0x18F433EF(const CanMsg_0x18F433EF& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&averagetemp_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(averagetemp_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x18F433EF)
}

void CanMsg_0x18F433EF::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&averagetemp_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(averagetemp_));
  _cached_size_ = 0;
}

CanMsg_0x18F433EF::~CanMsg_0x18F433EF() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x18F433EF)
  SharedDtor();
}

void CanMsg_0x18F433EF::SharedDtor() {
}

void CanMsg_0x18F433EF::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x18F433EF::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x18F433EF& CanMsg_0x18F433EF::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x18F433EF* CanMsg_0x18F433EF::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x18F433EF* n = new CanMsg_0x18F433EF;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x18F433EF::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x18F433EF)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&averagetemp_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(averagetemp_));
}

bool CanMsg_0x18F433EF::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x18F433EF)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BattMaxTemp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battmaxtemp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BattMaxTempCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battmaxtempcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BattMinTemp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battmintemp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BattMinTempCode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battmintempcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DCchgGunBaseTemp0 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dcchggunbasetemp0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DCchgGunBaseTemp1 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dcchggunbasetemp1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 AverageTemp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &averagetemp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x18F433EF)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x18F433EF)
  return false;
#undef DO_
}

void CanMsg_0x18F433EF::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x18F433EF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 BattMaxTemp = 2;
  if (this->battmaxtemp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->battmaxtemp(), output);
  }

  // uint32 BattMaxTempCode = 3;
  if (this->battmaxtempcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->battmaxtempcode(), output);
  }

  // uint32 BattMinTemp = 4;
  if (this->battmintemp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->battmintemp(), output);
  }

  // uint32 BattMinTempCode = 5;
  if (this->battmintempcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->battmintempcode(), output);
  }

  // uint32 DCchgGunBaseTemp0 = 6;
  if (this->dcchggunbasetemp0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->dcchggunbasetemp0(), output);
  }

  // uint32 DCchgGunBaseTemp1 = 7;
  if (this->dcchggunbasetemp1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->dcchggunbasetemp1(), output);
  }

  // uint32 AverageTemp = 8;
  if (this->averagetemp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->averagetemp(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x18F433EF)
}

::google::protobuf::uint8* CanMsg_0x18F433EF::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x18F433EF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 BattMaxTemp = 2;
  if (this->battmaxtemp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->battmaxtemp(), target);
  }

  // uint32 BattMaxTempCode = 3;
  if (this->battmaxtempcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->battmaxtempcode(), target);
  }

  // uint32 BattMinTemp = 4;
  if (this->battmintemp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->battmintemp(), target);
  }

  // uint32 BattMinTempCode = 5;
  if (this->battmintempcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->battmintempcode(), target);
  }

  // uint32 DCchgGunBaseTemp0 = 6;
  if (this->dcchggunbasetemp0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->dcchggunbasetemp0(), target);
  }

  // uint32 DCchgGunBaseTemp1 = 7;
  if (this->dcchggunbasetemp1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->dcchggunbasetemp1(), target);
  }

  // uint32 AverageTemp = 8;
  if (this->averagetemp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->averagetemp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x18F433EF)
  return target;
}

size_t CanMsg_0x18F433EF::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x18F433EF)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 BattMaxTemp = 2;
  if (this->battmaxtemp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battmaxtemp());
  }

  // uint32 BattMaxTempCode = 3;
  if (this->battmaxtempcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battmaxtempcode());
  }

  // uint32 BattMinTemp = 4;
  if (this->battmintemp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battmintemp());
  }

  // uint32 BattMinTempCode = 5;
  if (this->battmintempcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battmintempcode());
  }

  // uint32 DCchgGunBaseTemp0 = 6;
  if (this->dcchggunbasetemp0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dcchggunbasetemp0());
  }

  // uint32 DCchgGunBaseTemp1 = 7;
  if (this->dcchggunbasetemp1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dcchggunbasetemp1());
  }

  // uint32 AverageTemp = 8;
  if (this->averagetemp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->averagetemp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x18F433EF::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x18F433EF)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x18F433EF* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x18F433EF>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x18F433EF)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x18F433EF)
    MergeFrom(*source);
  }
}

void CanMsg_0x18F433EF::MergeFrom(const CanMsg_0x18F433EF& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x18F433EF)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.battmaxtemp() != 0) {
    set_battmaxtemp(from.battmaxtemp());
  }
  if (from.battmaxtempcode() != 0) {
    set_battmaxtempcode(from.battmaxtempcode());
  }
  if (from.battmintemp() != 0) {
    set_battmintemp(from.battmintemp());
  }
  if (from.battmintempcode() != 0) {
    set_battmintempcode(from.battmintempcode());
  }
  if (from.dcchggunbasetemp0() != 0) {
    set_dcchggunbasetemp0(from.dcchggunbasetemp0());
  }
  if (from.dcchggunbasetemp1() != 0) {
    set_dcchggunbasetemp1(from.dcchggunbasetemp1());
  }
  if (from.averagetemp() != 0) {
    set_averagetemp(from.averagetemp());
  }
}

void CanMsg_0x18F433EF::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x18F433EF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x18F433EF::CopyFrom(const CanMsg_0x18F433EF& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x18F433EF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x18F433EF::IsInitialized() const {
  return true;
}

void CanMsg_0x18F433EF::Swap(CanMsg_0x18F433EF* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x18F433EF::InternalSwap(CanMsg_0x18F433EF* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(battmaxtemp_, other->battmaxtemp_);
  std::swap(battmaxtempcode_, other->battmaxtempcode_);
  std::swap(battmintemp_, other->battmintemp_);
  std::swap(battmintempcode_, other->battmintempcode_);
  std::swap(dcchggunbasetemp0_, other->dcchggunbasetemp0_);
  std::swap(dcchggunbasetemp1_, other->dcchggunbasetemp1_);
  std::swap(averagetemp_, other->averagetemp_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x18F433EF::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x18F433EF

// bool isValid = 1;
void CanMsg_0x18F433EF::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x18F433EF::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F433EF.isValid)
  return isvalid_;
}
void CanMsg_0x18F433EF::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F433EF.isValid)
}

// uint32 BattMaxTemp = 2;
void CanMsg_0x18F433EF::clear_battmaxtemp() {
  battmaxtemp_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F433EF::battmaxtemp() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F433EF.BattMaxTemp)
  return battmaxtemp_;
}
void CanMsg_0x18F433EF::set_battmaxtemp(::google::protobuf::uint32 value) {
  
  battmaxtemp_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F433EF.BattMaxTemp)
}

// uint32 BattMaxTempCode = 3;
void CanMsg_0x18F433EF::clear_battmaxtempcode() {
  battmaxtempcode_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F433EF::battmaxtempcode() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F433EF.BattMaxTempCode)
  return battmaxtempcode_;
}
void CanMsg_0x18F433EF::set_battmaxtempcode(::google::protobuf::uint32 value) {
  
  battmaxtempcode_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F433EF.BattMaxTempCode)
}

// uint32 BattMinTemp = 4;
void CanMsg_0x18F433EF::clear_battmintemp() {
  battmintemp_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F433EF::battmintemp() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F433EF.BattMinTemp)
  return battmintemp_;
}
void CanMsg_0x18F433EF::set_battmintemp(::google::protobuf::uint32 value) {
  
  battmintemp_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F433EF.BattMinTemp)
}

// uint32 BattMinTempCode = 5;
void CanMsg_0x18F433EF::clear_battmintempcode() {
  battmintempcode_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F433EF::battmintempcode() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F433EF.BattMinTempCode)
  return battmintempcode_;
}
void CanMsg_0x18F433EF::set_battmintempcode(::google::protobuf::uint32 value) {
  
  battmintempcode_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F433EF.BattMinTempCode)
}

// uint32 DCchgGunBaseTemp0 = 6;
void CanMsg_0x18F433EF::clear_dcchggunbasetemp0() {
  dcchggunbasetemp0_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F433EF::dcchggunbasetemp0() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F433EF.DCchgGunBaseTemp0)
  return dcchggunbasetemp0_;
}
void CanMsg_0x18F433EF::set_dcchggunbasetemp0(::google::protobuf::uint32 value) {
  
  dcchggunbasetemp0_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F433EF.DCchgGunBaseTemp0)
}

// uint32 DCchgGunBaseTemp1 = 7;
void CanMsg_0x18F433EF::clear_dcchggunbasetemp1() {
  dcchggunbasetemp1_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F433EF::dcchggunbasetemp1() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F433EF.DCchgGunBaseTemp1)
  return dcchggunbasetemp1_;
}
void CanMsg_0x18F433EF::set_dcchggunbasetemp1(::google::protobuf::uint32 value) {
  
  dcchggunbasetemp1_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F433EF.DCchgGunBaseTemp1)
}

// uint32 AverageTemp = 8;
void CanMsg_0x18F433EF::clear_averagetemp() {
  averagetemp_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F433EF::averagetemp() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F433EF.AverageTemp)
  return averagetemp_;
}
void CanMsg_0x18F433EF::set_averagetemp(::google::protobuf::uint32 value) {
  
  averagetemp_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F433EF.AverageTemp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x18F411EF::kIsValidFieldNumber;
const int CanMsg_0x18F411EF::kSystemFaultLevelFieldNumber;
const int CanMsg_0x18F411EF::kHVlockFieldNumber;
const int CanMsg_0x18F411EF::kPowerDownReqFieldNumber;
const int CanMsg_0x18F411EF::kBMSMaxDischgPowerFieldNumber;
const int CanMsg_0x18F411EF::kBMSMaxChgPowerFieldNumber;
const int CanMsg_0x18F411EF::kDCchgVoltDemandFieldNumber;
const int CanMsg_0x18F411EF::kDCchgCurrentDemandFieldNumber;
const int CanMsg_0x18F411EF::kSystemStsCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x18F411EF::CanMsg_0x18F411EF()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x18F411EF)
}
CanMsg_0x18F411EF::CanMsg_0x18F411EF(const CanMsg_0x18F411EF& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&systemstscode_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(systemstscode_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x18F411EF)
}

void CanMsg_0x18F411EF::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&systemstscode_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(systemstscode_));
  _cached_size_ = 0;
}

CanMsg_0x18F411EF::~CanMsg_0x18F411EF() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x18F411EF)
  SharedDtor();
}

void CanMsg_0x18F411EF::SharedDtor() {
}

void CanMsg_0x18F411EF::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x18F411EF::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x18F411EF& CanMsg_0x18F411EF::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x18F411EF* CanMsg_0x18F411EF::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x18F411EF* n = new CanMsg_0x18F411EF;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x18F411EF::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x18F411EF)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&systemstscode_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(systemstscode_));
}

bool CanMsg_0x18F411EF::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x18F411EF)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SystemFaultLevel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &systemfaultlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 HVlock = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hvlock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PowerDownReq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &powerdownreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BMSMaxDischgPower = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bmsmaxdischgpower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BMSMaxChgPower = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bmsmaxchgpower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DCchgVoltDemand = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dcchgvoltdemand_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DCchgCurrentDemand = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dcchgcurrentdemand_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SystemStsCode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &systemstscode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x18F411EF)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x18F411EF)
  return false;
#undef DO_
}

void CanMsg_0x18F411EF::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x18F411EF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 SystemFaultLevel = 2;
  if (this->systemfaultlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->systemfaultlevel(), output);
  }

  // uint32 HVlock = 3;
  if (this->hvlock() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hvlock(), output);
  }

  // uint32 PowerDownReq = 4;
  if (this->powerdownreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->powerdownreq(), output);
  }

  // uint32 BMSMaxDischgPower = 5;
  if (this->bmsmaxdischgpower() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->bmsmaxdischgpower(), output);
  }

  // uint32 BMSMaxChgPower = 6;
  if (this->bmsmaxchgpower() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->bmsmaxchgpower(), output);
  }

  // uint32 DCchgVoltDemand = 7;
  if (this->dcchgvoltdemand() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->dcchgvoltdemand(), output);
  }

  // uint32 DCchgCurrentDemand = 8;
  if (this->dcchgcurrentdemand() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->dcchgcurrentdemand(), output);
  }

  // uint32 SystemStsCode = 9;
  if (this->systemstscode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->systemstscode(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x18F411EF)
}

::google::protobuf::uint8* CanMsg_0x18F411EF::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x18F411EF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 SystemFaultLevel = 2;
  if (this->systemfaultlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->systemfaultlevel(), target);
  }

  // uint32 HVlock = 3;
  if (this->hvlock() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hvlock(), target);
  }

  // uint32 PowerDownReq = 4;
  if (this->powerdownreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->powerdownreq(), target);
  }

  // uint32 BMSMaxDischgPower = 5;
  if (this->bmsmaxdischgpower() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->bmsmaxdischgpower(), target);
  }

  // uint32 BMSMaxChgPower = 6;
  if (this->bmsmaxchgpower() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->bmsmaxchgpower(), target);
  }

  // uint32 DCchgVoltDemand = 7;
  if (this->dcchgvoltdemand() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->dcchgvoltdemand(), target);
  }

  // uint32 DCchgCurrentDemand = 8;
  if (this->dcchgcurrentdemand() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->dcchgcurrentdemand(), target);
  }

  // uint32 SystemStsCode = 9;
  if (this->systemstscode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->systemstscode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x18F411EF)
  return target;
}

size_t CanMsg_0x18F411EF::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x18F411EF)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 SystemFaultLevel = 2;
  if (this->systemfaultlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->systemfaultlevel());
  }

  // uint32 HVlock = 3;
  if (this->hvlock() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hvlock());
  }

  // uint32 PowerDownReq = 4;
  if (this->powerdownreq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->powerdownreq());
  }

  // uint32 BMSMaxDischgPower = 5;
  if (this->bmsmaxdischgpower() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bmsmaxdischgpower());
  }

  // uint32 BMSMaxChgPower = 6;
  if (this->bmsmaxchgpower() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bmsmaxchgpower());
  }

  // uint32 DCchgVoltDemand = 7;
  if (this->dcchgvoltdemand() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dcchgvoltdemand());
  }

  // uint32 DCchgCurrentDemand = 8;
  if (this->dcchgcurrentdemand() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dcchgcurrentdemand());
  }

  // uint32 SystemStsCode = 9;
  if (this->systemstscode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->systemstscode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x18F411EF::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x18F411EF)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x18F411EF* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x18F411EF>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x18F411EF)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x18F411EF)
    MergeFrom(*source);
  }
}

void CanMsg_0x18F411EF::MergeFrom(const CanMsg_0x18F411EF& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x18F411EF)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.systemfaultlevel() != 0) {
    set_systemfaultlevel(from.systemfaultlevel());
  }
  if (from.hvlock() != 0) {
    set_hvlock(from.hvlock());
  }
  if (from.powerdownreq() != 0) {
    set_powerdownreq(from.powerdownreq());
  }
  if (from.bmsmaxdischgpower() != 0) {
    set_bmsmaxdischgpower(from.bmsmaxdischgpower());
  }
  if (from.bmsmaxchgpower() != 0) {
    set_bmsmaxchgpower(from.bmsmaxchgpower());
  }
  if (from.dcchgvoltdemand() != 0) {
    set_dcchgvoltdemand(from.dcchgvoltdemand());
  }
  if (from.dcchgcurrentdemand() != 0) {
    set_dcchgcurrentdemand(from.dcchgcurrentdemand());
  }
  if (from.systemstscode() != 0) {
    set_systemstscode(from.systemstscode());
  }
}

void CanMsg_0x18F411EF::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x18F411EF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x18F411EF::CopyFrom(const CanMsg_0x18F411EF& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x18F411EF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x18F411EF::IsInitialized() const {
  return true;
}

void CanMsg_0x18F411EF::Swap(CanMsg_0x18F411EF* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x18F411EF::InternalSwap(CanMsg_0x18F411EF* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(systemfaultlevel_, other->systemfaultlevel_);
  std::swap(hvlock_, other->hvlock_);
  std::swap(powerdownreq_, other->powerdownreq_);
  std::swap(bmsmaxdischgpower_, other->bmsmaxdischgpower_);
  std::swap(bmsmaxchgpower_, other->bmsmaxchgpower_);
  std::swap(dcchgvoltdemand_, other->dcchgvoltdemand_);
  std::swap(dcchgcurrentdemand_, other->dcchgcurrentdemand_);
  std::swap(systemstscode_, other->systemstscode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x18F411EF::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x18F411EF

// bool isValid = 1;
void CanMsg_0x18F411EF::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x18F411EF::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F411EF.isValid)
  return isvalid_;
}
void CanMsg_0x18F411EF::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F411EF.isValid)
}

// uint32 SystemFaultLevel = 2;
void CanMsg_0x18F411EF::clear_systemfaultlevel() {
  systemfaultlevel_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F411EF::systemfaultlevel() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F411EF.SystemFaultLevel)
  return systemfaultlevel_;
}
void CanMsg_0x18F411EF::set_systemfaultlevel(::google::protobuf::uint32 value) {
  
  systemfaultlevel_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F411EF.SystemFaultLevel)
}

// uint32 HVlock = 3;
void CanMsg_0x18F411EF::clear_hvlock() {
  hvlock_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F411EF::hvlock() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F411EF.HVlock)
  return hvlock_;
}
void CanMsg_0x18F411EF::set_hvlock(::google::protobuf::uint32 value) {
  
  hvlock_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F411EF.HVlock)
}

// uint32 PowerDownReq = 4;
void CanMsg_0x18F411EF::clear_powerdownreq() {
  powerdownreq_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F411EF::powerdownreq() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F411EF.PowerDownReq)
  return powerdownreq_;
}
void CanMsg_0x18F411EF::set_powerdownreq(::google::protobuf::uint32 value) {
  
  powerdownreq_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F411EF.PowerDownReq)
}

// uint32 BMSMaxDischgPower = 5;
void CanMsg_0x18F411EF::clear_bmsmaxdischgpower() {
  bmsmaxdischgpower_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F411EF::bmsmaxdischgpower() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F411EF.BMSMaxDischgPower)
  return bmsmaxdischgpower_;
}
void CanMsg_0x18F411EF::set_bmsmaxdischgpower(::google::protobuf::uint32 value) {
  
  bmsmaxdischgpower_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F411EF.BMSMaxDischgPower)
}

// uint32 BMSMaxChgPower = 6;
void CanMsg_0x18F411EF::clear_bmsmaxchgpower() {
  bmsmaxchgpower_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F411EF::bmsmaxchgpower() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F411EF.BMSMaxChgPower)
  return bmsmaxchgpower_;
}
void CanMsg_0x18F411EF::set_bmsmaxchgpower(::google::protobuf::uint32 value) {
  
  bmsmaxchgpower_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F411EF.BMSMaxChgPower)
}

// uint32 DCchgVoltDemand = 7;
void CanMsg_0x18F411EF::clear_dcchgvoltdemand() {
  dcchgvoltdemand_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F411EF::dcchgvoltdemand() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F411EF.DCchgVoltDemand)
  return dcchgvoltdemand_;
}
void CanMsg_0x18F411EF::set_dcchgvoltdemand(::google::protobuf::uint32 value) {
  
  dcchgvoltdemand_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F411EF.DCchgVoltDemand)
}

// uint32 DCchgCurrentDemand = 8;
void CanMsg_0x18F411EF::clear_dcchgcurrentdemand() {
  dcchgcurrentdemand_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F411EF::dcchgcurrentdemand() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F411EF.DCchgCurrentDemand)
  return dcchgcurrentdemand_;
}
void CanMsg_0x18F411EF::set_dcchgcurrentdemand(::google::protobuf::uint32 value) {
  
  dcchgcurrentdemand_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F411EF.DCchgCurrentDemand)
}

// uint32 SystemStsCode = 9;
void CanMsg_0x18F411EF::clear_systemstscode() {
  systemstscode_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x18F411EF::systemstscode() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x18F411EF.SystemStsCode)
  return systemstscode_;
}
void CanMsg_0x18F411EF::set_systemstscode(::google::protobuf::uint32 value) {
  
  systemstscode_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x18F411EF.SystemStsCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x0CFF7902::kIsValidFieldNumber;
const int CanMsg_0x0CFF7902::kFaultLevlFieldNumber;
const int CanMsg_0x0CFF7902::kModStsFieldNumber;
const int CanMsg_0x0CFF7902::kEnStsFieldNumber;
const int CanMsg_0x0CFF7902::kPrechargeAllowFieldNumber;
const int CanMsg_0x0CFF7902::kDirStsFieldNumber;
const int CanMsg_0x0CFF7902::kActTorValidFieldNumber;
const int CanMsg_0x0CFF7902::kActSpdValidFieldNumber;
const int CanMsg_0x0CFF7902::kActTorFieldNumber;
const int CanMsg_0x0CFF7902::kActSpdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x0CFF7902::CanMsg_0x0CFF7902()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x0CFF7902)
}
CanMsg_0x0CFF7902::CanMsg_0x0CFF7902(const CanMsg_0x0CFF7902& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&actspd_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(actspd_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x0CFF7902)
}

void CanMsg_0x0CFF7902::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&actspd_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(actspd_));
  _cached_size_ = 0;
}

CanMsg_0x0CFF7902::~CanMsg_0x0CFF7902() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x0CFF7902)
  SharedDtor();
}

void CanMsg_0x0CFF7902::SharedDtor() {
}

void CanMsg_0x0CFF7902::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x0CFF7902::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x0CFF7902& CanMsg_0x0CFF7902::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x0CFF7902* CanMsg_0x0CFF7902::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x0CFF7902* n = new CanMsg_0x0CFF7902;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x0CFF7902::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x0CFF7902)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&actspd_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(actspd_));
}

bool CanMsg_0x0CFF7902::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x0CFF7902)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 FaultLevl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &faultlevl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ModSts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &modsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EnSts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ensts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Precharge_Allow = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &precharge_allow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DirSts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dirsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ActTor_Valid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &acttor_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ActSpd_Valid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &actspd_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ActTor = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &acttor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ActSpd = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &actspd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x0CFF7902)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x0CFF7902)
  return false;
#undef DO_
}

void CanMsg_0x0CFF7902::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x0CFF7902)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 FaultLevl = 2;
  if (this->faultlevl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->faultlevl(), output);
  }

  // uint32 ModSts = 3;
  if (this->modsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->modsts(), output);
  }

  // uint32 EnSts = 4;
  if (this->ensts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ensts(), output);
  }

  // uint32 Precharge_Allow = 5;
  if (this->precharge_allow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->precharge_allow(), output);
  }

  // uint32 DirSts = 6;
  if (this->dirsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->dirsts(), output);
  }

  // uint32 ActTor_Valid = 7;
  if (this->acttor_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->acttor_valid(), output);
  }

  // uint32 ActSpd_Valid = 8;
  if (this->actspd_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->actspd_valid(), output);
  }

  // uint32 ActTor = 9;
  if (this->acttor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->acttor(), output);
  }

  // uint32 ActSpd = 10;
  if (this->actspd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->actspd(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x0CFF7902)
}

::google::protobuf::uint8* CanMsg_0x0CFF7902::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x0CFF7902)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 FaultLevl = 2;
  if (this->faultlevl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->faultlevl(), target);
  }

  // uint32 ModSts = 3;
  if (this->modsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->modsts(), target);
  }

  // uint32 EnSts = 4;
  if (this->ensts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ensts(), target);
  }

  // uint32 Precharge_Allow = 5;
  if (this->precharge_allow() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->precharge_allow(), target);
  }

  // uint32 DirSts = 6;
  if (this->dirsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->dirsts(), target);
  }

  // uint32 ActTor_Valid = 7;
  if (this->acttor_valid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->acttor_valid(), target);
  }

  // uint32 ActSpd_Valid = 8;
  if (this->actspd_valid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->actspd_valid(), target);
  }

  // uint32 ActTor = 9;
  if (this->acttor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->acttor(), target);
  }

  // uint32 ActSpd = 10;
  if (this->actspd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->actspd(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x0CFF7902)
  return target;
}

size_t CanMsg_0x0CFF7902::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x0CFF7902)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 FaultLevl = 2;
  if (this->faultlevl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->faultlevl());
  }

  // uint32 ModSts = 3;
  if (this->modsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->modsts());
  }

  // uint32 EnSts = 4;
  if (this->ensts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ensts());
  }

  // uint32 Precharge_Allow = 5;
  if (this->precharge_allow() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->precharge_allow());
  }

  // uint32 DirSts = 6;
  if (this->dirsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dirsts());
  }

  // uint32 ActTor_Valid = 7;
  if (this->acttor_valid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->acttor_valid());
  }

  // uint32 ActSpd_Valid = 8;
  if (this->actspd_valid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->actspd_valid());
  }

  // uint32 ActTor = 9;
  if (this->acttor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->acttor());
  }

  // uint32 ActSpd = 10;
  if (this->actspd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->actspd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x0CFF7902::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x0CFF7902)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x0CFF7902* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x0CFF7902>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x0CFF7902)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x0CFF7902)
    MergeFrom(*source);
  }
}

void CanMsg_0x0CFF7902::MergeFrom(const CanMsg_0x0CFF7902& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x0CFF7902)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.faultlevl() != 0) {
    set_faultlevl(from.faultlevl());
  }
  if (from.modsts() != 0) {
    set_modsts(from.modsts());
  }
  if (from.ensts() != 0) {
    set_ensts(from.ensts());
  }
  if (from.precharge_allow() != 0) {
    set_precharge_allow(from.precharge_allow());
  }
  if (from.dirsts() != 0) {
    set_dirsts(from.dirsts());
  }
  if (from.acttor_valid() != 0) {
    set_acttor_valid(from.acttor_valid());
  }
  if (from.actspd_valid() != 0) {
    set_actspd_valid(from.actspd_valid());
  }
  if (from.acttor() != 0) {
    set_acttor(from.acttor());
  }
  if (from.actspd() != 0) {
    set_actspd(from.actspd());
  }
}

void CanMsg_0x0CFF7902::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x0CFF7902)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x0CFF7902::CopyFrom(const CanMsg_0x0CFF7902& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x0CFF7902)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x0CFF7902::IsInitialized() const {
  return true;
}

void CanMsg_0x0CFF7902::Swap(CanMsg_0x0CFF7902* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x0CFF7902::InternalSwap(CanMsg_0x0CFF7902* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(faultlevl_, other->faultlevl_);
  std::swap(modsts_, other->modsts_);
  std::swap(ensts_, other->ensts_);
  std::swap(precharge_allow_, other->precharge_allow_);
  std::swap(dirsts_, other->dirsts_);
  std::swap(acttor_valid_, other->acttor_valid_);
  std::swap(actspd_valid_, other->actspd_valid_);
  std::swap(acttor_, other->acttor_);
  std::swap(actspd_, other->actspd_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x0CFF7902::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x0CFF7902

// bool isValid = 1;
void CanMsg_0x0CFF7902::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x0CFF7902::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7902.isValid)
  return isvalid_;
}
void CanMsg_0x0CFF7902::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7902.isValid)
}

// uint32 FaultLevl = 2;
void CanMsg_0x0CFF7902::clear_faultlevl() {
  faultlevl_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7902::faultlevl() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7902.FaultLevl)
  return faultlevl_;
}
void CanMsg_0x0CFF7902::set_faultlevl(::google::protobuf::uint32 value) {
  
  faultlevl_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7902.FaultLevl)
}

// uint32 ModSts = 3;
void CanMsg_0x0CFF7902::clear_modsts() {
  modsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7902::modsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7902.ModSts)
  return modsts_;
}
void CanMsg_0x0CFF7902::set_modsts(::google::protobuf::uint32 value) {
  
  modsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7902.ModSts)
}

// uint32 EnSts = 4;
void CanMsg_0x0CFF7902::clear_ensts() {
  ensts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7902::ensts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7902.EnSts)
  return ensts_;
}
void CanMsg_0x0CFF7902::set_ensts(::google::protobuf::uint32 value) {
  
  ensts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7902.EnSts)
}

// uint32 Precharge_Allow = 5;
void CanMsg_0x0CFF7902::clear_precharge_allow() {
  precharge_allow_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7902::precharge_allow() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7902.Precharge_Allow)
  return precharge_allow_;
}
void CanMsg_0x0CFF7902::set_precharge_allow(::google::protobuf::uint32 value) {
  
  precharge_allow_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7902.Precharge_Allow)
}

// uint32 DirSts = 6;
void CanMsg_0x0CFF7902::clear_dirsts() {
  dirsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7902::dirsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7902.DirSts)
  return dirsts_;
}
void CanMsg_0x0CFF7902::set_dirsts(::google::protobuf::uint32 value) {
  
  dirsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7902.DirSts)
}

// uint32 ActTor_Valid = 7;
void CanMsg_0x0CFF7902::clear_acttor_valid() {
  acttor_valid_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7902::acttor_valid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7902.ActTor_Valid)
  return acttor_valid_;
}
void CanMsg_0x0CFF7902::set_acttor_valid(::google::protobuf::uint32 value) {
  
  acttor_valid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7902.ActTor_Valid)
}

// uint32 ActSpd_Valid = 8;
void CanMsg_0x0CFF7902::clear_actspd_valid() {
  actspd_valid_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7902::actspd_valid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7902.ActSpd_Valid)
  return actspd_valid_;
}
void CanMsg_0x0CFF7902::set_actspd_valid(::google::protobuf::uint32 value) {
  
  actspd_valid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7902.ActSpd_Valid)
}

// uint32 ActTor = 9;
void CanMsg_0x0CFF7902::clear_acttor() {
  acttor_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7902::acttor() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7902.ActTor)
  return acttor_;
}
void CanMsg_0x0CFF7902::set_acttor(::google::protobuf::uint32 value) {
  
  acttor_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7902.ActTor)
}

// uint32 ActSpd = 10;
void CanMsg_0x0CFF7902::clear_actspd() {
  actspd_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7902::actspd() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7902.ActSpd)
  return actspd_;
}
void CanMsg_0x0CFF7902::set_actspd(::google::protobuf::uint32 value) {
  
  actspd_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7902.ActSpd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x0CFF7A02::kIsValidFieldNumber;
const int CanMsg_0x0CFF7A02::kDCVoltFieldNumber;
const int CanMsg_0x0CFF7A02::kDCCurFieldNumber;
const int CanMsg_0x0CFF7A02::kACCurFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x0CFF7A02::CanMsg_0x0CFF7A02()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x0CFF7A02)
}
CanMsg_0x0CFF7A02::CanMsg_0x0CFF7A02(const CanMsg_0x0CFF7A02& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&accur_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(accur_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x0CFF7A02)
}

void CanMsg_0x0CFF7A02::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&accur_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(accur_));
  _cached_size_ = 0;
}

CanMsg_0x0CFF7A02::~CanMsg_0x0CFF7A02() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x0CFF7A02)
  SharedDtor();
}

void CanMsg_0x0CFF7A02::SharedDtor() {
}

void CanMsg_0x0CFF7A02::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x0CFF7A02::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x0CFF7A02& CanMsg_0x0CFF7A02::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x0CFF7A02* CanMsg_0x0CFF7A02::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x0CFF7A02* n = new CanMsg_0x0CFF7A02;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x0CFF7A02::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x0CFF7A02)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&accur_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(accur_));
}

bool CanMsg_0x0CFF7A02::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x0CFF7A02)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DCVolt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dcvolt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DCCur = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dccur_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ACCur = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accur_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x0CFF7A02)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x0CFF7A02)
  return false;
#undef DO_
}

void CanMsg_0x0CFF7A02::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x0CFF7A02)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 DCVolt = 2;
  if (this->dcvolt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dcvolt(), output);
  }

  // uint32 DCCur = 3;
  if (this->dccur() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dccur(), output);
  }

  // uint32 ACCur = 4;
  if (this->accur() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->accur(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x0CFF7A02)
}

::google::protobuf::uint8* CanMsg_0x0CFF7A02::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x0CFF7A02)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 DCVolt = 2;
  if (this->dcvolt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dcvolt(), target);
  }

  // uint32 DCCur = 3;
  if (this->dccur() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dccur(), target);
  }

  // uint32 ACCur = 4;
  if (this->accur() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->accur(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x0CFF7A02)
  return target;
}

size_t CanMsg_0x0CFF7A02::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x0CFF7A02)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 DCVolt = 2;
  if (this->dcvolt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dcvolt());
  }

  // uint32 DCCur = 3;
  if (this->dccur() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dccur());
  }

  // uint32 ACCur = 4;
  if (this->accur() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->accur());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x0CFF7A02::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x0CFF7A02)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x0CFF7A02* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x0CFF7A02>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x0CFF7A02)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x0CFF7A02)
    MergeFrom(*source);
  }
}

void CanMsg_0x0CFF7A02::MergeFrom(const CanMsg_0x0CFF7A02& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x0CFF7A02)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.dcvolt() != 0) {
    set_dcvolt(from.dcvolt());
  }
  if (from.dccur() != 0) {
    set_dccur(from.dccur());
  }
  if (from.accur() != 0) {
    set_accur(from.accur());
  }
}

void CanMsg_0x0CFF7A02::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x0CFF7A02)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x0CFF7A02::CopyFrom(const CanMsg_0x0CFF7A02& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x0CFF7A02)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x0CFF7A02::IsInitialized() const {
  return true;
}

void CanMsg_0x0CFF7A02::Swap(CanMsg_0x0CFF7A02* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x0CFF7A02::InternalSwap(CanMsg_0x0CFF7A02* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(dcvolt_, other->dcvolt_);
  std::swap(dccur_, other->dccur_);
  std::swap(accur_, other->accur_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x0CFF7A02::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x0CFF7A02

// bool isValid = 1;
void CanMsg_0x0CFF7A02::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x0CFF7A02::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7A02.isValid)
  return isvalid_;
}
void CanMsg_0x0CFF7A02::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7A02.isValid)
}

// uint32 DCVolt = 2;
void CanMsg_0x0CFF7A02::clear_dcvolt() {
  dcvolt_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7A02::dcvolt() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7A02.DCVolt)
  return dcvolt_;
}
void CanMsg_0x0CFF7A02::set_dcvolt(::google::protobuf::uint32 value) {
  
  dcvolt_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7A02.DCVolt)
}

// uint32 DCCur = 3;
void CanMsg_0x0CFF7A02::clear_dccur() {
  dccur_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7A02::dccur() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7A02.DCCur)
  return dccur_;
}
void CanMsg_0x0CFF7A02::set_dccur(::google::protobuf::uint32 value) {
  
  dccur_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7A02.DCCur)
}

// uint32 ACCur = 4;
void CanMsg_0x0CFF7A02::clear_accur() {
  accur_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7A02::accur() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7A02.ACCur)
  return accur_;
}
void CanMsg_0x0CFF7A02::set_accur(::google::protobuf::uint32 value) {
  
  accur_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7A02.ACCur)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x0CFF7B02::kIsValidFieldNumber;
const int CanMsg_0x0CFF7B02::kMotorMinAvaTorFieldNumber;
const int CanMsg_0x0CFF7B02::kMotorMaxAvaTorFieldNumber;
const int CanMsg_0x0CFF7B02::kMotorIGBTTempFieldNumber;
const int CanMsg_0x0CFF7B02::kMTempFieldNumber;
const int CanMsg_0x0CFF7B02::kCTempFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x0CFF7B02::CanMsg_0x0CFF7B02()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x0CFF7B02)
}
CanMsg_0x0CFF7B02::CanMsg_0x0CFF7B02(const CanMsg_0x0CFF7B02& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&ctemp_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(ctemp_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x0CFF7B02)
}

void CanMsg_0x0CFF7B02::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&ctemp_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(ctemp_));
  _cached_size_ = 0;
}

CanMsg_0x0CFF7B02::~CanMsg_0x0CFF7B02() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x0CFF7B02)
  SharedDtor();
}

void CanMsg_0x0CFF7B02::SharedDtor() {
}

void CanMsg_0x0CFF7B02::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x0CFF7B02::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x0CFF7B02& CanMsg_0x0CFF7B02::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x0CFF7B02* CanMsg_0x0CFF7B02::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x0CFF7B02* n = new CanMsg_0x0CFF7B02;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x0CFF7B02::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x0CFF7B02)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&ctemp_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(ctemp_));
}

bool CanMsg_0x0CFF7B02::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x0CFF7B02)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MotorMinAvaTor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &motorminavator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MotorMaxAvaTor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &motormaxavator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MotorIGBTTemp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &motorigbttemp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MTemp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mtemp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CTemp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ctemp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x0CFF7B02)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x0CFF7B02)
  return false;
#undef DO_
}

void CanMsg_0x0CFF7B02::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x0CFF7B02)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 MotorMinAvaTor = 2;
  if (this->motorminavator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->motorminavator(), output);
  }

  // uint32 MotorMaxAvaTor = 3;
  if (this->motormaxavator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->motormaxavator(), output);
  }

  // uint32 MotorIGBTTemp = 4;
  if (this->motorigbttemp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->motorigbttemp(), output);
  }

  // uint32 MTemp = 5;
  if (this->mtemp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->mtemp(), output);
  }

  // uint32 CTemp = 6;
  if (this->ctemp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ctemp(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x0CFF7B02)
}

::google::protobuf::uint8* CanMsg_0x0CFF7B02::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x0CFF7B02)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 MotorMinAvaTor = 2;
  if (this->motorminavator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->motorminavator(), target);
  }

  // uint32 MotorMaxAvaTor = 3;
  if (this->motormaxavator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->motormaxavator(), target);
  }

  // uint32 MotorIGBTTemp = 4;
  if (this->motorigbttemp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->motorigbttemp(), target);
  }

  // uint32 MTemp = 5;
  if (this->mtemp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->mtemp(), target);
  }

  // uint32 CTemp = 6;
  if (this->ctemp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->ctemp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x0CFF7B02)
  return target;
}

size_t CanMsg_0x0CFF7B02::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x0CFF7B02)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 MotorMinAvaTor = 2;
  if (this->motorminavator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->motorminavator());
  }

  // uint32 MotorMaxAvaTor = 3;
  if (this->motormaxavator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->motormaxavator());
  }

  // uint32 MotorIGBTTemp = 4;
  if (this->motorigbttemp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->motorigbttemp());
  }

  // uint32 MTemp = 5;
  if (this->mtemp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mtemp());
  }

  // uint32 CTemp = 6;
  if (this->ctemp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ctemp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x0CFF7B02::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x0CFF7B02)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x0CFF7B02* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x0CFF7B02>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x0CFF7B02)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x0CFF7B02)
    MergeFrom(*source);
  }
}

void CanMsg_0x0CFF7B02::MergeFrom(const CanMsg_0x0CFF7B02& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x0CFF7B02)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.motorminavator() != 0) {
    set_motorminavator(from.motorminavator());
  }
  if (from.motormaxavator() != 0) {
    set_motormaxavator(from.motormaxavator());
  }
  if (from.motorigbttemp() != 0) {
    set_motorigbttemp(from.motorigbttemp());
  }
  if (from.mtemp() != 0) {
    set_mtemp(from.mtemp());
  }
  if (from.ctemp() != 0) {
    set_ctemp(from.ctemp());
  }
}

void CanMsg_0x0CFF7B02::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x0CFF7B02)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x0CFF7B02::CopyFrom(const CanMsg_0x0CFF7B02& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x0CFF7B02)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x0CFF7B02::IsInitialized() const {
  return true;
}

void CanMsg_0x0CFF7B02::Swap(CanMsg_0x0CFF7B02* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x0CFF7B02::InternalSwap(CanMsg_0x0CFF7B02* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(motorminavator_, other->motorminavator_);
  std::swap(motormaxavator_, other->motormaxavator_);
  std::swap(motorigbttemp_, other->motorigbttemp_);
  std::swap(mtemp_, other->mtemp_);
  std::swap(ctemp_, other->ctemp_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x0CFF7B02::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x0CFF7B02

// bool isValid = 1;
void CanMsg_0x0CFF7B02::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x0CFF7B02::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7B02.isValid)
  return isvalid_;
}
void CanMsg_0x0CFF7B02::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7B02.isValid)
}

// uint32 MotorMinAvaTor = 2;
void CanMsg_0x0CFF7B02::clear_motorminavator() {
  motorminavator_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7B02::motorminavator() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7B02.MotorMinAvaTor)
  return motorminavator_;
}
void CanMsg_0x0CFF7B02::set_motorminavator(::google::protobuf::uint32 value) {
  
  motorminavator_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7B02.MotorMinAvaTor)
}

// uint32 MotorMaxAvaTor = 3;
void CanMsg_0x0CFF7B02::clear_motormaxavator() {
  motormaxavator_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7B02::motormaxavator() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7B02.MotorMaxAvaTor)
  return motormaxavator_;
}
void CanMsg_0x0CFF7B02::set_motormaxavator(::google::protobuf::uint32 value) {
  
  motormaxavator_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7B02.MotorMaxAvaTor)
}

// uint32 MotorIGBTTemp = 4;
void CanMsg_0x0CFF7B02::clear_motorigbttemp() {
  motorigbttemp_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7B02::motorigbttemp() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7B02.MotorIGBTTemp)
  return motorigbttemp_;
}
void CanMsg_0x0CFF7B02::set_motorigbttemp(::google::protobuf::uint32 value) {
  
  motorigbttemp_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7B02.MotorIGBTTemp)
}

// uint32 MTemp = 5;
void CanMsg_0x0CFF7B02::clear_mtemp() {
  mtemp_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7B02::mtemp() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7B02.MTemp)
  return mtemp_;
}
void CanMsg_0x0CFF7B02::set_mtemp(::google::protobuf::uint32 value) {
  
  mtemp_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7B02.MTemp)
}

// uint32 CTemp = 6;
void CanMsg_0x0CFF7B02::clear_ctemp() {
  ctemp_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7B02::ctemp() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7B02.CTemp)
  return ctemp_;
}
void CanMsg_0x0CFF7B02::set_ctemp(::google::protobuf::uint32 value) {
  
  ctemp_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7B02.CTemp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMsg_0x0CFF7C02::kIsValidFieldNumber;
const int CanMsg_0x0CFF7C02::kMOvSpdStsFieldNumber;
const int CanMsg_0x0CFF7C02::kMBlockStsFieldNumber;
const int CanMsg_0x0CFF7C02::kMOvTempStsFieldNumber;
const int CanMsg_0x0CFF7C02::kMOvCurStsFieldNumber;
const int CanMsg_0x0CFF7C02::kMShrStsFieldNumber;
const int CanMsg_0x0CFF7C02::kMShrGrdStsFieldNumber;
const int CanMsg_0x0CFF7C02::kCOvTempStsFieldNumber;
const int CanMsg_0x0CFF7C02::kCAuxBatStsFieldNumber;
const int CanMsg_0x0CFF7C02::kPreChaStsFieldNumber;
const int CanMsg_0x0CFF7C02::kIGBTModStsFieldNumber;
const int CanMsg_0x0CFF7C02::kIGBTOvTempStsFieldNumber;
const int CanMsg_0x0CFF7C02::kIGBTOvCurStsFieldNumber;
const int CanMsg_0x0CFF7C02::kCOvVoltStsFieldNumber;
const int CanMsg_0x0CFF7C02::kCLowVoltStsFieldNumber;
const int CanMsg_0x0CFF7C02::kIGBTTempSenStsFieldNumber;
const int CanMsg_0x0CFF7C02::kCANFaultFieldNumber;
const int CanMsg_0x0CFF7C02::kMTempSenStsFieldNumber;
const int CanMsg_0x0CFF7C02::kCTempSenStsFieldNumber;
const int CanMsg_0x0CFF7C02::kCVoltSenStsFieldNumber;
const int CanMsg_0x0CFF7C02::kCCurSenStsFieldNumber;
const int CanMsg_0x0CFF7C02::kACCurSenStsFieldNumber;
const int CanMsg_0x0CFF7C02::kCTranFaultStsFieldNumber;
const int CanMsg_0x0CFF7C02::kMCutOffStsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMsg_0x0CFF7C02::CanMsg_0x0CFF7C02()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CanMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.CanMsg.CanMsg_0x0CFF7C02)
}
CanMsg_0x0CFF7C02::CanMsg_0x0CFF7C02(const CanMsg_0x0CFF7C02& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    reinterpret_cast<char*>(&mcutoffsts_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(mcutoffsts_));
  // @@protoc_insertion_point(copy_constructor:COWA.CanMsg.CanMsg_0x0CFF7C02)
}

void CanMsg_0x0CFF7C02::SharedCtor() {
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&mcutoffsts_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(mcutoffsts_));
  _cached_size_ = 0;
}

CanMsg_0x0CFF7C02::~CanMsg_0x0CFF7C02() {
  // @@protoc_insertion_point(destructor:COWA.CanMsg.CanMsg_0x0CFF7C02)
  SharedDtor();
}

void CanMsg_0x0CFF7C02::SharedDtor() {
}

void CanMsg_0x0CFF7C02::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanMsg_0x0CFF7C02::descriptor() {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMsg_0x0CFF7C02& CanMsg_0x0CFF7C02::default_instance() {
  protobuf_CanMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanMsg_0x0CFF7C02* CanMsg_0x0CFF7C02::New(::google::protobuf::Arena* arena) const {
  CanMsg_0x0CFF7C02* n = new CanMsg_0x0CFF7C02;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanMsg_0x0CFF7C02::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.CanMsg.CanMsg_0x0CFF7C02)
  ::memset(&isvalid_, 0, reinterpret_cast<char*>(&mcutoffsts_) -
    reinterpret_cast<char*>(&isvalid_) + sizeof(mcutoffsts_));
}

bool CanMsg_0x0CFF7C02::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.CanMsg.CanMsg_0x0CFF7C02)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isValid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MOvSpdSts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &movspdsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MBlockSts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mblocksts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MOvTempSts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &movtempsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MOvCurSts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &movcursts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MShrSts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mshrsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MShrGrdSts = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mshrgrdsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 COvTempSts = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &covtempsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CAuxBatSts = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cauxbatsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PreChaSts = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prechasts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 IGBTModSts = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &igbtmodsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 IGBTOvTempSts = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &igbtovtempsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 IGBTOvCurSts = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &igbtovcursts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 COvVoltSts = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &covvoltsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CLowVoltSts = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clowvoltsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 IGBTTempSenSts = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &igbttempsensts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CANFault = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &canfault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MTempSenSts = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mtempsensts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CTempSenSts = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ctempsensts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CVoltSenSts = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cvoltsensts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CCurSenSts = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ccursensts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ACCurSenSts = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accursensts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CTranFaultSts = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ctranfaultsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MCutOffSts = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mcutoffsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.CanMsg.CanMsg_0x0CFF7C02)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.CanMsg.CanMsg_0x0CFF7C02)
  return false;
#undef DO_
}

void CanMsg_0x0CFF7C02::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.CanMsg.CanMsg_0x0CFF7C02)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // uint32 MOvSpdSts = 2;
  if (this->movspdsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->movspdsts(), output);
  }

  // uint32 MBlockSts = 3;
  if (this->mblocksts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mblocksts(), output);
  }

  // uint32 MOvTempSts = 4;
  if (this->movtempsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->movtempsts(), output);
  }

  // uint32 MOvCurSts = 5;
  if (this->movcursts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->movcursts(), output);
  }

  // uint32 MShrSts = 6;
  if (this->mshrsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->mshrsts(), output);
  }

  // uint32 MShrGrdSts = 7;
  if (this->mshrgrdsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->mshrgrdsts(), output);
  }

  // uint32 COvTempSts = 8;
  if (this->covtempsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->covtempsts(), output);
  }

  // uint32 CAuxBatSts = 9;
  if (this->cauxbatsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->cauxbatsts(), output);
  }

  // uint32 PreChaSts = 10;
  if (this->prechasts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->prechasts(), output);
  }

  // uint32 IGBTModSts = 11;
  if (this->igbtmodsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->igbtmodsts(), output);
  }

  // uint32 IGBTOvTempSts = 12;
  if (this->igbtovtempsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->igbtovtempsts(), output);
  }

  // uint32 IGBTOvCurSts = 13;
  if (this->igbtovcursts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->igbtovcursts(), output);
  }

  // uint32 COvVoltSts = 14;
  if (this->covvoltsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->covvoltsts(), output);
  }

  // uint32 CLowVoltSts = 15;
  if (this->clowvoltsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->clowvoltsts(), output);
  }

  // uint32 IGBTTempSenSts = 16;
  if (this->igbttempsensts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->igbttempsensts(), output);
  }

  // uint32 CANFault = 17;
  if (this->canfault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->canfault(), output);
  }

  // uint32 MTempSenSts = 18;
  if (this->mtempsensts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->mtempsensts(), output);
  }

  // uint32 CTempSenSts = 19;
  if (this->ctempsensts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->ctempsensts(), output);
  }

  // uint32 CVoltSenSts = 20;
  if (this->cvoltsensts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->cvoltsensts(), output);
  }

  // uint32 CCurSenSts = 21;
  if (this->ccursensts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->ccursensts(), output);
  }

  // uint32 ACCurSenSts = 22;
  if (this->accursensts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->accursensts(), output);
  }

  // uint32 CTranFaultSts = 23;
  if (this->ctranfaultsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->ctranfaultsts(), output);
  }

  // uint32 MCutOffSts = 24;
  if (this->mcutoffsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->mcutoffsts(), output);
  }

  // @@protoc_insertion_point(serialize_end:COWA.CanMsg.CanMsg_0x0CFF7C02)
}

::google::protobuf::uint8* CanMsg_0x0CFF7C02::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.CanMsg.CanMsg_0x0CFF7C02)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // uint32 MOvSpdSts = 2;
  if (this->movspdsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->movspdsts(), target);
  }

  // uint32 MBlockSts = 3;
  if (this->mblocksts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mblocksts(), target);
  }

  // uint32 MOvTempSts = 4;
  if (this->movtempsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->movtempsts(), target);
  }

  // uint32 MOvCurSts = 5;
  if (this->movcursts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->movcursts(), target);
  }

  // uint32 MShrSts = 6;
  if (this->mshrsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->mshrsts(), target);
  }

  // uint32 MShrGrdSts = 7;
  if (this->mshrgrdsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->mshrgrdsts(), target);
  }

  // uint32 COvTempSts = 8;
  if (this->covtempsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->covtempsts(), target);
  }

  // uint32 CAuxBatSts = 9;
  if (this->cauxbatsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->cauxbatsts(), target);
  }

  // uint32 PreChaSts = 10;
  if (this->prechasts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->prechasts(), target);
  }

  // uint32 IGBTModSts = 11;
  if (this->igbtmodsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->igbtmodsts(), target);
  }

  // uint32 IGBTOvTempSts = 12;
  if (this->igbtovtempsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->igbtovtempsts(), target);
  }

  // uint32 IGBTOvCurSts = 13;
  if (this->igbtovcursts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->igbtovcursts(), target);
  }

  // uint32 COvVoltSts = 14;
  if (this->covvoltsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->covvoltsts(), target);
  }

  // uint32 CLowVoltSts = 15;
  if (this->clowvoltsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->clowvoltsts(), target);
  }

  // uint32 IGBTTempSenSts = 16;
  if (this->igbttempsensts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->igbttempsensts(), target);
  }

  // uint32 CANFault = 17;
  if (this->canfault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->canfault(), target);
  }

  // uint32 MTempSenSts = 18;
  if (this->mtempsensts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->mtempsensts(), target);
  }

  // uint32 CTempSenSts = 19;
  if (this->ctempsensts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->ctempsensts(), target);
  }

  // uint32 CVoltSenSts = 20;
  if (this->cvoltsensts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->cvoltsensts(), target);
  }

  // uint32 CCurSenSts = 21;
  if (this->ccursensts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->ccursensts(), target);
  }

  // uint32 ACCurSenSts = 22;
  if (this->accursensts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->accursensts(), target);
  }

  // uint32 CTranFaultSts = 23;
  if (this->ctranfaultsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->ctranfaultsts(), target);
  }

  // uint32 MCutOffSts = 24;
  if (this->mcutoffsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->mcutoffsts(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:COWA.CanMsg.CanMsg_0x0CFF7C02)
  return target;
}

size_t CanMsg_0x0CFF7C02::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.CanMsg.CanMsg_0x0CFF7C02)
  size_t total_size = 0;

  // bool isValid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 MOvSpdSts = 2;
  if (this->movspdsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->movspdsts());
  }

  // uint32 MBlockSts = 3;
  if (this->mblocksts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mblocksts());
  }

  // uint32 MOvTempSts = 4;
  if (this->movtempsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->movtempsts());
  }

  // uint32 MOvCurSts = 5;
  if (this->movcursts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->movcursts());
  }

  // uint32 MShrSts = 6;
  if (this->mshrsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mshrsts());
  }

  // uint32 MShrGrdSts = 7;
  if (this->mshrgrdsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mshrgrdsts());
  }

  // uint32 COvTempSts = 8;
  if (this->covtempsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->covtempsts());
  }

  // uint32 CAuxBatSts = 9;
  if (this->cauxbatsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cauxbatsts());
  }

  // uint32 PreChaSts = 10;
  if (this->prechasts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prechasts());
  }

  // uint32 IGBTModSts = 11;
  if (this->igbtmodsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->igbtmodsts());
  }

  // uint32 IGBTOvTempSts = 12;
  if (this->igbtovtempsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->igbtovtempsts());
  }

  // uint32 IGBTOvCurSts = 13;
  if (this->igbtovcursts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->igbtovcursts());
  }

  // uint32 COvVoltSts = 14;
  if (this->covvoltsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->covvoltsts());
  }

  // uint32 CLowVoltSts = 15;
  if (this->clowvoltsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->clowvoltsts());
  }

  // uint32 IGBTTempSenSts = 16;
  if (this->igbttempsensts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->igbttempsensts());
  }

  // uint32 CANFault = 17;
  if (this->canfault() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->canfault());
  }

  // uint32 MTempSenSts = 18;
  if (this->mtempsensts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mtempsensts());
  }

  // uint32 CTempSenSts = 19;
  if (this->ctempsensts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ctempsensts());
  }

  // uint32 CVoltSenSts = 20;
  if (this->cvoltsensts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cvoltsensts());
  }

  // uint32 CCurSenSts = 21;
  if (this->ccursensts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ccursensts());
  }

  // uint32 ACCurSenSts = 22;
  if (this->accursensts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->accursensts());
  }

  // uint32 CTranFaultSts = 23;
  if (this->ctranfaultsts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ctranfaultsts());
  }

  // uint32 MCutOffSts = 24;
  if (this->mcutoffsts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mcutoffsts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanMsg_0x0CFF7C02::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.CanMsg.CanMsg_0x0CFF7C02)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMsg_0x0CFF7C02* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMsg_0x0CFF7C02>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.CanMsg.CanMsg_0x0CFF7C02)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.CanMsg.CanMsg_0x0CFF7C02)
    MergeFrom(*source);
  }
}

void CanMsg_0x0CFF7C02::MergeFrom(const CanMsg_0x0CFF7C02& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.CanMsg.CanMsg_0x0CFF7C02)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.movspdsts() != 0) {
    set_movspdsts(from.movspdsts());
  }
  if (from.mblocksts() != 0) {
    set_mblocksts(from.mblocksts());
  }
  if (from.movtempsts() != 0) {
    set_movtempsts(from.movtempsts());
  }
  if (from.movcursts() != 0) {
    set_movcursts(from.movcursts());
  }
  if (from.mshrsts() != 0) {
    set_mshrsts(from.mshrsts());
  }
  if (from.mshrgrdsts() != 0) {
    set_mshrgrdsts(from.mshrgrdsts());
  }
  if (from.covtempsts() != 0) {
    set_covtempsts(from.covtempsts());
  }
  if (from.cauxbatsts() != 0) {
    set_cauxbatsts(from.cauxbatsts());
  }
  if (from.prechasts() != 0) {
    set_prechasts(from.prechasts());
  }
  if (from.igbtmodsts() != 0) {
    set_igbtmodsts(from.igbtmodsts());
  }
  if (from.igbtovtempsts() != 0) {
    set_igbtovtempsts(from.igbtovtempsts());
  }
  if (from.igbtovcursts() != 0) {
    set_igbtovcursts(from.igbtovcursts());
  }
  if (from.covvoltsts() != 0) {
    set_covvoltsts(from.covvoltsts());
  }
  if (from.clowvoltsts() != 0) {
    set_clowvoltsts(from.clowvoltsts());
  }
  if (from.igbttempsensts() != 0) {
    set_igbttempsensts(from.igbttempsensts());
  }
  if (from.canfault() != 0) {
    set_canfault(from.canfault());
  }
  if (from.mtempsensts() != 0) {
    set_mtempsensts(from.mtempsensts());
  }
  if (from.ctempsensts() != 0) {
    set_ctempsensts(from.ctempsensts());
  }
  if (from.cvoltsensts() != 0) {
    set_cvoltsensts(from.cvoltsensts());
  }
  if (from.ccursensts() != 0) {
    set_ccursensts(from.ccursensts());
  }
  if (from.accursensts() != 0) {
    set_accursensts(from.accursensts());
  }
  if (from.ctranfaultsts() != 0) {
    set_ctranfaultsts(from.ctranfaultsts());
  }
  if (from.mcutoffsts() != 0) {
    set_mcutoffsts(from.mcutoffsts());
  }
}

void CanMsg_0x0CFF7C02::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.CanMsg.CanMsg_0x0CFF7C02)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMsg_0x0CFF7C02::CopyFrom(const CanMsg_0x0CFF7C02& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.CanMsg.CanMsg_0x0CFF7C02)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMsg_0x0CFF7C02::IsInitialized() const {
  return true;
}

void CanMsg_0x0CFF7C02::Swap(CanMsg_0x0CFF7C02* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMsg_0x0CFF7C02::InternalSwap(CanMsg_0x0CFF7C02* other) {
  std::swap(isvalid_, other->isvalid_);
  std::swap(movspdsts_, other->movspdsts_);
  std::swap(mblocksts_, other->mblocksts_);
  std::swap(movtempsts_, other->movtempsts_);
  std::swap(movcursts_, other->movcursts_);
  std::swap(mshrsts_, other->mshrsts_);
  std::swap(mshrgrdsts_, other->mshrgrdsts_);
  std::swap(covtempsts_, other->covtempsts_);
  std::swap(cauxbatsts_, other->cauxbatsts_);
  std::swap(prechasts_, other->prechasts_);
  std::swap(igbtmodsts_, other->igbtmodsts_);
  std::swap(igbtovtempsts_, other->igbtovtempsts_);
  std::swap(igbtovcursts_, other->igbtovcursts_);
  std::swap(covvoltsts_, other->covvoltsts_);
  std::swap(clowvoltsts_, other->clowvoltsts_);
  std::swap(igbttempsensts_, other->igbttempsensts_);
  std::swap(canfault_, other->canfault_);
  std::swap(mtempsensts_, other->mtempsensts_);
  std::swap(ctempsensts_, other->ctempsensts_);
  std::swap(cvoltsensts_, other->cvoltsensts_);
  std::swap(ccursensts_, other->ccursensts_);
  std::swap(accursensts_, other->accursensts_);
  std::swap(ctranfaultsts_, other->ctranfaultsts_);
  std::swap(mcutoffsts_, other->mcutoffsts_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanMsg_0x0CFF7C02::GetMetadata() const {
  protobuf_CanMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CanMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanMsg_0x0CFF7C02

// bool isValid = 1;
void CanMsg_0x0CFF7C02::clear_isvalid() {
  isvalid_ = false;
}
bool CanMsg_0x0CFF7C02::isvalid() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.isValid)
  return isvalid_;
}
void CanMsg_0x0CFF7C02::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.isValid)
}

// uint32 MOvSpdSts = 2;
void CanMsg_0x0CFF7C02::clear_movspdsts() {
  movspdsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::movspdsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.MOvSpdSts)
  return movspdsts_;
}
void CanMsg_0x0CFF7C02::set_movspdsts(::google::protobuf::uint32 value) {
  
  movspdsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.MOvSpdSts)
}

// uint32 MBlockSts = 3;
void CanMsg_0x0CFF7C02::clear_mblocksts() {
  mblocksts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::mblocksts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.MBlockSts)
  return mblocksts_;
}
void CanMsg_0x0CFF7C02::set_mblocksts(::google::protobuf::uint32 value) {
  
  mblocksts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.MBlockSts)
}

// uint32 MOvTempSts = 4;
void CanMsg_0x0CFF7C02::clear_movtempsts() {
  movtempsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::movtempsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.MOvTempSts)
  return movtempsts_;
}
void CanMsg_0x0CFF7C02::set_movtempsts(::google::protobuf::uint32 value) {
  
  movtempsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.MOvTempSts)
}

// uint32 MOvCurSts = 5;
void CanMsg_0x0CFF7C02::clear_movcursts() {
  movcursts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::movcursts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.MOvCurSts)
  return movcursts_;
}
void CanMsg_0x0CFF7C02::set_movcursts(::google::protobuf::uint32 value) {
  
  movcursts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.MOvCurSts)
}

// uint32 MShrSts = 6;
void CanMsg_0x0CFF7C02::clear_mshrsts() {
  mshrsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::mshrsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.MShrSts)
  return mshrsts_;
}
void CanMsg_0x0CFF7C02::set_mshrsts(::google::protobuf::uint32 value) {
  
  mshrsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.MShrSts)
}

// uint32 MShrGrdSts = 7;
void CanMsg_0x0CFF7C02::clear_mshrgrdsts() {
  mshrgrdsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::mshrgrdsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.MShrGrdSts)
  return mshrgrdsts_;
}
void CanMsg_0x0CFF7C02::set_mshrgrdsts(::google::protobuf::uint32 value) {
  
  mshrgrdsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.MShrGrdSts)
}

// uint32 COvTempSts = 8;
void CanMsg_0x0CFF7C02::clear_covtempsts() {
  covtempsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::covtempsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.COvTempSts)
  return covtempsts_;
}
void CanMsg_0x0CFF7C02::set_covtempsts(::google::protobuf::uint32 value) {
  
  covtempsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.COvTempSts)
}

// uint32 CAuxBatSts = 9;
void CanMsg_0x0CFF7C02::clear_cauxbatsts() {
  cauxbatsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::cauxbatsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.CAuxBatSts)
  return cauxbatsts_;
}
void CanMsg_0x0CFF7C02::set_cauxbatsts(::google::protobuf::uint32 value) {
  
  cauxbatsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.CAuxBatSts)
}

// uint32 PreChaSts = 10;
void CanMsg_0x0CFF7C02::clear_prechasts() {
  prechasts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::prechasts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.PreChaSts)
  return prechasts_;
}
void CanMsg_0x0CFF7C02::set_prechasts(::google::protobuf::uint32 value) {
  
  prechasts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.PreChaSts)
}

// uint32 IGBTModSts = 11;
void CanMsg_0x0CFF7C02::clear_igbtmodsts() {
  igbtmodsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::igbtmodsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.IGBTModSts)
  return igbtmodsts_;
}
void CanMsg_0x0CFF7C02::set_igbtmodsts(::google::protobuf::uint32 value) {
  
  igbtmodsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.IGBTModSts)
}

// uint32 IGBTOvTempSts = 12;
void CanMsg_0x0CFF7C02::clear_igbtovtempsts() {
  igbtovtempsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::igbtovtempsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.IGBTOvTempSts)
  return igbtovtempsts_;
}
void CanMsg_0x0CFF7C02::set_igbtovtempsts(::google::protobuf::uint32 value) {
  
  igbtovtempsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.IGBTOvTempSts)
}

// uint32 IGBTOvCurSts = 13;
void CanMsg_0x0CFF7C02::clear_igbtovcursts() {
  igbtovcursts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::igbtovcursts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.IGBTOvCurSts)
  return igbtovcursts_;
}
void CanMsg_0x0CFF7C02::set_igbtovcursts(::google::protobuf::uint32 value) {
  
  igbtovcursts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.IGBTOvCurSts)
}

// uint32 COvVoltSts = 14;
void CanMsg_0x0CFF7C02::clear_covvoltsts() {
  covvoltsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::covvoltsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.COvVoltSts)
  return covvoltsts_;
}
void CanMsg_0x0CFF7C02::set_covvoltsts(::google::protobuf::uint32 value) {
  
  covvoltsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.COvVoltSts)
}

// uint32 CLowVoltSts = 15;
void CanMsg_0x0CFF7C02::clear_clowvoltsts() {
  clowvoltsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::clowvoltsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.CLowVoltSts)
  return clowvoltsts_;
}
void CanMsg_0x0CFF7C02::set_clowvoltsts(::google::protobuf::uint32 value) {
  
  clowvoltsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.CLowVoltSts)
}

// uint32 IGBTTempSenSts = 16;
void CanMsg_0x0CFF7C02::clear_igbttempsensts() {
  igbttempsensts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::igbttempsensts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.IGBTTempSenSts)
  return igbttempsensts_;
}
void CanMsg_0x0CFF7C02::set_igbttempsensts(::google::protobuf::uint32 value) {
  
  igbttempsensts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.IGBTTempSenSts)
}

// uint32 CANFault = 17;
void CanMsg_0x0CFF7C02::clear_canfault() {
  canfault_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::canfault() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.CANFault)
  return canfault_;
}
void CanMsg_0x0CFF7C02::set_canfault(::google::protobuf::uint32 value) {
  
  canfault_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.CANFault)
}

// uint32 MTempSenSts = 18;
void CanMsg_0x0CFF7C02::clear_mtempsensts() {
  mtempsensts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::mtempsensts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.MTempSenSts)
  return mtempsensts_;
}
void CanMsg_0x0CFF7C02::set_mtempsensts(::google::protobuf::uint32 value) {
  
  mtempsensts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.MTempSenSts)
}

// uint32 CTempSenSts = 19;
void CanMsg_0x0CFF7C02::clear_ctempsensts() {
  ctempsensts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::ctempsensts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.CTempSenSts)
  return ctempsensts_;
}
void CanMsg_0x0CFF7C02::set_ctempsensts(::google::protobuf::uint32 value) {
  
  ctempsensts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.CTempSenSts)
}

// uint32 CVoltSenSts = 20;
void CanMsg_0x0CFF7C02::clear_cvoltsensts() {
  cvoltsensts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::cvoltsensts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.CVoltSenSts)
  return cvoltsensts_;
}
void CanMsg_0x0CFF7C02::set_cvoltsensts(::google::protobuf::uint32 value) {
  
  cvoltsensts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.CVoltSenSts)
}

// uint32 CCurSenSts = 21;
void CanMsg_0x0CFF7C02::clear_ccursensts() {
  ccursensts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::ccursensts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.CCurSenSts)
  return ccursensts_;
}
void CanMsg_0x0CFF7C02::set_ccursensts(::google::protobuf::uint32 value) {
  
  ccursensts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.CCurSenSts)
}

// uint32 ACCurSenSts = 22;
void CanMsg_0x0CFF7C02::clear_accursensts() {
  accursensts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::accursensts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.ACCurSenSts)
  return accursensts_;
}
void CanMsg_0x0CFF7C02::set_accursensts(::google::protobuf::uint32 value) {
  
  accursensts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.ACCurSenSts)
}

// uint32 CTranFaultSts = 23;
void CanMsg_0x0CFF7C02::clear_ctranfaultsts() {
  ctranfaultsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::ctranfaultsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.CTranFaultSts)
  return ctranfaultsts_;
}
void CanMsg_0x0CFF7C02::set_ctranfaultsts(::google::protobuf::uint32 value) {
  
  ctranfaultsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.CTranFaultSts)
}

// uint32 MCutOffSts = 24;
void CanMsg_0x0CFF7C02::clear_mcutoffsts() {
  mcutoffsts_ = 0u;
}
::google::protobuf::uint32 CanMsg_0x0CFF7C02::mcutoffsts() const {
  // @@protoc_insertion_point(field_get:COWA.CanMsg.CanMsg_0x0CFF7C02.MCutOffSts)
  return mcutoffsts_;
}
void CanMsg_0x0CFF7C02::set_mcutoffsts(::google::protobuf::uint32 value) {
  
  mcutoffsts_ = value;
  // @@protoc_insertion_point(field_set:COWA.CanMsg.CanMsg_0x0CFF7C02.MCutOffSts)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace CanMsg
}  // namespace COWA

// @@protoc_insertion_point(global_scope)
