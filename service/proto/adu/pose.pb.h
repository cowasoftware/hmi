// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pose.proto

#ifndef PROTOBUF_pose_2eproto__INCLUDED
#define PROTOBUF_pose_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace COWA {
namespace NavMsg {
class Covariance;
class CovarianceDefaultTypeInternal;
extern CovarianceDefaultTypeInternal _Covariance_default_instance_;
class Point3D;
class Point3DDefaultTypeInternal;
extern Point3DDefaultTypeInternal _Point3D_default_instance_;
class Pose;
class PoseDefaultTypeInternal;
extern PoseDefaultTypeInternal _Pose_default_instance_;
class PoseStamped;
class PoseStampedDefaultTypeInternal;
extern PoseStampedDefaultTypeInternal _PoseStamped_default_instance_;
class PoseStampedArray;
class PoseStampedArrayDefaultTypeInternal;
extern PoseStampedArrayDefaultTypeInternal _PoseStampedArray_default_instance_;
class Quaternion;
class QuaternionDefaultTypeInternal;
extern QuaternionDefaultTypeInternal _Quaternion_default_instance_;
class Velocity;
class VelocityDefaultTypeInternal;
extern VelocityDefaultTypeInternal _Velocity_default_instance_;
}  // namespace NavMsg
}  // namespace COWA

namespace COWA {
namespace NavMsg {

namespace protobuf_pose_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_pose_2eproto

enum PoseStamped_Status {
  PoseStamped_Status_ERROR_TF_NCONFIG = 1,
  PoseStamped_Status_ERROR_TSTAMP_FAILED = 2,
  PoseStamped_Status_ERROR_RTK_FAILED = 3,
  PoseStamped_Status_ERROR_RTK_YAW_FAILED = 4,
  PoseStamped_Status_ERROR_RTK_YAW_MISMATCH = 5,
  PoseStamped_Status_ERROR_RTK_MISMATCH = 6,
  PoseStamped_Status_ERROR_RTK_TSTAMP = 7,
  PoseStamped_Status_ERROR_RTK_TF_ERROR = 8,
  PoseStamped_Status_ERROR_IMU_TF_ERROR = 9,
  PoseStamped_Status_WARN_RTK_TSTAMP = 101,
  PoseStamped_Status_WARN_RTK_NA = 102,
  PoseStamped_Status_WARN_RTK_YAW_NA = 103,
  PoseStamped_Status_WARN_CHASSIS_TIMESTAMP = 104,
  PoseStamped_Status_WARN_CHASSIS_TSTAMP_SPEED = 105,
  PoseStamped_Status_WARN_CHASSIS_SPEED = 106,
  PoseStamped_Status_WARN_CHASSIS_WHEEL_SPEED = 107,
  PoseStamped_Status_WARN_LIDAR_TSTAMP = 201,
  PoseStamped_Status_WARN_LIDAR_POS_MISMATCH = 202,
  PoseStamped_Status_WARN_LIDAR_ALT_MISMATCH = 203,
  PoseStamped_Status_WARN_LIDAR_YAW_MISMATCH = 204,
  PoseStamped_Status_WARN_LANE_TSTAMP = 205,
  PoseStamped_Status_WARN_LANE_POS_MISMATCH = 206,
  PoseStamped_Status_WARN_LANE_ALT_MISMATCH = 207,
  PoseStamped_Status_WARN_LANE_YAW_MISMATCH = 208,
  PoseStamped_Status_WARN_CURB_TSTAMP = 209,
  PoseStamped_Status_WARN_CURB_POS_MISMATCH = 210,
  PoseStamped_Status_WARN_CURB_ALT_MISMATCH = 211,
  PoseStamped_Status_WARN_CURB_YAW_MISMATCH = 212
};
bool PoseStamped_Status_IsValid(int value);
const PoseStamped_Status PoseStamped_Status_Status_MIN = PoseStamped_Status_ERROR_TF_NCONFIG;
const PoseStamped_Status PoseStamped_Status_Status_MAX = PoseStamped_Status_WARN_CURB_YAW_MISMATCH;
const int PoseStamped_Status_Status_ARRAYSIZE = PoseStamped_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* PoseStamped_Status_descriptor();
inline const ::std::string& PoseStamped_Status_Name(PoseStamped_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    PoseStamped_Status_descriptor(), value);
}
inline bool PoseStamped_Status_Parse(
    const ::std::string& name, PoseStamped_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PoseStamped_Status>(
    PoseStamped_Status_descriptor(), name, value);
}
// ===================================================================

class Point3D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:COWA.NavMsg.Point3D) */ {
 public:
  Point3D();
  virtual ~Point3D();

  Point3D(const Point3D& from);

  inline Point3D& operator=(const Point3D& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Point3D& default_instance();

  static inline const Point3D* internal_default_instance() {
    return reinterpret_cast<const Point3D*>(
               &_Point3D_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Point3D* other);

  // implements Message ----------------------------------------------

  inline Point3D* New() const PROTOBUF_FINAL { return New(NULL); }

  Point3D* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Point3D& from);
  void MergeFrom(const Point3D& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Point3D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double x = 1 [default = nan];
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // optional double y = 2 [default = nan];
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // optional double z = 3 [default = nan];
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:COWA.NavMsg.Point3D)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_z();
  void clear_has_z();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double x_;
  double y_;
  double z_;
  friend struct protobuf_pose_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Quaternion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:COWA.NavMsg.Quaternion) */ {
 public:
  Quaternion();
  virtual ~Quaternion();

  Quaternion(const Quaternion& from);

  inline Quaternion& operator=(const Quaternion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quaternion& default_instance();

  static inline const Quaternion* internal_default_instance() {
    return reinterpret_cast<const Quaternion*>(
               &_Quaternion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Quaternion* other);

  // implements Message ----------------------------------------------

  inline Quaternion* New() const PROTOBUF_FINAL { return New(NULL); }

  Quaternion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Quaternion& from);
  void MergeFrom(const Quaternion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Quaternion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double qx = 1 [default = nan];
  bool has_qx() const;
  void clear_qx();
  static const int kQxFieldNumber = 1;
  double qx() const;
  void set_qx(double value);

  // optional double qy = 2 [default = nan];
  bool has_qy() const;
  void clear_qy();
  static const int kQyFieldNumber = 2;
  double qy() const;
  void set_qy(double value);

  // optional double qz = 3 [default = nan];
  bool has_qz() const;
  void clear_qz();
  static const int kQzFieldNumber = 3;
  double qz() const;
  void set_qz(double value);

  // optional double qw = 4 [default = nan];
  bool has_qw() const;
  void clear_qw();
  static const int kQwFieldNumber = 4;
  double qw() const;
  void set_qw(double value);

  // @@protoc_insertion_point(class_scope:COWA.NavMsg.Quaternion)
 private:
  void set_has_qx();
  void clear_has_qx();
  void set_has_qy();
  void clear_has_qy();
  void set_has_qz();
  void clear_has_qz();
  void set_has_qw();
  void clear_has_qw();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double qx_;
  double qy_;
  double qz_;
  double qw_;
  friend struct protobuf_pose_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Velocity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:COWA.NavMsg.Velocity) */ {
 public:
  Velocity();
  virtual ~Velocity();

  Velocity(const Velocity& from);

  inline Velocity& operator=(const Velocity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Velocity& default_instance();

  static inline const Velocity* internal_default_instance() {
    return reinterpret_cast<const Velocity*>(
               &_Velocity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Velocity* other);

  // implements Message ----------------------------------------------

  inline Velocity* New() const PROTOBUF_FINAL { return New(NULL); }

  Velocity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Velocity& from);
  void MergeFrom(const Velocity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Velocity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .COWA.NavMsg.Point3D linear = 1;
  bool has_linear() const;
  void clear_linear();
  static const int kLinearFieldNumber = 1;
  const ::COWA::NavMsg::Point3D& linear() const;
  ::COWA::NavMsg::Point3D* mutable_linear();
  ::COWA::NavMsg::Point3D* release_linear();
  void set_allocated_linear(::COWA::NavMsg::Point3D* linear);

  // optional .COWA.NavMsg.Point3D angular = 2;
  bool has_angular() const;
  void clear_angular();
  static const int kAngularFieldNumber = 2;
  const ::COWA::NavMsg::Point3D& angular() const;
  ::COWA::NavMsg::Point3D* mutable_angular();
  ::COWA::NavMsg::Point3D* release_angular();
  void set_allocated_angular(::COWA::NavMsg::Point3D* angular);

  // @@protoc_insertion_point(class_scope:COWA.NavMsg.Velocity)
 private:
  void set_has_linear();
  void clear_has_linear();
  void set_has_angular();
  void clear_has_angular();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::COWA::NavMsg::Point3D* linear_;
  ::COWA::NavMsg::Point3D* angular_;
  friend struct protobuf_pose_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Covariance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:COWA.NavMsg.Covariance) */ {
 public:
  Covariance();
  virtual ~Covariance();

  Covariance(const Covariance& from);

  inline Covariance& operator=(const Covariance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Covariance& default_instance();

  static inline const Covariance* internal_default_instance() {
    return reinterpret_cast<const Covariance*>(
               &_Covariance_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Covariance* other);

  // implements Message ----------------------------------------------

  inline Covariance* New() const PROTOBUF_FINAL { return New(NULL); }

  Covariance* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Covariance& from);
  void MergeFrom(const Covariance& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Covariance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double matrix = 13;
  int matrix_size() const;
  void clear_matrix();
  static const int kMatrixFieldNumber = 13;
  double matrix(int index) const;
  void set_matrix(int index, double value);
  void add_matrix(double value);
  const ::google::protobuf::RepeatedField< double >&
      matrix() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_matrix();

  // optional double x = 1 [default = nan];
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // optional double y = 2 [default = nan];
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // optional double z = 3 [default = nan];
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // optional double p = 4 [default = nan];
  bool has_p() const;
  void clear_p();
  static const int kPFieldNumber = 4;
  double p() const;
  void set_p(double value);

  // optional double r = 5 [default = nan];
  bool has_r() const;
  void clear_r();
  static const int kRFieldNumber = 5;
  double r() const;
  void set_r(double value);

  // optional double h = 6 [default = nan];
  bool has_h() const;
  void clear_h();
  static const int kHFieldNumber = 6;
  double h() const;
  void set_h(double value);

  // optional double xt = 7 [default = nan];
  bool has_xt() const;
  void clear_xt();
  static const int kXtFieldNumber = 7;
  double xt() const;
  void set_xt(double value);

  // optional double yt = 8 [default = nan];
  bool has_yt() const;
  void clear_yt();
  static const int kYtFieldNumber = 8;
  double yt() const;
  void set_yt(double value);

  // optional double zt = 9 [default = nan];
  bool has_zt() const;
  void clear_zt();
  static const int kZtFieldNumber = 9;
  double zt() const;
  void set_zt(double value);

  // optional double pr = 10 [default = nan];
  bool has_pr() const;
  void clear_pr();
  static const int kPrFieldNumber = 10;
  double pr() const;
  void set_pr(double value);

  // optional double rr = 11 [default = nan];
  bool has_rr() const;
  void clear_rr();
  static const int kRrFieldNumber = 11;
  double rr() const;
  void set_rr(double value);

  // optional double hr = 12 [default = nan];
  bool has_hr() const;
  void clear_hr();
  static const int kHrFieldNumber = 12;
  double hr() const;
  void set_hr(double value);

  // @@protoc_insertion_point(class_scope:COWA.NavMsg.Covariance)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_z();
  void clear_has_z();
  void set_has_p();
  void clear_has_p();
  void set_has_r();
  void clear_has_r();
  void set_has_h();
  void clear_has_h();
  void set_has_xt();
  void clear_has_xt();
  void set_has_yt();
  void clear_has_yt();
  void set_has_zt();
  void clear_has_zt();
  void set_has_pr();
  void clear_has_pr();
  void set_has_rr();
  void clear_has_rr();
  void set_has_hr();
  void clear_has_hr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< double > matrix_;
  double x_;
  double y_;
  double z_;
  double p_;
  double r_;
  double h_;
  double xt_;
  double yt_;
  double zt_;
  double pr_;
  double rr_;
  double hr_;
  friend struct protobuf_pose_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Pose : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:COWA.NavMsg.Pose) */ {
 public:
  Pose();
  virtual ~Pose();

  Pose(const Pose& from);

  inline Pose& operator=(const Pose& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pose& default_instance();

  static inline const Pose* internal_default_instance() {
    return reinterpret_cast<const Pose*>(
               &_Pose_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Pose* other);

  // implements Message ----------------------------------------------

  inline Pose* New() const PROTOBUF_FINAL { return New(NULL); }

  Pose* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Pose& from);
  void MergeFrom(const Pose& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Pose* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .COWA.NavMsg.Point3D position = 1;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  const ::COWA::NavMsg::Point3D& position() const;
  ::COWA::NavMsg::Point3D* mutable_position();
  ::COWA::NavMsg::Point3D* release_position();
  void set_allocated_position(::COWA::NavMsg::Point3D* position);

  // optional .COWA.NavMsg.Quaternion rotation = 2;
  bool has_rotation() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 2;
  const ::COWA::NavMsg::Quaternion& rotation() const;
  ::COWA::NavMsg::Quaternion* mutable_rotation();
  ::COWA::NavMsg::Quaternion* release_rotation();
  void set_allocated_rotation(::COWA::NavMsg::Quaternion* rotation);

  // optional .COWA.NavMsg.Covariance covariance = 3;
  bool has_covariance() const;
  void clear_covariance();
  static const int kCovarianceFieldNumber = 3;
  const ::COWA::NavMsg::Covariance& covariance() const;
  ::COWA::NavMsg::Covariance* mutable_covariance();
  ::COWA::NavMsg::Covariance* release_covariance();
  void set_allocated_covariance(::COWA::NavMsg::Covariance* covariance);

  // @@protoc_insertion_point(class_scope:COWA.NavMsg.Pose)
 private:
  void set_has_position();
  void clear_has_position();
  void set_has_rotation();
  void clear_has_rotation();
  void set_has_covariance();
  void clear_has_covariance();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::COWA::NavMsg::Point3D* position_;
  ::COWA::NavMsg::Quaternion* rotation_;
  ::COWA::NavMsg::Covariance* covariance_;
  friend struct protobuf_pose_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PoseStamped : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:COWA.NavMsg.PoseStamped) */ {
 public:
  PoseStamped();
  virtual ~PoseStamped();

  PoseStamped(const PoseStamped& from);

  inline PoseStamped& operator=(const PoseStamped& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PoseStamped& default_instance();

  static inline const PoseStamped* internal_default_instance() {
    return reinterpret_cast<const PoseStamped*>(
               &_PoseStamped_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PoseStamped* other);

  // implements Message ----------------------------------------------

  inline PoseStamped* New() const PROTOBUF_FINAL { return New(NULL); }

  PoseStamped* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PoseStamped& from);
  void MergeFrom(const PoseStamped& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PoseStamped* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PoseStamped_Status Status;
  static const Status ERROR_TF_NCONFIG =
    PoseStamped_Status_ERROR_TF_NCONFIG;
  static const Status ERROR_TSTAMP_FAILED =
    PoseStamped_Status_ERROR_TSTAMP_FAILED;
  static const Status ERROR_RTK_FAILED =
    PoseStamped_Status_ERROR_RTK_FAILED;
  static const Status ERROR_RTK_YAW_FAILED =
    PoseStamped_Status_ERROR_RTK_YAW_FAILED;
  static const Status ERROR_RTK_YAW_MISMATCH =
    PoseStamped_Status_ERROR_RTK_YAW_MISMATCH;
  static const Status ERROR_RTK_MISMATCH =
    PoseStamped_Status_ERROR_RTK_MISMATCH;
  static const Status ERROR_RTK_TSTAMP =
    PoseStamped_Status_ERROR_RTK_TSTAMP;
  static const Status ERROR_RTK_TF_ERROR =
    PoseStamped_Status_ERROR_RTK_TF_ERROR;
  static const Status ERROR_IMU_TF_ERROR =
    PoseStamped_Status_ERROR_IMU_TF_ERROR;
  static const Status WARN_RTK_TSTAMP =
    PoseStamped_Status_WARN_RTK_TSTAMP;
  static const Status WARN_RTK_NA =
    PoseStamped_Status_WARN_RTK_NA;
  static const Status WARN_RTK_YAW_NA =
    PoseStamped_Status_WARN_RTK_YAW_NA;
  static const Status WARN_CHASSIS_TIMESTAMP =
    PoseStamped_Status_WARN_CHASSIS_TIMESTAMP;
  static const Status WARN_CHASSIS_TSTAMP_SPEED =
    PoseStamped_Status_WARN_CHASSIS_TSTAMP_SPEED;
  static const Status WARN_CHASSIS_SPEED =
    PoseStamped_Status_WARN_CHASSIS_SPEED;
  static const Status WARN_CHASSIS_WHEEL_SPEED =
    PoseStamped_Status_WARN_CHASSIS_WHEEL_SPEED;
  static const Status WARN_LIDAR_TSTAMP =
    PoseStamped_Status_WARN_LIDAR_TSTAMP;
  static const Status WARN_LIDAR_POS_MISMATCH =
    PoseStamped_Status_WARN_LIDAR_POS_MISMATCH;
  static const Status WARN_LIDAR_ALT_MISMATCH =
    PoseStamped_Status_WARN_LIDAR_ALT_MISMATCH;
  static const Status WARN_LIDAR_YAW_MISMATCH =
    PoseStamped_Status_WARN_LIDAR_YAW_MISMATCH;
  static const Status WARN_LANE_TSTAMP =
    PoseStamped_Status_WARN_LANE_TSTAMP;
  static const Status WARN_LANE_POS_MISMATCH =
    PoseStamped_Status_WARN_LANE_POS_MISMATCH;
  static const Status WARN_LANE_ALT_MISMATCH =
    PoseStamped_Status_WARN_LANE_ALT_MISMATCH;
  static const Status WARN_LANE_YAW_MISMATCH =
    PoseStamped_Status_WARN_LANE_YAW_MISMATCH;
  static const Status WARN_CURB_TSTAMP =
    PoseStamped_Status_WARN_CURB_TSTAMP;
  static const Status WARN_CURB_POS_MISMATCH =
    PoseStamped_Status_WARN_CURB_POS_MISMATCH;
  static const Status WARN_CURB_ALT_MISMATCH =
    PoseStamped_Status_WARN_CURB_ALT_MISMATCH;
  static const Status WARN_CURB_YAW_MISMATCH =
    PoseStamped_Status_WARN_CURB_YAW_MISMATCH;
  static inline bool Status_IsValid(int value) {
    return PoseStamped_Status_IsValid(value);
  }
  static const Status Status_MIN =
    PoseStamped_Status_Status_MIN;
  static const Status Status_MAX =
    PoseStamped_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    PoseStamped_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return PoseStamped_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return PoseStamped_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return PoseStamped_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .COWA.NavMsg.PoseStamped.Status status = 6;
  int status_size() const;
  void clear_status();
  static const int kStatusFieldNumber = 6;
  ::COWA::NavMsg::PoseStamped_Status status(int index) const;
  void set_status(int index, ::COWA::NavMsg::PoseStamped_Status value);
  void add_status(::COWA::NavMsg::PoseStamped_Status value);
  const ::google::protobuf::RepeatedField<int>& status() const;
  ::google::protobuf::RepeatedField<int>* mutable_status();

  // repeated .COWA.NavMsg.PoseStamped.Status internstatus = 8;
  int internstatus_size() const;
  void clear_internstatus();
  static const int kInternstatusFieldNumber = 8;
  ::COWA::NavMsg::PoseStamped_Status internstatus(int index) const;
  void set_internstatus(int index, ::COWA::NavMsg::PoseStamped_Status value);
  void add_internstatus(::COWA::NavMsg::PoseStamped_Status value);
  const ::google::protobuf::RepeatedField<int>& internstatus() const;
  ::google::protobuf::RepeatedField<int>* mutable_internstatus();

  // optional bytes frame_id = 2;
  bool has_frame_id() const;
  void clear_frame_id();
  static const int kFrameIdFieldNumber = 2;
  const ::std::string& frame_id() const;
  void set_frame_id(const ::std::string& value);
  #if LANG_CXX11
  void set_frame_id(::std::string&& value);
  #endif
  void set_frame_id(const char* value);
  void set_frame_id(const void* value, size_t size);
  ::std::string* mutable_frame_id();
  ::std::string* release_frame_id();
  void set_allocated_frame_id(::std::string* frame_id);

  // optional .COWA.NavMsg.Pose pose = 4;
  bool has_pose() const;
  void clear_pose();
  static const int kPoseFieldNumber = 4;
  const ::COWA::NavMsg::Pose& pose() const;
  ::COWA::NavMsg::Pose* mutable_pose();
  ::COWA::NavMsg::Pose* release_pose();
  void set_allocated_pose(::COWA::NavMsg::Pose* pose);

  // optional .COWA.NavMsg.Velocity velocity = 5;
  bool has_velocity() const;
  void clear_velocity();
  static const int kVelocityFieldNumber = 5;
  const ::COWA::NavMsg::Velocity& velocity() const;
  ::COWA::NavMsg::Velocity* mutable_velocity();
  ::COWA::NavMsg::Velocity* release_velocity();
  void set_allocated_velocity(::COWA::NavMsg::Velocity* velocity);

  // optional uint64 timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // optional uint32 sequence = 3;
  bool has_sequence() const;
  void clear_sequence();
  static const int kSequenceFieldNumber = 3;
  ::google::protobuf::uint32 sequence() const;
  void set_sequence(::google::protobuf::uint32 value);

  // optional int32 latency_ms = 7;
  bool has_latency_ms() const;
  void clear_latency_ms();
  static const int kLatencyMsFieldNumber = 7;
  ::google::protobuf::int32 latency_ms() const;
  void set_latency_ms(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:COWA.NavMsg.PoseStamped)
 private:
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_frame_id();
  void clear_has_frame_id();
  void set_has_sequence();
  void clear_has_sequence();
  void set_has_pose();
  void clear_has_pose();
  void set_has_velocity();
  void clear_has_velocity();
  void set_has_latency_ms();
  void clear_has_latency_ms();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> status_;
  ::google::protobuf::RepeatedField<int> internstatus_;
  ::google::protobuf::internal::ArenaStringPtr frame_id_;
  ::COWA::NavMsg::Pose* pose_;
  ::COWA::NavMsg::Velocity* velocity_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint32 sequence_;
  ::google::protobuf::int32 latency_ms_;
  friend struct protobuf_pose_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PoseStampedArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:COWA.NavMsg.PoseStampedArray) */ {
 public:
  PoseStampedArray();
  virtual ~PoseStampedArray();

  PoseStampedArray(const PoseStampedArray& from);

  inline PoseStampedArray& operator=(const PoseStampedArray& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PoseStampedArray& default_instance();

  static inline const PoseStampedArray* internal_default_instance() {
    return reinterpret_cast<const PoseStampedArray*>(
               &_PoseStampedArray_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(PoseStampedArray* other);

  // implements Message ----------------------------------------------

  inline PoseStampedArray* New() const PROTOBUF_FINAL { return New(NULL); }

  PoseStampedArray* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PoseStampedArray& from);
  void MergeFrom(const PoseStampedArray& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PoseStampedArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .COWA.NavMsg.PoseStamped poses = 1;
  int poses_size() const;
  void clear_poses();
  static const int kPosesFieldNumber = 1;
  const ::COWA::NavMsg::PoseStamped& poses(int index) const;
  ::COWA::NavMsg::PoseStamped* mutable_poses(int index);
  ::COWA::NavMsg::PoseStamped* add_poses();
  ::google::protobuf::RepeatedPtrField< ::COWA::NavMsg::PoseStamped >*
      mutable_poses();
  const ::google::protobuf::RepeatedPtrField< ::COWA::NavMsg::PoseStamped >&
      poses() const;

  // @@protoc_insertion_point(class_scope:COWA.NavMsg.PoseStampedArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::COWA::NavMsg::PoseStamped > poses_;
  friend struct protobuf_pose_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Point3D

// optional double x = 1 [default = nan];
inline bool Point3D::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Point3D::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Point3D::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Point3D::clear_x() {
  x_ = ::google::protobuf::internal::NaN();
  clear_has_x();
}
inline double Point3D::x() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Point3D.x)
  return x_;
}
inline void Point3D::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Point3D.x)
}

// optional double y = 2 [default = nan];
inline bool Point3D::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Point3D::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Point3D::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Point3D::clear_y() {
  y_ = ::google::protobuf::internal::NaN();
  clear_has_y();
}
inline double Point3D::y() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Point3D.y)
  return y_;
}
inline void Point3D::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Point3D.y)
}

// optional double z = 3 [default = nan];
inline bool Point3D::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Point3D::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Point3D::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Point3D::clear_z() {
  z_ = ::google::protobuf::internal::NaN();
  clear_has_z();
}
inline double Point3D::z() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Point3D.z)
  return z_;
}
inline void Point3D::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Point3D.z)
}

// -------------------------------------------------------------------

// Quaternion

// optional double qx = 1 [default = nan];
inline bool Quaternion::has_qx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quaternion::set_has_qx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quaternion::clear_has_qx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quaternion::clear_qx() {
  qx_ = ::google::protobuf::internal::NaN();
  clear_has_qx();
}
inline double Quaternion::qx() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Quaternion.qx)
  return qx_;
}
inline void Quaternion::set_qx(double value) {
  set_has_qx();
  qx_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Quaternion.qx)
}

// optional double qy = 2 [default = nan];
inline bool Quaternion::has_qy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quaternion::set_has_qy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quaternion::clear_has_qy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quaternion::clear_qy() {
  qy_ = ::google::protobuf::internal::NaN();
  clear_has_qy();
}
inline double Quaternion::qy() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Quaternion.qy)
  return qy_;
}
inline void Quaternion::set_qy(double value) {
  set_has_qy();
  qy_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Quaternion.qy)
}

// optional double qz = 3 [default = nan];
inline bool Quaternion::has_qz() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Quaternion::set_has_qz() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Quaternion::clear_has_qz() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Quaternion::clear_qz() {
  qz_ = ::google::protobuf::internal::NaN();
  clear_has_qz();
}
inline double Quaternion::qz() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Quaternion.qz)
  return qz_;
}
inline void Quaternion::set_qz(double value) {
  set_has_qz();
  qz_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Quaternion.qz)
}

// optional double qw = 4 [default = nan];
inline bool Quaternion::has_qw() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Quaternion::set_has_qw() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Quaternion::clear_has_qw() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Quaternion::clear_qw() {
  qw_ = ::google::protobuf::internal::NaN();
  clear_has_qw();
}
inline double Quaternion::qw() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Quaternion.qw)
  return qw_;
}
inline void Quaternion::set_qw(double value) {
  set_has_qw();
  qw_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Quaternion.qw)
}

// -------------------------------------------------------------------

// Velocity

// optional .COWA.NavMsg.Point3D linear = 1;
inline bool Velocity::has_linear() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Velocity::set_has_linear() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Velocity::clear_has_linear() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Velocity::clear_linear() {
  if (linear_ != NULL) linear_->::COWA::NavMsg::Point3D::Clear();
  clear_has_linear();
}
inline const ::COWA::NavMsg::Point3D& Velocity::linear() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Velocity.linear)
  return linear_ != NULL ? *linear_
                         : *::COWA::NavMsg::Point3D::internal_default_instance();
}
inline ::COWA::NavMsg::Point3D* Velocity::mutable_linear() {
  set_has_linear();
  if (linear_ == NULL) {
    linear_ = new ::COWA::NavMsg::Point3D;
  }
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.Velocity.linear)
  return linear_;
}
inline ::COWA::NavMsg::Point3D* Velocity::release_linear() {
  // @@protoc_insertion_point(field_release:COWA.NavMsg.Velocity.linear)
  clear_has_linear();
  ::COWA::NavMsg::Point3D* temp = linear_;
  linear_ = NULL;
  return temp;
}
inline void Velocity::set_allocated_linear(::COWA::NavMsg::Point3D* linear) {
  delete linear_;
  linear_ = linear;
  if (linear) {
    set_has_linear();
  } else {
    clear_has_linear();
  }
  // @@protoc_insertion_point(field_set_allocated:COWA.NavMsg.Velocity.linear)
}

// optional .COWA.NavMsg.Point3D angular = 2;
inline bool Velocity::has_angular() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Velocity::set_has_angular() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Velocity::clear_has_angular() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Velocity::clear_angular() {
  if (angular_ != NULL) angular_->::COWA::NavMsg::Point3D::Clear();
  clear_has_angular();
}
inline const ::COWA::NavMsg::Point3D& Velocity::angular() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Velocity.angular)
  return angular_ != NULL ? *angular_
                         : *::COWA::NavMsg::Point3D::internal_default_instance();
}
inline ::COWA::NavMsg::Point3D* Velocity::mutable_angular() {
  set_has_angular();
  if (angular_ == NULL) {
    angular_ = new ::COWA::NavMsg::Point3D;
  }
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.Velocity.angular)
  return angular_;
}
inline ::COWA::NavMsg::Point3D* Velocity::release_angular() {
  // @@protoc_insertion_point(field_release:COWA.NavMsg.Velocity.angular)
  clear_has_angular();
  ::COWA::NavMsg::Point3D* temp = angular_;
  angular_ = NULL;
  return temp;
}
inline void Velocity::set_allocated_angular(::COWA::NavMsg::Point3D* angular) {
  delete angular_;
  angular_ = angular;
  if (angular) {
    set_has_angular();
  } else {
    clear_has_angular();
  }
  // @@protoc_insertion_point(field_set_allocated:COWA.NavMsg.Velocity.angular)
}

// -------------------------------------------------------------------

// Covariance

// optional double x = 1 [default = nan];
inline bool Covariance::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Covariance::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Covariance::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Covariance::clear_x() {
  x_ = ::google::protobuf::internal::NaN();
  clear_has_x();
}
inline double Covariance::x() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.x)
  return x_;
}
inline void Covariance::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.x)
}

// optional double y = 2 [default = nan];
inline bool Covariance::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Covariance::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Covariance::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Covariance::clear_y() {
  y_ = ::google::protobuf::internal::NaN();
  clear_has_y();
}
inline double Covariance::y() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.y)
  return y_;
}
inline void Covariance::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.y)
}

// optional double z = 3 [default = nan];
inline bool Covariance::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Covariance::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Covariance::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Covariance::clear_z() {
  z_ = ::google::protobuf::internal::NaN();
  clear_has_z();
}
inline double Covariance::z() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.z)
  return z_;
}
inline void Covariance::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.z)
}

// optional double p = 4 [default = nan];
inline bool Covariance::has_p() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Covariance::set_has_p() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Covariance::clear_has_p() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Covariance::clear_p() {
  p_ = ::google::protobuf::internal::NaN();
  clear_has_p();
}
inline double Covariance::p() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.p)
  return p_;
}
inline void Covariance::set_p(double value) {
  set_has_p();
  p_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.p)
}

// optional double r = 5 [default = nan];
inline bool Covariance::has_r() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Covariance::set_has_r() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Covariance::clear_has_r() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Covariance::clear_r() {
  r_ = ::google::protobuf::internal::NaN();
  clear_has_r();
}
inline double Covariance::r() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.r)
  return r_;
}
inline void Covariance::set_r(double value) {
  set_has_r();
  r_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.r)
}

// optional double h = 6 [default = nan];
inline bool Covariance::has_h() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Covariance::set_has_h() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Covariance::clear_has_h() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Covariance::clear_h() {
  h_ = ::google::protobuf::internal::NaN();
  clear_has_h();
}
inline double Covariance::h() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.h)
  return h_;
}
inline void Covariance::set_h(double value) {
  set_has_h();
  h_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.h)
}

// optional double xt = 7 [default = nan];
inline bool Covariance::has_xt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Covariance::set_has_xt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Covariance::clear_has_xt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Covariance::clear_xt() {
  xt_ = ::google::protobuf::internal::NaN();
  clear_has_xt();
}
inline double Covariance::xt() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.xt)
  return xt_;
}
inline void Covariance::set_xt(double value) {
  set_has_xt();
  xt_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.xt)
}

// optional double yt = 8 [default = nan];
inline bool Covariance::has_yt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Covariance::set_has_yt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Covariance::clear_has_yt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Covariance::clear_yt() {
  yt_ = ::google::protobuf::internal::NaN();
  clear_has_yt();
}
inline double Covariance::yt() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.yt)
  return yt_;
}
inline void Covariance::set_yt(double value) {
  set_has_yt();
  yt_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.yt)
}

// optional double zt = 9 [default = nan];
inline bool Covariance::has_zt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Covariance::set_has_zt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Covariance::clear_has_zt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Covariance::clear_zt() {
  zt_ = ::google::protobuf::internal::NaN();
  clear_has_zt();
}
inline double Covariance::zt() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.zt)
  return zt_;
}
inline void Covariance::set_zt(double value) {
  set_has_zt();
  zt_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.zt)
}

// optional double pr = 10 [default = nan];
inline bool Covariance::has_pr() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Covariance::set_has_pr() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Covariance::clear_has_pr() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Covariance::clear_pr() {
  pr_ = ::google::protobuf::internal::NaN();
  clear_has_pr();
}
inline double Covariance::pr() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.pr)
  return pr_;
}
inline void Covariance::set_pr(double value) {
  set_has_pr();
  pr_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.pr)
}

// optional double rr = 11 [default = nan];
inline bool Covariance::has_rr() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Covariance::set_has_rr() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Covariance::clear_has_rr() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Covariance::clear_rr() {
  rr_ = ::google::protobuf::internal::NaN();
  clear_has_rr();
}
inline double Covariance::rr() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.rr)
  return rr_;
}
inline void Covariance::set_rr(double value) {
  set_has_rr();
  rr_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.rr)
}

// optional double hr = 12 [default = nan];
inline bool Covariance::has_hr() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Covariance::set_has_hr() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Covariance::clear_has_hr() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Covariance::clear_hr() {
  hr_ = ::google::protobuf::internal::NaN();
  clear_has_hr();
}
inline double Covariance::hr() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.hr)
  return hr_;
}
inline void Covariance::set_hr(double value) {
  set_has_hr();
  hr_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.hr)
}

// repeated double matrix = 13;
inline int Covariance::matrix_size() const {
  return matrix_.size();
}
inline void Covariance::clear_matrix() {
  matrix_.Clear();
}
inline double Covariance::matrix(int index) const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.matrix)
  return matrix_.Get(index);
}
inline void Covariance::set_matrix(int index, double value) {
  matrix_.Set(index, value);
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.matrix)
}
inline void Covariance::add_matrix(double value) {
  matrix_.Add(value);
  // @@protoc_insertion_point(field_add:COWA.NavMsg.Covariance.matrix)
}
inline const ::google::protobuf::RepeatedField< double >&
Covariance::matrix() const {
  // @@protoc_insertion_point(field_list:COWA.NavMsg.Covariance.matrix)
  return matrix_;
}
inline ::google::protobuf::RepeatedField< double >*
Covariance::mutable_matrix() {
  // @@protoc_insertion_point(field_mutable_list:COWA.NavMsg.Covariance.matrix)
  return &matrix_;
}

// -------------------------------------------------------------------

// Pose

// optional .COWA.NavMsg.Point3D position = 1;
inline bool Pose::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Pose::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Pose::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Pose::clear_position() {
  if (position_ != NULL) position_->::COWA::NavMsg::Point3D::Clear();
  clear_has_position();
}
inline const ::COWA::NavMsg::Point3D& Pose::position() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Pose.position)
  return position_ != NULL ? *position_
                         : *::COWA::NavMsg::Point3D::internal_default_instance();
}
inline ::COWA::NavMsg::Point3D* Pose::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    position_ = new ::COWA::NavMsg::Point3D;
  }
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.Pose.position)
  return position_;
}
inline ::COWA::NavMsg::Point3D* Pose::release_position() {
  // @@protoc_insertion_point(field_release:COWA.NavMsg.Pose.position)
  clear_has_position();
  ::COWA::NavMsg::Point3D* temp = position_;
  position_ = NULL;
  return temp;
}
inline void Pose::set_allocated_position(::COWA::NavMsg::Point3D* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:COWA.NavMsg.Pose.position)
}

// optional .COWA.NavMsg.Quaternion rotation = 2;
inline bool Pose::has_rotation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Pose::set_has_rotation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Pose::clear_has_rotation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Pose::clear_rotation() {
  if (rotation_ != NULL) rotation_->::COWA::NavMsg::Quaternion::Clear();
  clear_has_rotation();
}
inline const ::COWA::NavMsg::Quaternion& Pose::rotation() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Pose.rotation)
  return rotation_ != NULL ? *rotation_
                         : *::COWA::NavMsg::Quaternion::internal_default_instance();
}
inline ::COWA::NavMsg::Quaternion* Pose::mutable_rotation() {
  set_has_rotation();
  if (rotation_ == NULL) {
    rotation_ = new ::COWA::NavMsg::Quaternion;
  }
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.Pose.rotation)
  return rotation_;
}
inline ::COWA::NavMsg::Quaternion* Pose::release_rotation() {
  // @@protoc_insertion_point(field_release:COWA.NavMsg.Pose.rotation)
  clear_has_rotation();
  ::COWA::NavMsg::Quaternion* temp = rotation_;
  rotation_ = NULL;
  return temp;
}
inline void Pose::set_allocated_rotation(::COWA::NavMsg::Quaternion* rotation) {
  delete rotation_;
  rotation_ = rotation;
  if (rotation) {
    set_has_rotation();
  } else {
    clear_has_rotation();
  }
  // @@protoc_insertion_point(field_set_allocated:COWA.NavMsg.Pose.rotation)
}

// optional .COWA.NavMsg.Covariance covariance = 3;
inline bool Pose::has_covariance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Pose::set_has_covariance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Pose::clear_has_covariance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Pose::clear_covariance() {
  if (covariance_ != NULL) covariance_->::COWA::NavMsg::Covariance::Clear();
  clear_has_covariance();
}
inline const ::COWA::NavMsg::Covariance& Pose::covariance() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Pose.covariance)
  return covariance_ != NULL ? *covariance_
                         : *::COWA::NavMsg::Covariance::internal_default_instance();
}
inline ::COWA::NavMsg::Covariance* Pose::mutable_covariance() {
  set_has_covariance();
  if (covariance_ == NULL) {
    covariance_ = new ::COWA::NavMsg::Covariance;
  }
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.Pose.covariance)
  return covariance_;
}
inline ::COWA::NavMsg::Covariance* Pose::release_covariance() {
  // @@protoc_insertion_point(field_release:COWA.NavMsg.Pose.covariance)
  clear_has_covariance();
  ::COWA::NavMsg::Covariance* temp = covariance_;
  covariance_ = NULL;
  return temp;
}
inline void Pose::set_allocated_covariance(::COWA::NavMsg::Covariance* covariance) {
  delete covariance_;
  covariance_ = covariance;
  if (covariance) {
    set_has_covariance();
  } else {
    clear_has_covariance();
  }
  // @@protoc_insertion_point(field_set_allocated:COWA.NavMsg.Pose.covariance)
}

// -------------------------------------------------------------------

// PoseStamped

// optional uint64 timestamp = 1;
inline bool PoseStamped::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PoseStamped::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PoseStamped::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PoseStamped::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 PoseStamped::timestamp() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStamped.timestamp)
  return timestamp_;
}
inline void PoseStamped::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.PoseStamped.timestamp)
}

// optional bytes frame_id = 2;
inline bool PoseStamped::has_frame_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PoseStamped::set_has_frame_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PoseStamped::clear_has_frame_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PoseStamped::clear_frame_id() {
  frame_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_frame_id();
}
inline const ::std::string& PoseStamped::frame_id() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStamped.frame_id)
  return frame_id_.GetNoArena();
}
inline void PoseStamped::set_frame_id(const ::std::string& value) {
  set_has_frame_id();
  frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:COWA.NavMsg.PoseStamped.frame_id)
}
#if LANG_CXX11
inline void PoseStamped::set_frame_id(::std::string&& value) {
  set_has_frame_id();
  frame_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:COWA.NavMsg.PoseStamped.frame_id)
}
#endif
inline void PoseStamped::set_frame_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_frame_id();
  frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:COWA.NavMsg.PoseStamped.frame_id)
}
inline void PoseStamped::set_frame_id(const void* value, size_t size) {
  set_has_frame_id();
  frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:COWA.NavMsg.PoseStamped.frame_id)
}
inline ::std::string* PoseStamped::mutable_frame_id() {
  set_has_frame_id();
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.PoseStamped.frame_id)
  return frame_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PoseStamped::release_frame_id() {
  // @@protoc_insertion_point(field_release:COWA.NavMsg.PoseStamped.frame_id)
  clear_has_frame_id();
  return frame_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoseStamped::set_allocated_frame_id(::std::string* frame_id) {
  if (frame_id != NULL) {
    set_has_frame_id();
  } else {
    clear_has_frame_id();
  }
  frame_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frame_id);
  // @@protoc_insertion_point(field_set_allocated:COWA.NavMsg.PoseStamped.frame_id)
}

// optional uint32 sequence = 3;
inline bool PoseStamped::has_sequence() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PoseStamped::set_has_sequence() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PoseStamped::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PoseStamped::clear_sequence() {
  sequence_ = 0u;
  clear_has_sequence();
}
inline ::google::protobuf::uint32 PoseStamped::sequence() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStamped.sequence)
  return sequence_;
}
inline void PoseStamped::set_sequence(::google::protobuf::uint32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.PoseStamped.sequence)
}

// optional .COWA.NavMsg.Pose pose = 4;
inline bool PoseStamped::has_pose() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PoseStamped::set_has_pose() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PoseStamped::clear_has_pose() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PoseStamped::clear_pose() {
  if (pose_ != NULL) pose_->::COWA::NavMsg::Pose::Clear();
  clear_has_pose();
}
inline const ::COWA::NavMsg::Pose& PoseStamped::pose() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStamped.pose)
  return pose_ != NULL ? *pose_
                         : *::COWA::NavMsg::Pose::internal_default_instance();
}
inline ::COWA::NavMsg::Pose* PoseStamped::mutable_pose() {
  set_has_pose();
  if (pose_ == NULL) {
    pose_ = new ::COWA::NavMsg::Pose;
  }
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.PoseStamped.pose)
  return pose_;
}
inline ::COWA::NavMsg::Pose* PoseStamped::release_pose() {
  // @@protoc_insertion_point(field_release:COWA.NavMsg.PoseStamped.pose)
  clear_has_pose();
  ::COWA::NavMsg::Pose* temp = pose_;
  pose_ = NULL;
  return temp;
}
inline void PoseStamped::set_allocated_pose(::COWA::NavMsg::Pose* pose) {
  delete pose_;
  pose_ = pose;
  if (pose) {
    set_has_pose();
  } else {
    clear_has_pose();
  }
  // @@protoc_insertion_point(field_set_allocated:COWA.NavMsg.PoseStamped.pose)
}

// optional .COWA.NavMsg.Velocity velocity = 5;
inline bool PoseStamped::has_velocity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PoseStamped::set_has_velocity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PoseStamped::clear_has_velocity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PoseStamped::clear_velocity() {
  if (velocity_ != NULL) velocity_->::COWA::NavMsg::Velocity::Clear();
  clear_has_velocity();
}
inline const ::COWA::NavMsg::Velocity& PoseStamped::velocity() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStamped.velocity)
  return velocity_ != NULL ? *velocity_
                         : *::COWA::NavMsg::Velocity::internal_default_instance();
}
inline ::COWA::NavMsg::Velocity* PoseStamped::mutable_velocity() {
  set_has_velocity();
  if (velocity_ == NULL) {
    velocity_ = new ::COWA::NavMsg::Velocity;
  }
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.PoseStamped.velocity)
  return velocity_;
}
inline ::COWA::NavMsg::Velocity* PoseStamped::release_velocity() {
  // @@protoc_insertion_point(field_release:COWA.NavMsg.PoseStamped.velocity)
  clear_has_velocity();
  ::COWA::NavMsg::Velocity* temp = velocity_;
  velocity_ = NULL;
  return temp;
}
inline void PoseStamped::set_allocated_velocity(::COWA::NavMsg::Velocity* velocity) {
  delete velocity_;
  velocity_ = velocity;
  if (velocity) {
    set_has_velocity();
  } else {
    clear_has_velocity();
  }
  // @@protoc_insertion_point(field_set_allocated:COWA.NavMsg.PoseStamped.velocity)
}

// repeated .COWA.NavMsg.PoseStamped.Status status = 6;
inline int PoseStamped::status_size() const {
  return status_.size();
}
inline void PoseStamped::clear_status() {
  status_.Clear();
}
inline ::COWA::NavMsg::PoseStamped_Status PoseStamped::status(int index) const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStamped.status)
  return static_cast< ::COWA::NavMsg::PoseStamped_Status >(status_.Get(index));
}
inline void PoseStamped::set_status(int index, ::COWA::NavMsg::PoseStamped_Status value) {
  assert(::COWA::NavMsg::PoseStamped_Status_IsValid(value));
  status_.Set(index, value);
  // @@protoc_insertion_point(field_set:COWA.NavMsg.PoseStamped.status)
}
inline void PoseStamped::add_status(::COWA::NavMsg::PoseStamped_Status value) {
  assert(::COWA::NavMsg::PoseStamped_Status_IsValid(value));
  status_.Add(value);
  // @@protoc_insertion_point(field_add:COWA.NavMsg.PoseStamped.status)
}
inline const ::google::protobuf::RepeatedField<int>&
PoseStamped::status() const {
  // @@protoc_insertion_point(field_list:COWA.NavMsg.PoseStamped.status)
  return status_;
}
inline ::google::protobuf::RepeatedField<int>*
PoseStamped::mutable_status() {
  // @@protoc_insertion_point(field_mutable_list:COWA.NavMsg.PoseStamped.status)
  return &status_;
}

// optional int32 latency_ms = 7;
inline bool PoseStamped::has_latency_ms() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PoseStamped::set_has_latency_ms() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PoseStamped::clear_has_latency_ms() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PoseStamped::clear_latency_ms() {
  latency_ms_ = 0;
  clear_has_latency_ms();
}
inline ::google::protobuf::int32 PoseStamped::latency_ms() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStamped.latency_ms)
  return latency_ms_;
}
inline void PoseStamped::set_latency_ms(::google::protobuf::int32 value) {
  set_has_latency_ms();
  latency_ms_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.PoseStamped.latency_ms)
}

// repeated .COWA.NavMsg.PoseStamped.Status internstatus = 8;
inline int PoseStamped::internstatus_size() const {
  return internstatus_.size();
}
inline void PoseStamped::clear_internstatus() {
  internstatus_.Clear();
}
inline ::COWA::NavMsg::PoseStamped_Status PoseStamped::internstatus(int index) const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStamped.internstatus)
  return static_cast< ::COWA::NavMsg::PoseStamped_Status >(internstatus_.Get(index));
}
inline void PoseStamped::set_internstatus(int index, ::COWA::NavMsg::PoseStamped_Status value) {
  assert(::COWA::NavMsg::PoseStamped_Status_IsValid(value));
  internstatus_.Set(index, value);
  // @@protoc_insertion_point(field_set:COWA.NavMsg.PoseStamped.internstatus)
}
inline void PoseStamped::add_internstatus(::COWA::NavMsg::PoseStamped_Status value) {
  assert(::COWA::NavMsg::PoseStamped_Status_IsValid(value));
  internstatus_.Add(value);
  // @@protoc_insertion_point(field_add:COWA.NavMsg.PoseStamped.internstatus)
}
inline const ::google::protobuf::RepeatedField<int>&
PoseStamped::internstatus() const {
  // @@protoc_insertion_point(field_list:COWA.NavMsg.PoseStamped.internstatus)
  return internstatus_;
}
inline ::google::protobuf::RepeatedField<int>*
PoseStamped::mutable_internstatus() {
  // @@protoc_insertion_point(field_mutable_list:COWA.NavMsg.PoseStamped.internstatus)
  return &internstatus_;
}

// -------------------------------------------------------------------

// PoseStampedArray

// repeated .COWA.NavMsg.PoseStamped poses = 1;
inline int PoseStampedArray::poses_size() const {
  return poses_.size();
}
inline void PoseStampedArray::clear_poses() {
  poses_.Clear();
}
inline const ::COWA::NavMsg::PoseStamped& PoseStampedArray::poses(int index) const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStampedArray.poses)
  return poses_.Get(index);
}
inline ::COWA::NavMsg::PoseStamped* PoseStampedArray::mutable_poses(int index) {
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.PoseStampedArray.poses)
  return poses_.Mutable(index);
}
inline ::COWA::NavMsg::PoseStamped* PoseStampedArray::add_poses() {
  // @@protoc_insertion_point(field_add:COWA.NavMsg.PoseStampedArray.poses)
  return poses_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::COWA::NavMsg::PoseStamped >*
PoseStampedArray::mutable_poses() {
  // @@protoc_insertion_point(field_mutable_list:COWA.NavMsg.PoseStampedArray.poses)
  return &poses_;
}
inline const ::google::protobuf::RepeatedPtrField< ::COWA::NavMsg::PoseStamped >&
PoseStampedArray::poses() const {
  // @@protoc_insertion_point(field_list:COWA.NavMsg.PoseStampedArray.poses)
  return poses_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace NavMsg
}  // namespace COWA

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::COWA::NavMsg::PoseStamped_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::COWA::NavMsg::PoseStamped_Status>() {
  return ::COWA::NavMsg::PoseStamped_Status_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pose_2eproto__INCLUDED
