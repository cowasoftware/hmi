// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pose.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pose.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace COWA {
namespace NavMsg {
class Point3DDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Point3D> {
} _Point3D_default_instance_;
class QuaternionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Quaternion> {
} _Quaternion_default_instance_;
class VelocityDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Velocity> {
} _Velocity_default_instance_;
class CovarianceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Covariance> {
} _Covariance_default_instance_;
class PoseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Pose> {
} _Pose_default_instance_;
class PoseStampedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PoseStamped> {
} _PoseStamped_default_instance_;
class PoseStampedArrayDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PoseStampedArray> {
} _PoseStampedArray_default_instance_;

namespace protobuf_pose_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quaternion, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quaternion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quaternion, qx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quaternion, qy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quaternion, qz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quaternion, qw_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Velocity, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Velocity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Velocity, linear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Velocity, angular_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Covariance, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Covariance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Covariance, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Covariance, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Covariance, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Covariance, p_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Covariance, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Covariance, h_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Covariance, xt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Covariance, yt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Covariance, zt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Covariance, pr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Covariance, rr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Covariance, hr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Covariance, matrix_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pose, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pose, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pose, rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pose, covariance_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PoseStamped, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PoseStamped, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PoseStamped, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PoseStamped, frame_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PoseStamped, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PoseStamped, pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PoseStamped, velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PoseStamped, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PoseStamped, latency_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PoseStamped, internstatus_),
  3,
  0,
  4,
  1,
  2,
  ~0u,
  5,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PoseStampedArray, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PoseStampedArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PoseStampedArray, poses_),
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(Point3D)},
  { 11, 20, sizeof(Quaternion)},
  { 24, 31, sizeof(Velocity)},
  { 33, 51, sizeof(Covariance)},
  { 64, 72, sizeof(Pose)},
  { 75, 88, sizeof(PoseStamped)},
  { 96, 102, sizeof(PoseStampedArray)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Point3D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Quaternion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Velocity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Covariance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Pose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PoseStamped_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PoseStampedArray_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "pose.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace

void TableStruct::Shutdown() {
  _Point3D_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Quaternion_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Velocity_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _Covariance_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Pose_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _PoseStamped_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _PoseStampedArray_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Point3D_default_instance_.DefaultConstruct();
  _Quaternion_default_instance_.DefaultConstruct();
  _Velocity_default_instance_.DefaultConstruct();
  _Covariance_default_instance_.DefaultConstruct();
  _Pose_default_instance_.DefaultConstruct();
  _PoseStamped_default_instance_.DefaultConstruct();
  _PoseStampedArray_default_instance_.DefaultConstruct();
  _Velocity_default_instance_.get_mutable()->linear_ = const_cast< ::COWA::NavMsg::Point3D*>(
      ::COWA::NavMsg::Point3D::internal_default_instance());
  _Velocity_default_instance_.get_mutable()->angular_ = const_cast< ::COWA::NavMsg::Point3D*>(
      ::COWA::NavMsg::Point3D::internal_default_instance());
  _Pose_default_instance_.get_mutable()->position_ = const_cast< ::COWA::NavMsg::Point3D*>(
      ::COWA::NavMsg::Point3D::internal_default_instance());
  _Pose_default_instance_.get_mutable()->rotation_ = const_cast< ::COWA::NavMsg::Quaternion*>(
      ::COWA::NavMsg::Quaternion::internal_default_instance());
  _Pose_default_instance_.get_mutable()->covariance_ = const_cast< ::COWA::NavMsg::Covariance*>(
      ::COWA::NavMsg::Covariance::internal_default_instance());
  _PoseStamped_default_instance_.get_mutable()->pose_ = const_cast< ::COWA::NavMsg::Pose*>(
      ::COWA::NavMsg::Pose::internal_default_instance());
  _PoseStamped_default_instance_.get_mutable()->velocity_ = const_cast< ::COWA::NavMsg::Velocity*>(
      ::COWA::NavMsg::Velocity::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\npose.proto\022\013COWA.NavMsg\"9\n\007Point3D\022\016\n\001"
      "x\030\001 \001(\001:\003nan\022\016\n\001y\030\002 \001(\001:\003nan\022\016\n\001z\030\003 \001(\001:"
      "\003nan\"P\n\nQuaternion\022\017\n\002qx\030\001 \001(\001:\003nan\022\017\n\002q"
      "y\030\002 \001(\001:\003nan\022\017\n\002qz\030\003 \001(\001:\003nan\022\017\n\002qw\030\004 \001("
      "\001:\003nan\"W\n\010Velocity\022$\n\006linear\030\001 \001(\0132\024.COW"
      "A.NavMsg.Point3D\022%\n\007angular\030\002 \001(\0132\024.COWA"
      ".NavMsg.Point3D\"\342\001\n\nCovariance\022\016\n\001x\030\001 \001("
      "\001:\003nan\022\016\n\001y\030\002 \001(\001:\003nan\022\016\n\001z\030\003 \001(\001:\003nan\022\016"
      "\n\001p\030\004 \001(\001:\003nan\022\016\n\001r\030\005 \001(\001:\003nan\022\016\n\001h\030\006 \001("
      "\001:\003nan\022\017\n\002xt\030\007 \001(\001:\003nan\022\017\n\002yt\030\010 \001(\001:\003nan"
      "\022\017\n\002zt\030\t \001(\001:\003nan\022\017\n\002pr\030\n \001(\001:\003nan\022\017\n\002rr"
      "\030\013 \001(\001:\003nan\022\017\n\002hr\030\014 \001(\001:\003nan\022\016\n\006matrix\030\r"
      " \003(\001\"\206\001\n\004Pose\022&\n\010position\030\001 \001(\0132\024.COWA.N"
      "avMsg.Point3D\022)\n\010rotation\030\002 \001(\0132\027.COWA.N"
      "avMsg.Quaternion\022+\n\ncovariance\030\003 \001(\0132\027.C"
      "OWA.NavMsg.Covariance\"\350\007\n\013PoseStamped\022\021\n"
      "\ttimestamp\030\001 \001(\004\022\020\n\010frame_id\030\002 \001(\014\022\020\n\010se"
      "quence\030\003 \001(\r\022\037\n\004pose\030\004 \001(\0132\021.COWA.NavMsg"
      ".Pose\022\'\n\010velocity\030\005 \001(\0132\025.COWA.NavMsg.Ve"
      "locity\022/\n\006status\030\006 \003(\0162\037.COWA.NavMsg.Pos"
      "eStamped.Status\022\022\n\nlatency_ms\030\007 \001(\005\0225\n\014i"
      "nternstatus\030\010 \003(\0162\037.COWA.NavMsg.PoseStam"
      "ped.Status\"\333\005\n\006Status\022\024\n\020ERROR_TF_NCONFI"
      "G\020\001\022\027\n\023ERROR_TSTAMP_FAILED\020\002\022\024\n\020ERROR_RT"
      "K_FAILED\020\003\022\030\n\024ERROR_RTK_YAW_FAILED\020\004\022\032\n\026"
      "ERROR_RTK_YAW_MISMATCH\020\005\022\026\n\022ERROR_RTK_MI"
      "SMATCH\020\006\022\024\n\020ERROR_RTK_TSTAMP\020\007\022\026\n\022ERROR_"
      "RTK_TF_ERROR\020\010\022\026\n\022ERROR_IMU_TF_ERROR\020\t\022\023"
      "\n\017WARN_RTK_TSTAMP\020e\022\017\n\013WARN_RTK_NA\020f\022\023\n\017"
      "WARN_RTK_YAW_NA\020g\022\032\n\026WARN_CHASSIS_TIMEST"
      "AMP\020h\022\035\n\031WARN_CHASSIS_TSTAMP_SPEED\020i\022\026\n\022"
      "WARN_CHASSIS_SPEED\020j\022\034\n\030WARN_CHASSIS_WHE"
      "EL_SPEED\020k\022\026\n\021WARN_LIDAR_TSTAMP\020\311\001\022\034\n\027WA"
      "RN_LIDAR_POS_MISMATCH\020\312\001\022\034\n\027WARN_LIDAR_A"
      "LT_MISMATCH\020\313\001\022\034\n\027WARN_LIDAR_YAW_MISMATC"
      "H\020\314\001\022\025\n\020WARN_LANE_TSTAMP\020\315\001\022\033\n\026WARN_LANE"
      "_POS_MISMATCH\020\316\001\022\033\n\026WARN_LANE_ALT_MISMAT"
      "CH\020\317\001\022\033\n\026WARN_LANE_YAW_MISMATCH\020\320\001\022\025\n\020WA"
      "RN_CURB_TSTAMP\020\321\001\022\033\n\026WARN_CURB_POS_MISMA"
      "TCH\020\322\001\022\033\n\026WARN_CURB_ALT_MISMATCH\020\323\001\022\033\n\026W"
      "ARN_CURB_YAW_MISMATCH\020\324\001\";\n\020PoseStampedA"
      "rray\022\'\n\005poses\030\001 \003(\0132\030.COWA.NavMsg.PoseSt"
      "amped"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1685);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pose.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_pose_2eproto

const ::google::protobuf::EnumDescriptor* PoseStamped_Status_descriptor() {
  protobuf_pose_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pose_2eproto::file_level_enum_descriptors[0];
}
bool PoseStamped_Status_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PoseStamped_Status PoseStamped::ERROR_TF_NCONFIG;
const PoseStamped_Status PoseStamped::ERROR_TSTAMP_FAILED;
const PoseStamped_Status PoseStamped::ERROR_RTK_FAILED;
const PoseStamped_Status PoseStamped::ERROR_RTK_YAW_FAILED;
const PoseStamped_Status PoseStamped::ERROR_RTK_YAW_MISMATCH;
const PoseStamped_Status PoseStamped::ERROR_RTK_MISMATCH;
const PoseStamped_Status PoseStamped::ERROR_RTK_TSTAMP;
const PoseStamped_Status PoseStamped::ERROR_RTK_TF_ERROR;
const PoseStamped_Status PoseStamped::ERROR_IMU_TF_ERROR;
const PoseStamped_Status PoseStamped::WARN_RTK_TSTAMP;
const PoseStamped_Status PoseStamped::WARN_RTK_NA;
const PoseStamped_Status PoseStamped::WARN_RTK_YAW_NA;
const PoseStamped_Status PoseStamped::WARN_CHASSIS_TIMESTAMP;
const PoseStamped_Status PoseStamped::WARN_CHASSIS_TSTAMP_SPEED;
const PoseStamped_Status PoseStamped::WARN_CHASSIS_SPEED;
const PoseStamped_Status PoseStamped::WARN_CHASSIS_WHEEL_SPEED;
const PoseStamped_Status PoseStamped::WARN_LIDAR_TSTAMP;
const PoseStamped_Status PoseStamped::WARN_LIDAR_POS_MISMATCH;
const PoseStamped_Status PoseStamped::WARN_LIDAR_ALT_MISMATCH;
const PoseStamped_Status PoseStamped::WARN_LIDAR_YAW_MISMATCH;
const PoseStamped_Status PoseStamped::WARN_LANE_TSTAMP;
const PoseStamped_Status PoseStamped::WARN_LANE_POS_MISMATCH;
const PoseStamped_Status PoseStamped::WARN_LANE_ALT_MISMATCH;
const PoseStamped_Status PoseStamped::WARN_LANE_YAW_MISMATCH;
const PoseStamped_Status PoseStamped::WARN_CURB_TSTAMP;
const PoseStamped_Status PoseStamped::WARN_CURB_POS_MISMATCH;
const PoseStamped_Status PoseStamped::WARN_CURB_ALT_MISMATCH;
const PoseStamped_Status PoseStamped::WARN_CURB_YAW_MISMATCH;
const PoseStamped_Status PoseStamped::Status_MIN;
const PoseStamped_Status PoseStamped::Status_MAX;
const int PoseStamped::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point3D::kXFieldNumber;
const int Point3D::kYFieldNumber;
const int Point3D::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point3D::Point3D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pose_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.NavMsg.Point3D)
}
Point3D::Point3D(const Point3D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:COWA.NavMsg.Point3D)
}

void Point3D::SharedCtor() {
  _cached_size_ = 0;
  x_ = ::google::protobuf::internal::NaN();
  y_ = ::google::protobuf::internal::NaN();
  z_ = ::google::protobuf::internal::NaN();
}

Point3D::~Point3D() {
  // @@protoc_insertion_point(destructor:COWA.NavMsg.Point3D)
  SharedDtor();
}

void Point3D::SharedDtor() {
}

void Point3D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point3D::descriptor() {
  protobuf_pose_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pose_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point3D& Point3D::default_instance() {
  protobuf_pose_2eproto::InitDefaults();
  return *internal_default_instance();
}

Point3D* Point3D::New(::google::protobuf::Arena* arena) const {
  Point3D* n = new Point3D;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point3D::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.NavMsg.Point3D)
  if (_has_bits_[0 / 32] & 7u) {
    x_ = ::google::protobuf::internal::NaN();
    y_ = ::google::protobuf::internal::NaN();
    z_ = ::google::protobuf::internal::NaN();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Point3D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.NavMsg.Point3D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double x = 1 [default = nan];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double y = 2 [default = nan];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double z = 3 [default = nan];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.NavMsg.Point3D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.NavMsg.Point3D)
  return false;
#undef DO_
}

void Point3D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.NavMsg.Point3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double x = 1 [default = nan];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // optional double y = 2 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // optional double z = 3 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:COWA.NavMsg.Point3D)
}

::google::protobuf::uint8* Point3D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.NavMsg.Point3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double x = 1 [default = nan];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // optional double y = 2 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // optional double z = 3 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:COWA.NavMsg.Point3D)
  return target;
}

size_t Point3D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.NavMsg.Point3D)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional double x = 1 [default = nan];
    if (has_x()) {
      total_size += 1 + 8;
    }

    // optional double y = 2 [default = nan];
    if (has_y()) {
      total_size += 1 + 8;
    }

    // optional double z = 3 [default = nan];
    if (has_z()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point3D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.NavMsg.Point3D)
  GOOGLE_DCHECK_NE(&from, this);
  const Point3D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point3D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.NavMsg.Point3D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.NavMsg.Point3D)
    MergeFrom(*source);
  }
}

void Point3D::MergeFrom(const Point3D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.NavMsg.Point3D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Point3D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.NavMsg.Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3D::CopyFrom(const Point3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.NavMsg.Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3D::IsInitialized() const {
  return true;
}

void Point3D::Swap(Point3D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point3D::InternalSwap(Point3D* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point3D::GetMetadata() const {
  protobuf_pose_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pose_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Point3D

// optional double x = 1 [default = nan];
bool Point3D::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Point3D::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void Point3D::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void Point3D::clear_x() {
  x_ = ::google::protobuf::internal::NaN();
  clear_has_x();
}
double Point3D::x() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Point3D.x)
  return x_;
}
void Point3D::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Point3D.x)
}

// optional double y = 2 [default = nan];
bool Point3D::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Point3D::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void Point3D::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void Point3D::clear_y() {
  y_ = ::google::protobuf::internal::NaN();
  clear_has_y();
}
double Point3D::y() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Point3D.y)
  return y_;
}
void Point3D::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Point3D.y)
}

// optional double z = 3 [default = nan];
bool Point3D::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Point3D::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
void Point3D::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
void Point3D::clear_z() {
  z_ = ::google::protobuf::internal::NaN();
  clear_has_z();
}
double Point3D::z() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Point3D.z)
  return z_;
}
void Point3D::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Point3D.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Quaternion::kQxFieldNumber;
const int Quaternion::kQyFieldNumber;
const int Quaternion::kQzFieldNumber;
const int Quaternion::kQwFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Quaternion::Quaternion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pose_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.NavMsg.Quaternion)
}
Quaternion::Quaternion(const Quaternion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&qx_, &from.qx_,
    reinterpret_cast<char*>(&qw_) -
    reinterpret_cast<char*>(&qx_) + sizeof(qw_));
  // @@protoc_insertion_point(copy_constructor:COWA.NavMsg.Quaternion)
}

void Quaternion::SharedCtor() {
  _cached_size_ = 0;
  qx_ = ::google::protobuf::internal::NaN();
  qy_ = ::google::protobuf::internal::NaN();
  qz_ = ::google::protobuf::internal::NaN();
  qw_ = ::google::protobuf::internal::NaN();
}

Quaternion::~Quaternion() {
  // @@protoc_insertion_point(destructor:COWA.NavMsg.Quaternion)
  SharedDtor();
}

void Quaternion::SharedDtor() {
}

void Quaternion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Quaternion::descriptor() {
  protobuf_pose_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pose_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Quaternion& Quaternion::default_instance() {
  protobuf_pose_2eproto::InitDefaults();
  return *internal_default_instance();
}

Quaternion* Quaternion::New(::google::protobuf::Arena* arena) const {
  Quaternion* n = new Quaternion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Quaternion::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.NavMsg.Quaternion)
  if (_has_bits_[0 / 32] & 15u) {
    qx_ = ::google::protobuf::internal::NaN();
    qy_ = ::google::protobuf::internal::NaN();
    qz_ = ::google::protobuf::internal::NaN();
    qw_ = ::google::protobuf::internal::NaN();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Quaternion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.NavMsg.Quaternion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double qx = 1 [default = nan];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_qx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &qx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double qy = 2 [default = nan];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_qy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &qy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double qz = 3 [default = nan];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_qz();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &qz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double qw = 4 [default = nan];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_qw();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &qw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.NavMsg.Quaternion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.NavMsg.Quaternion)
  return false;
#undef DO_
}

void Quaternion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.NavMsg.Quaternion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double qx = 1 [default = nan];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->qx(), output);
  }

  // optional double qy = 2 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->qy(), output);
  }

  // optional double qz = 3 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->qz(), output);
  }

  // optional double qw = 4 [default = nan];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->qw(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:COWA.NavMsg.Quaternion)
}

::google::protobuf::uint8* Quaternion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.NavMsg.Quaternion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double qx = 1 [default = nan];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->qx(), target);
  }

  // optional double qy = 2 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->qy(), target);
  }

  // optional double qz = 3 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->qz(), target);
  }

  // optional double qw = 4 [default = nan];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->qw(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:COWA.NavMsg.Quaternion)
  return target;
}

size_t Quaternion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.NavMsg.Quaternion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional double qx = 1 [default = nan];
    if (has_qx()) {
      total_size += 1 + 8;
    }

    // optional double qy = 2 [default = nan];
    if (has_qy()) {
      total_size += 1 + 8;
    }

    // optional double qz = 3 [default = nan];
    if (has_qz()) {
      total_size += 1 + 8;
    }

    // optional double qw = 4 [default = nan];
    if (has_qw()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Quaternion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.NavMsg.Quaternion)
  GOOGLE_DCHECK_NE(&from, this);
  const Quaternion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Quaternion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.NavMsg.Quaternion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.NavMsg.Quaternion)
    MergeFrom(*source);
  }
}

void Quaternion::MergeFrom(const Quaternion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.NavMsg.Quaternion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      qx_ = from.qx_;
    }
    if (cached_has_bits & 0x00000002u) {
      qy_ = from.qy_;
    }
    if (cached_has_bits & 0x00000004u) {
      qz_ = from.qz_;
    }
    if (cached_has_bits & 0x00000008u) {
      qw_ = from.qw_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Quaternion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.NavMsg.Quaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quaternion::CopyFrom(const Quaternion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.NavMsg.Quaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quaternion::IsInitialized() const {
  return true;
}

void Quaternion::Swap(Quaternion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Quaternion::InternalSwap(Quaternion* other) {
  std::swap(qx_, other->qx_);
  std::swap(qy_, other->qy_);
  std::swap(qz_, other->qz_);
  std::swap(qw_, other->qw_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Quaternion::GetMetadata() const {
  protobuf_pose_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pose_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Quaternion

// optional double qx = 1 [default = nan];
bool Quaternion::has_qx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Quaternion::set_has_qx() {
  _has_bits_[0] |= 0x00000001u;
}
void Quaternion::clear_has_qx() {
  _has_bits_[0] &= ~0x00000001u;
}
void Quaternion::clear_qx() {
  qx_ = ::google::protobuf::internal::NaN();
  clear_has_qx();
}
double Quaternion::qx() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Quaternion.qx)
  return qx_;
}
void Quaternion::set_qx(double value) {
  set_has_qx();
  qx_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Quaternion.qx)
}

// optional double qy = 2 [default = nan];
bool Quaternion::has_qy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Quaternion::set_has_qy() {
  _has_bits_[0] |= 0x00000002u;
}
void Quaternion::clear_has_qy() {
  _has_bits_[0] &= ~0x00000002u;
}
void Quaternion::clear_qy() {
  qy_ = ::google::protobuf::internal::NaN();
  clear_has_qy();
}
double Quaternion::qy() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Quaternion.qy)
  return qy_;
}
void Quaternion::set_qy(double value) {
  set_has_qy();
  qy_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Quaternion.qy)
}

// optional double qz = 3 [default = nan];
bool Quaternion::has_qz() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Quaternion::set_has_qz() {
  _has_bits_[0] |= 0x00000004u;
}
void Quaternion::clear_has_qz() {
  _has_bits_[0] &= ~0x00000004u;
}
void Quaternion::clear_qz() {
  qz_ = ::google::protobuf::internal::NaN();
  clear_has_qz();
}
double Quaternion::qz() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Quaternion.qz)
  return qz_;
}
void Quaternion::set_qz(double value) {
  set_has_qz();
  qz_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Quaternion.qz)
}

// optional double qw = 4 [default = nan];
bool Quaternion::has_qw() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Quaternion::set_has_qw() {
  _has_bits_[0] |= 0x00000008u;
}
void Quaternion::clear_has_qw() {
  _has_bits_[0] &= ~0x00000008u;
}
void Quaternion::clear_qw() {
  qw_ = ::google::protobuf::internal::NaN();
  clear_has_qw();
}
double Quaternion::qw() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Quaternion.qw)
  return qw_;
}
void Quaternion::set_qw(double value) {
  set_has_qw();
  qw_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Quaternion.qw)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Velocity::kLinearFieldNumber;
const int Velocity::kAngularFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Velocity::Velocity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pose_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.NavMsg.Velocity)
}
Velocity::Velocity(const Velocity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_linear()) {
    linear_ = new ::COWA::NavMsg::Point3D(*from.linear_);
  } else {
    linear_ = NULL;
  }
  if (from.has_angular()) {
    angular_ = new ::COWA::NavMsg::Point3D(*from.angular_);
  } else {
    angular_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:COWA.NavMsg.Velocity)
}

void Velocity::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&linear_, 0, reinterpret_cast<char*>(&angular_) -
    reinterpret_cast<char*>(&linear_) + sizeof(angular_));
}

Velocity::~Velocity() {
  // @@protoc_insertion_point(destructor:COWA.NavMsg.Velocity)
  SharedDtor();
}

void Velocity::SharedDtor() {
  if (this != internal_default_instance()) {
    delete linear_;
  }
  if (this != internal_default_instance()) {
    delete angular_;
  }
}

void Velocity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Velocity::descriptor() {
  protobuf_pose_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pose_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Velocity& Velocity::default_instance() {
  protobuf_pose_2eproto::InitDefaults();
  return *internal_default_instance();
}

Velocity* Velocity::New(::google::protobuf::Arena* arena) const {
  Velocity* n = new Velocity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Velocity::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.NavMsg.Velocity)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_linear()) {
      GOOGLE_DCHECK(linear_ != NULL);
      linear_->::COWA::NavMsg::Point3D::Clear();
    }
    if (has_angular()) {
      GOOGLE_DCHECK(angular_ != NULL);
      angular_->::COWA::NavMsg::Point3D::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Velocity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.NavMsg.Velocity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .COWA.NavMsg.Point3D linear = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_linear()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .COWA.NavMsg.Point3D angular = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_angular()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.NavMsg.Velocity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.NavMsg.Velocity)
  return false;
#undef DO_
}

void Velocity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.NavMsg.Velocity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .COWA.NavMsg.Point3D linear = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->linear_, output);
  }

  // optional .COWA.NavMsg.Point3D angular = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->angular_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:COWA.NavMsg.Velocity)
}

::google::protobuf::uint8* Velocity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.NavMsg.Velocity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .COWA.NavMsg.Point3D linear = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->linear_, deterministic, target);
  }

  // optional .COWA.NavMsg.Point3D angular = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->angular_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:COWA.NavMsg.Velocity)
  return target;
}

size_t Velocity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.NavMsg.Velocity)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .COWA.NavMsg.Point3D linear = 1;
    if (has_linear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->linear_);
    }

    // optional .COWA.NavMsg.Point3D angular = 2;
    if (has_angular()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->angular_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Velocity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.NavMsg.Velocity)
  GOOGLE_DCHECK_NE(&from, this);
  const Velocity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Velocity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.NavMsg.Velocity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.NavMsg.Velocity)
    MergeFrom(*source);
  }
}

void Velocity::MergeFrom(const Velocity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.NavMsg.Velocity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_linear()->::COWA::NavMsg::Point3D::MergeFrom(from.linear());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_angular()->::COWA::NavMsg::Point3D::MergeFrom(from.angular());
    }
  }
}

void Velocity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.NavMsg.Velocity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Velocity::CopyFrom(const Velocity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.NavMsg.Velocity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Velocity::IsInitialized() const {
  return true;
}

void Velocity::Swap(Velocity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Velocity::InternalSwap(Velocity* other) {
  std::swap(linear_, other->linear_);
  std::swap(angular_, other->angular_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Velocity::GetMetadata() const {
  protobuf_pose_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pose_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Velocity

// optional .COWA.NavMsg.Point3D linear = 1;
bool Velocity::has_linear() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Velocity::set_has_linear() {
  _has_bits_[0] |= 0x00000001u;
}
void Velocity::clear_has_linear() {
  _has_bits_[0] &= ~0x00000001u;
}
void Velocity::clear_linear() {
  if (linear_ != NULL) linear_->::COWA::NavMsg::Point3D::Clear();
  clear_has_linear();
}
const ::COWA::NavMsg::Point3D& Velocity::linear() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Velocity.linear)
  return linear_ != NULL ? *linear_
                         : *::COWA::NavMsg::Point3D::internal_default_instance();
}
::COWA::NavMsg::Point3D* Velocity::mutable_linear() {
  set_has_linear();
  if (linear_ == NULL) {
    linear_ = new ::COWA::NavMsg::Point3D;
  }
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.Velocity.linear)
  return linear_;
}
::COWA::NavMsg::Point3D* Velocity::release_linear() {
  // @@protoc_insertion_point(field_release:COWA.NavMsg.Velocity.linear)
  clear_has_linear();
  ::COWA::NavMsg::Point3D* temp = linear_;
  linear_ = NULL;
  return temp;
}
void Velocity::set_allocated_linear(::COWA::NavMsg::Point3D* linear) {
  delete linear_;
  linear_ = linear;
  if (linear) {
    set_has_linear();
  } else {
    clear_has_linear();
  }
  // @@protoc_insertion_point(field_set_allocated:COWA.NavMsg.Velocity.linear)
}

// optional .COWA.NavMsg.Point3D angular = 2;
bool Velocity::has_angular() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Velocity::set_has_angular() {
  _has_bits_[0] |= 0x00000002u;
}
void Velocity::clear_has_angular() {
  _has_bits_[0] &= ~0x00000002u;
}
void Velocity::clear_angular() {
  if (angular_ != NULL) angular_->::COWA::NavMsg::Point3D::Clear();
  clear_has_angular();
}
const ::COWA::NavMsg::Point3D& Velocity::angular() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Velocity.angular)
  return angular_ != NULL ? *angular_
                         : *::COWA::NavMsg::Point3D::internal_default_instance();
}
::COWA::NavMsg::Point3D* Velocity::mutable_angular() {
  set_has_angular();
  if (angular_ == NULL) {
    angular_ = new ::COWA::NavMsg::Point3D;
  }
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.Velocity.angular)
  return angular_;
}
::COWA::NavMsg::Point3D* Velocity::release_angular() {
  // @@protoc_insertion_point(field_release:COWA.NavMsg.Velocity.angular)
  clear_has_angular();
  ::COWA::NavMsg::Point3D* temp = angular_;
  angular_ = NULL;
  return temp;
}
void Velocity::set_allocated_angular(::COWA::NavMsg::Point3D* angular) {
  delete angular_;
  angular_ = angular;
  if (angular) {
    set_has_angular();
  } else {
    clear_has_angular();
  }
  // @@protoc_insertion_point(field_set_allocated:COWA.NavMsg.Velocity.angular)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Covariance::kXFieldNumber;
const int Covariance::kYFieldNumber;
const int Covariance::kZFieldNumber;
const int Covariance::kPFieldNumber;
const int Covariance::kRFieldNumber;
const int Covariance::kHFieldNumber;
const int Covariance::kXtFieldNumber;
const int Covariance::kYtFieldNumber;
const int Covariance::kZtFieldNumber;
const int Covariance::kPrFieldNumber;
const int Covariance::kRrFieldNumber;
const int Covariance::kHrFieldNumber;
const int Covariance::kMatrixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Covariance::Covariance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pose_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.NavMsg.Covariance)
}
Covariance::Covariance(const Covariance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      matrix_(from.matrix_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&hr_) -
    reinterpret_cast<char*>(&x_) + sizeof(hr_));
  // @@protoc_insertion_point(copy_constructor:COWA.NavMsg.Covariance)
}

void Covariance::SharedCtor() {
  _cached_size_ = 0;
  x_ = ::google::protobuf::internal::NaN();
  y_ = ::google::protobuf::internal::NaN();
  z_ = ::google::protobuf::internal::NaN();
  p_ = ::google::protobuf::internal::NaN();
  r_ = ::google::protobuf::internal::NaN();
  h_ = ::google::protobuf::internal::NaN();
  xt_ = ::google::protobuf::internal::NaN();
  yt_ = ::google::protobuf::internal::NaN();
  zt_ = ::google::protobuf::internal::NaN();
  pr_ = ::google::protobuf::internal::NaN();
  rr_ = ::google::protobuf::internal::NaN();
  hr_ = ::google::protobuf::internal::NaN();
}

Covariance::~Covariance() {
  // @@protoc_insertion_point(destructor:COWA.NavMsg.Covariance)
  SharedDtor();
}

void Covariance::SharedDtor() {
}

void Covariance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Covariance::descriptor() {
  protobuf_pose_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pose_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Covariance& Covariance::default_instance() {
  protobuf_pose_2eproto::InitDefaults();
  return *internal_default_instance();
}

Covariance* Covariance::New(::google::protobuf::Arena* arena) const {
  Covariance* n = new Covariance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Covariance::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.NavMsg.Covariance)
  matrix_.Clear();
  if (_has_bits_[0 / 32] & 255u) {
    x_ = ::google::protobuf::internal::NaN();
    y_ = ::google::protobuf::internal::NaN();
    z_ = ::google::protobuf::internal::NaN();
    p_ = ::google::protobuf::internal::NaN();
    r_ = ::google::protobuf::internal::NaN();
    h_ = ::google::protobuf::internal::NaN();
    xt_ = ::google::protobuf::internal::NaN();
    yt_ = ::google::protobuf::internal::NaN();
  }
  if (_has_bits_[8 / 32] & 3840u) {
    zt_ = ::google::protobuf::internal::NaN();
    pr_ = ::google::protobuf::internal::NaN();
    rr_ = ::google::protobuf::internal::NaN();
    hr_ = ::google::protobuf::internal::NaN();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Covariance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.NavMsg.Covariance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double x = 1 [default = nan];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double y = 2 [default = nan];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double z = 3 [default = nan];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double p = 4 [default = nan];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_p();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double r = 5 [default = nan];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_r();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double h = 6 [default = nan];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_h();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &h_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double xt = 7 [default = nan];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_xt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double yt = 8 [default = nan];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u)) {
          set_has_yt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double zt = 9 [default = nan];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u)) {
          set_has_zt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &zt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double pr = 10 [default = nan];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u)) {
          set_has_pr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double rr = 11 [default = nan];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u)) {
          set_has_rr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double hr = 12 [default = nan];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u)) {
          set_has_hr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &hr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double matrix = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 105u, input, this->mutable_matrix())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(106u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_matrix())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.NavMsg.Covariance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.NavMsg.Covariance)
  return false;
#undef DO_
}

void Covariance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.NavMsg.Covariance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double x = 1 [default = nan];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // optional double y = 2 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // optional double z = 3 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  // optional double p = 4 [default = nan];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->p(), output);
  }

  // optional double r = 5 [default = nan];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->r(), output);
  }

  // optional double h = 6 [default = nan];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->h(), output);
  }

  // optional double xt = 7 [default = nan];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->xt(), output);
  }

  // optional double yt = 8 [default = nan];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->yt(), output);
  }

  // optional double zt = 9 [default = nan];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->zt(), output);
  }

  // optional double pr = 10 [default = nan];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->pr(), output);
  }

  // optional double rr = 11 [default = nan];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->rr(), output);
  }

  // optional double hr = 12 [default = nan];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->hr(), output);
  }

  // repeated double matrix = 13;
  for (int i = 0, n = this->matrix_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      13, this->matrix(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:COWA.NavMsg.Covariance)
}

::google::protobuf::uint8* Covariance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.NavMsg.Covariance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double x = 1 [default = nan];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // optional double y = 2 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // optional double z = 3 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  // optional double p = 4 [default = nan];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->p(), target);
  }

  // optional double r = 5 [default = nan];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->r(), target);
  }

  // optional double h = 6 [default = nan];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->h(), target);
  }

  // optional double xt = 7 [default = nan];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->xt(), target);
  }

  // optional double yt = 8 [default = nan];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->yt(), target);
  }

  // optional double zt = 9 [default = nan];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->zt(), target);
  }

  // optional double pr = 10 [default = nan];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->pr(), target);
  }

  // optional double rr = 11 [default = nan];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->rr(), target);
  }

  // optional double hr = 12 [default = nan];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->hr(), target);
  }

  // repeated double matrix = 13;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(13, this->matrix_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:COWA.NavMsg.Covariance)
  return target;
}

size_t Covariance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.NavMsg.Covariance)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated double matrix = 13;
  {
    unsigned int count = this->matrix_size();
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->matrix_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional double x = 1 [default = nan];
    if (has_x()) {
      total_size += 1 + 8;
    }

    // optional double y = 2 [default = nan];
    if (has_y()) {
      total_size += 1 + 8;
    }

    // optional double z = 3 [default = nan];
    if (has_z()) {
      total_size += 1 + 8;
    }

    // optional double p = 4 [default = nan];
    if (has_p()) {
      total_size += 1 + 8;
    }

    // optional double r = 5 [default = nan];
    if (has_r()) {
      total_size += 1 + 8;
    }

    // optional double h = 6 [default = nan];
    if (has_h()) {
      total_size += 1 + 8;
    }

    // optional double xt = 7 [default = nan];
    if (has_xt()) {
      total_size += 1 + 8;
    }

    // optional double yt = 8 [default = nan];
    if (has_yt()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional double zt = 9 [default = nan];
    if (has_zt()) {
      total_size += 1 + 8;
    }

    // optional double pr = 10 [default = nan];
    if (has_pr()) {
      total_size += 1 + 8;
    }

    // optional double rr = 11 [default = nan];
    if (has_rr()) {
      total_size += 1 + 8;
    }

    // optional double hr = 12 [default = nan];
    if (has_hr()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Covariance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.NavMsg.Covariance)
  GOOGLE_DCHECK_NE(&from, this);
  const Covariance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Covariance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.NavMsg.Covariance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.NavMsg.Covariance)
    MergeFrom(*source);
  }
}

void Covariance::MergeFrom(const Covariance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.NavMsg.Covariance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  matrix_.MergeFrom(from.matrix_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      p_ = from.p_;
    }
    if (cached_has_bits & 0x00000010u) {
      r_ = from.r_;
    }
    if (cached_has_bits & 0x00000020u) {
      h_ = from.h_;
    }
    if (cached_has_bits & 0x00000040u) {
      xt_ = from.xt_;
    }
    if (cached_has_bits & 0x00000080u) {
      yt_ = from.yt_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      zt_ = from.zt_;
    }
    if (cached_has_bits & 0x00000200u) {
      pr_ = from.pr_;
    }
    if (cached_has_bits & 0x00000400u) {
      rr_ = from.rr_;
    }
    if (cached_has_bits & 0x00000800u) {
      hr_ = from.hr_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Covariance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.NavMsg.Covariance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Covariance::CopyFrom(const Covariance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.NavMsg.Covariance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Covariance::IsInitialized() const {
  return true;
}

void Covariance::Swap(Covariance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Covariance::InternalSwap(Covariance* other) {
  matrix_.InternalSwap(&other->matrix_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(p_, other->p_);
  std::swap(r_, other->r_);
  std::swap(h_, other->h_);
  std::swap(xt_, other->xt_);
  std::swap(yt_, other->yt_);
  std::swap(zt_, other->zt_);
  std::swap(pr_, other->pr_);
  std::swap(rr_, other->rr_);
  std::swap(hr_, other->hr_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Covariance::GetMetadata() const {
  protobuf_pose_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pose_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Covariance

// optional double x = 1 [default = nan];
bool Covariance::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Covariance::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void Covariance::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void Covariance::clear_x() {
  x_ = ::google::protobuf::internal::NaN();
  clear_has_x();
}
double Covariance::x() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.x)
  return x_;
}
void Covariance::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.x)
}

// optional double y = 2 [default = nan];
bool Covariance::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Covariance::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void Covariance::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void Covariance::clear_y() {
  y_ = ::google::protobuf::internal::NaN();
  clear_has_y();
}
double Covariance::y() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.y)
  return y_;
}
void Covariance::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.y)
}

// optional double z = 3 [default = nan];
bool Covariance::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Covariance::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
void Covariance::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
void Covariance::clear_z() {
  z_ = ::google::protobuf::internal::NaN();
  clear_has_z();
}
double Covariance::z() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.z)
  return z_;
}
void Covariance::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.z)
}

// optional double p = 4 [default = nan];
bool Covariance::has_p() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Covariance::set_has_p() {
  _has_bits_[0] |= 0x00000008u;
}
void Covariance::clear_has_p() {
  _has_bits_[0] &= ~0x00000008u;
}
void Covariance::clear_p() {
  p_ = ::google::protobuf::internal::NaN();
  clear_has_p();
}
double Covariance::p() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.p)
  return p_;
}
void Covariance::set_p(double value) {
  set_has_p();
  p_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.p)
}

// optional double r = 5 [default = nan];
bool Covariance::has_r() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Covariance::set_has_r() {
  _has_bits_[0] |= 0x00000010u;
}
void Covariance::clear_has_r() {
  _has_bits_[0] &= ~0x00000010u;
}
void Covariance::clear_r() {
  r_ = ::google::protobuf::internal::NaN();
  clear_has_r();
}
double Covariance::r() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.r)
  return r_;
}
void Covariance::set_r(double value) {
  set_has_r();
  r_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.r)
}

// optional double h = 6 [default = nan];
bool Covariance::has_h() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Covariance::set_has_h() {
  _has_bits_[0] |= 0x00000020u;
}
void Covariance::clear_has_h() {
  _has_bits_[0] &= ~0x00000020u;
}
void Covariance::clear_h() {
  h_ = ::google::protobuf::internal::NaN();
  clear_has_h();
}
double Covariance::h() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.h)
  return h_;
}
void Covariance::set_h(double value) {
  set_has_h();
  h_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.h)
}

// optional double xt = 7 [default = nan];
bool Covariance::has_xt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Covariance::set_has_xt() {
  _has_bits_[0] |= 0x00000040u;
}
void Covariance::clear_has_xt() {
  _has_bits_[0] &= ~0x00000040u;
}
void Covariance::clear_xt() {
  xt_ = ::google::protobuf::internal::NaN();
  clear_has_xt();
}
double Covariance::xt() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.xt)
  return xt_;
}
void Covariance::set_xt(double value) {
  set_has_xt();
  xt_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.xt)
}

// optional double yt = 8 [default = nan];
bool Covariance::has_yt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Covariance::set_has_yt() {
  _has_bits_[0] |= 0x00000080u;
}
void Covariance::clear_has_yt() {
  _has_bits_[0] &= ~0x00000080u;
}
void Covariance::clear_yt() {
  yt_ = ::google::protobuf::internal::NaN();
  clear_has_yt();
}
double Covariance::yt() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.yt)
  return yt_;
}
void Covariance::set_yt(double value) {
  set_has_yt();
  yt_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.yt)
}

// optional double zt = 9 [default = nan];
bool Covariance::has_zt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Covariance::set_has_zt() {
  _has_bits_[0] |= 0x00000100u;
}
void Covariance::clear_has_zt() {
  _has_bits_[0] &= ~0x00000100u;
}
void Covariance::clear_zt() {
  zt_ = ::google::protobuf::internal::NaN();
  clear_has_zt();
}
double Covariance::zt() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.zt)
  return zt_;
}
void Covariance::set_zt(double value) {
  set_has_zt();
  zt_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.zt)
}

// optional double pr = 10 [default = nan];
bool Covariance::has_pr() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Covariance::set_has_pr() {
  _has_bits_[0] |= 0x00000200u;
}
void Covariance::clear_has_pr() {
  _has_bits_[0] &= ~0x00000200u;
}
void Covariance::clear_pr() {
  pr_ = ::google::protobuf::internal::NaN();
  clear_has_pr();
}
double Covariance::pr() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.pr)
  return pr_;
}
void Covariance::set_pr(double value) {
  set_has_pr();
  pr_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.pr)
}

// optional double rr = 11 [default = nan];
bool Covariance::has_rr() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Covariance::set_has_rr() {
  _has_bits_[0] |= 0x00000400u;
}
void Covariance::clear_has_rr() {
  _has_bits_[0] &= ~0x00000400u;
}
void Covariance::clear_rr() {
  rr_ = ::google::protobuf::internal::NaN();
  clear_has_rr();
}
double Covariance::rr() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.rr)
  return rr_;
}
void Covariance::set_rr(double value) {
  set_has_rr();
  rr_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.rr)
}

// optional double hr = 12 [default = nan];
bool Covariance::has_hr() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Covariance::set_has_hr() {
  _has_bits_[0] |= 0x00000800u;
}
void Covariance::clear_has_hr() {
  _has_bits_[0] &= ~0x00000800u;
}
void Covariance::clear_hr() {
  hr_ = ::google::protobuf::internal::NaN();
  clear_has_hr();
}
double Covariance::hr() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.hr)
  return hr_;
}
void Covariance::set_hr(double value) {
  set_has_hr();
  hr_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.hr)
}

// repeated double matrix = 13;
int Covariance::matrix_size() const {
  return matrix_.size();
}
void Covariance::clear_matrix() {
  matrix_.Clear();
}
double Covariance::matrix(int index) const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Covariance.matrix)
  return matrix_.Get(index);
}
void Covariance::set_matrix(int index, double value) {
  matrix_.Set(index, value);
  // @@protoc_insertion_point(field_set:COWA.NavMsg.Covariance.matrix)
}
void Covariance::add_matrix(double value) {
  matrix_.Add(value);
  // @@protoc_insertion_point(field_add:COWA.NavMsg.Covariance.matrix)
}
const ::google::protobuf::RepeatedField< double >&
Covariance::matrix() const {
  // @@protoc_insertion_point(field_list:COWA.NavMsg.Covariance.matrix)
  return matrix_;
}
::google::protobuf::RepeatedField< double >*
Covariance::mutable_matrix() {
  // @@protoc_insertion_point(field_mutable_list:COWA.NavMsg.Covariance.matrix)
  return &matrix_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pose::kPositionFieldNumber;
const int Pose::kRotationFieldNumber;
const int Pose::kCovarianceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pose::Pose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pose_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.NavMsg.Pose)
}
Pose::Pose(const Pose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::COWA::NavMsg::Point3D(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_rotation()) {
    rotation_ = new ::COWA::NavMsg::Quaternion(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  if (from.has_covariance()) {
    covariance_ = new ::COWA::NavMsg::Covariance(*from.covariance_);
  } else {
    covariance_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:COWA.NavMsg.Pose)
}

void Pose::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&position_, 0, reinterpret_cast<char*>(&covariance_) -
    reinterpret_cast<char*>(&position_) + sizeof(covariance_));
}

Pose::~Pose() {
  // @@protoc_insertion_point(destructor:COWA.NavMsg.Pose)
  SharedDtor();
}

void Pose::SharedDtor() {
  if (this != internal_default_instance()) {
    delete position_;
  }
  if (this != internal_default_instance()) {
    delete rotation_;
  }
  if (this != internal_default_instance()) {
    delete covariance_;
  }
}

void Pose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pose::descriptor() {
  protobuf_pose_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pose_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pose& Pose::default_instance() {
  protobuf_pose_2eproto::InitDefaults();
  return *internal_default_instance();
}

Pose* Pose::New(::google::protobuf::Arena* arena) const {
  Pose* n = new Pose;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pose::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.NavMsg.Pose)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_position()) {
      GOOGLE_DCHECK(position_ != NULL);
      position_->::COWA::NavMsg::Point3D::Clear();
    }
    if (has_rotation()) {
      GOOGLE_DCHECK(rotation_ != NULL);
      rotation_->::COWA::NavMsg::Quaternion::Clear();
    }
    if (has_covariance()) {
      GOOGLE_DCHECK(covariance_ != NULL);
      covariance_->::COWA::NavMsg::Covariance::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Pose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.NavMsg.Pose)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .COWA.NavMsg.Point3D position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .COWA.NavMsg.Quaternion rotation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .COWA.NavMsg.Covariance covariance = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_covariance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.NavMsg.Pose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.NavMsg.Pose)
  return false;
#undef DO_
}

void Pose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.NavMsg.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .COWA.NavMsg.Point3D position = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->position_, output);
  }

  // optional .COWA.NavMsg.Quaternion rotation = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rotation_, output);
  }

  // optional .COWA.NavMsg.Covariance covariance = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->covariance_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:COWA.NavMsg.Pose)
}

::google::protobuf::uint8* Pose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.NavMsg.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .COWA.NavMsg.Point3D position = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->position_, deterministic, target);
  }

  // optional .COWA.NavMsg.Quaternion rotation = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->rotation_, deterministic, target);
  }

  // optional .COWA.NavMsg.Covariance covariance = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->covariance_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:COWA.NavMsg.Pose)
  return target;
}

size_t Pose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.NavMsg.Pose)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .COWA.NavMsg.Point3D position = 1;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->position_);
    }

    // optional .COWA.NavMsg.Quaternion rotation = 2;
    if (has_rotation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->rotation_);
    }

    // optional .COWA.NavMsg.Covariance covariance = 3;
    if (has_covariance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->covariance_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.NavMsg.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  const Pose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.NavMsg.Pose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.NavMsg.Pose)
    MergeFrom(*source);
  }
}

void Pose::MergeFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.NavMsg.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_position()->::COWA::NavMsg::Point3D::MergeFrom(from.position());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_rotation()->::COWA::NavMsg::Quaternion::MergeFrom(from.rotation());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_covariance()->::COWA::NavMsg::Covariance::MergeFrom(from.covariance());
    }
  }
}

void Pose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.NavMsg.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pose::CopyFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.NavMsg.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pose::IsInitialized() const {
  return true;
}

void Pose::Swap(Pose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pose::InternalSwap(Pose* other) {
  std::swap(position_, other->position_);
  std::swap(rotation_, other->rotation_);
  std::swap(covariance_, other->covariance_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pose::GetMetadata() const {
  protobuf_pose_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pose_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pose

// optional .COWA.NavMsg.Point3D position = 1;
bool Pose::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Pose::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
void Pose::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
void Pose::clear_position() {
  if (position_ != NULL) position_->::COWA::NavMsg::Point3D::Clear();
  clear_has_position();
}
const ::COWA::NavMsg::Point3D& Pose::position() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Pose.position)
  return position_ != NULL ? *position_
                         : *::COWA::NavMsg::Point3D::internal_default_instance();
}
::COWA::NavMsg::Point3D* Pose::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    position_ = new ::COWA::NavMsg::Point3D;
  }
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.Pose.position)
  return position_;
}
::COWA::NavMsg::Point3D* Pose::release_position() {
  // @@protoc_insertion_point(field_release:COWA.NavMsg.Pose.position)
  clear_has_position();
  ::COWA::NavMsg::Point3D* temp = position_;
  position_ = NULL;
  return temp;
}
void Pose::set_allocated_position(::COWA::NavMsg::Point3D* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:COWA.NavMsg.Pose.position)
}

// optional .COWA.NavMsg.Quaternion rotation = 2;
bool Pose::has_rotation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Pose::set_has_rotation() {
  _has_bits_[0] |= 0x00000002u;
}
void Pose::clear_has_rotation() {
  _has_bits_[0] &= ~0x00000002u;
}
void Pose::clear_rotation() {
  if (rotation_ != NULL) rotation_->::COWA::NavMsg::Quaternion::Clear();
  clear_has_rotation();
}
const ::COWA::NavMsg::Quaternion& Pose::rotation() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Pose.rotation)
  return rotation_ != NULL ? *rotation_
                         : *::COWA::NavMsg::Quaternion::internal_default_instance();
}
::COWA::NavMsg::Quaternion* Pose::mutable_rotation() {
  set_has_rotation();
  if (rotation_ == NULL) {
    rotation_ = new ::COWA::NavMsg::Quaternion;
  }
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.Pose.rotation)
  return rotation_;
}
::COWA::NavMsg::Quaternion* Pose::release_rotation() {
  // @@protoc_insertion_point(field_release:COWA.NavMsg.Pose.rotation)
  clear_has_rotation();
  ::COWA::NavMsg::Quaternion* temp = rotation_;
  rotation_ = NULL;
  return temp;
}
void Pose::set_allocated_rotation(::COWA::NavMsg::Quaternion* rotation) {
  delete rotation_;
  rotation_ = rotation;
  if (rotation) {
    set_has_rotation();
  } else {
    clear_has_rotation();
  }
  // @@protoc_insertion_point(field_set_allocated:COWA.NavMsg.Pose.rotation)
}

// optional .COWA.NavMsg.Covariance covariance = 3;
bool Pose::has_covariance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Pose::set_has_covariance() {
  _has_bits_[0] |= 0x00000004u;
}
void Pose::clear_has_covariance() {
  _has_bits_[0] &= ~0x00000004u;
}
void Pose::clear_covariance() {
  if (covariance_ != NULL) covariance_->::COWA::NavMsg::Covariance::Clear();
  clear_has_covariance();
}
const ::COWA::NavMsg::Covariance& Pose::covariance() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.Pose.covariance)
  return covariance_ != NULL ? *covariance_
                         : *::COWA::NavMsg::Covariance::internal_default_instance();
}
::COWA::NavMsg::Covariance* Pose::mutable_covariance() {
  set_has_covariance();
  if (covariance_ == NULL) {
    covariance_ = new ::COWA::NavMsg::Covariance;
  }
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.Pose.covariance)
  return covariance_;
}
::COWA::NavMsg::Covariance* Pose::release_covariance() {
  // @@protoc_insertion_point(field_release:COWA.NavMsg.Pose.covariance)
  clear_has_covariance();
  ::COWA::NavMsg::Covariance* temp = covariance_;
  covariance_ = NULL;
  return temp;
}
void Pose::set_allocated_covariance(::COWA::NavMsg::Covariance* covariance) {
  delete covariance_;
  covariance_ = covariance;
  if (covariance) {
    set_has_covariance();
  } else {
    clear_has_covariance();
  }
  // @@protoc_insertion_point(field_set_allocated:COWA.NavMsg.Pose.covariance)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PoseStamped::kTimestampFieldNumber;
const int PoseStamped::kFrameIdFieldNumber;
const int PoseStamped::kSequenceFieldNumber;
const int PoseStamped::kPoseFieldNumber;
const int PoseStamped::kVelocityFieldNumber;
const int PoseStamped::kStatusFieldNumber;
const int PoseStamped::kLatencyMsFieldNumber;
const int PoseStamped::kInternstatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PoseStamped::PoseStamped()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pose_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.NavMsg.PoseStamped)
}
PoseStamped::PoseStamped(const PoseStamped& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      status_(from.status_),
      internstatus_(from.internstatus_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_frame_id()) {
    frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_id_);
  }
  if (from.has_pose()) {
    pose_ = new ::COWA::NavMsg::Pose(*from.pose_);
  } else {
    pose_ = NULL;
  }
  if (from.has_velocity()) {
    velocity_ = new ::COWA::NavMsg::Velocity(*from.velocity_);
  } else {
    velocity_ = NULL;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    reinterpret_cast<char*>(&latency_ms_) -
    reinterpret_cast<char*>(&timestamp_) + sizeof(latency_ms_));
  // @@protoc_insertion_point(copy_constructor:COWA.NavMsg.PoseStamped)
}

void PoseStamped::SharedCtor() {
  _cached_size_ = 0;
  frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pose_, 0, reinterpret_cast<char*>(&latency_ms_) -
    reinterpret_cast<char*>(&pose_) + sizeof(latency_ms_));
}

PoseStamped::~PoseStamped() {
  // @@protoc_insertion_point(destructor:COWA.NavMsg.PoseStamped)
  SharedDtor();
}

void PoseStamped::SharedDtor() {
  frame_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete pose_;
  }
  if (this != internal_default_instance()) {
    delete velocity_;
  }
}

void PoseStamped::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PoseStamped::descriptor() {
  protobuf_pose_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pose_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PoseStamped& PoseStamped::default_instance() {
  protobuf_pose_2eproto::InitDefaults();
  return *internal_default_instance();
}

PoseStamped* PoseStamped::New(::google::protobuf::Arena* arena) const {
  PoseStamped* n = new PoseStamped;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PoseStamped::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.NavMsg.PoseStamped)
  status_.Clear();
  internstatus_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_frame_id()) {
      GOOGLE_DCHECK(!frame_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*frame_id_.UnsafeRawStringPointer())->clear();
    }
    if (has_pose()) {
      GOOGLE_DCHECK(pose_ != NULL);
      pose_->::COWA::NavMsg::Pose::Clear();
    }
    if (has_velocity()) {
      GOOGLE_DCHECK(velocity_ != NULL);
      velocity_->::COWA::NavMsg::Velocity::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 56u) {
    ::memset(&timestamp_, 0, reinterpret_cast<char*>(&latency_ms_) -
      reinterpret_cast<char*>(&timestamp_) + sizeof(latency_ms_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PoseStamped::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.NavMsg.PoseStamped)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes frame_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_frame_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sequence = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_sequence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .COWA.NavMsg.Pose pose = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .COWA.NavMsg.Velocity velocity = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .COWA.NavMsg.PoseStamped.Status status = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::COWA::NavMsg::PoseStamped_Status_IsValid(value)) {
            add_status(static_cast< ::COWA::NavMsg::PoseStamped_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(50u)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 6,
                 ::COWA::NavMsg::PoseStamped_Status_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_status())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 latency_ms = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_latency_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &latency_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .COWA.NavMsg.PoseStamped.Status internstatus = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::COWA::NavMsg::PoseStamped_Status_IsValid(value)) {
            add_internstatus(static_cast< ::COWA::NavMsg::PoseStamped_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(66u)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 8,
                 ::COWA::NavMsg::PoseStamped_Status_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_internstatus())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.NavMsg.PoseStamped)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.NavMsg.PoseStamped)
  return false;
#undef DO_
}

void PoseStamped::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.NavMsg.PoseStamped)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 timestamp = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp(), output);
  }

  // optional bytes frame_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->frame_id(), output);
  }

  // optional uint32 sequence = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sequence(), output);
  }

  // optional .COWA.NavMsg.Pose pose = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->pose_, output);
  }

  // optional .COWA.NavMsg.Velocity velocity = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->velocity_, output);
  }

  // repeated .COWA.NavMsg.PoseStamped.Status status = 6;
  for (int i = 0, n = this->status_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->status(i), output);
  }

  // optional int32 latency_ms = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->latency_ms(), output);
  }

  // repeated .COWA.NavMsg.PoseStamped.Status internstatus = 8;
  for (int i = 0, n = this->internstatus_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->internstatus(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:COWA.NavMsg.PoseStamped)
}

::google::protobuf::uint8* PoseStamped::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.NavMsg.PoseStamped)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 timestamp = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->timestamp(), target);
  }

  // optional bytes frame_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->frame_id(), target);
  }

  // optional uint32 sequence = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sequence(), target);
  }

  // optional .COWA.NavMsg.Pose pose = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->pose_, deterministic, target);
  }

  // optional .COWA.NavMsg.Velocity velocity = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->velocity_, deterministic, target);
  }

  // repeated .COWA.NavMsg.PoseStamped.Status status = 6;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    6, this->status_, target);

  // optional int32 latency_ms = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->latency_ms(), target);
  }

  // repeated .COWA.NavMsg.PoseStamped.Status internstatus = 8;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    8, this->internstatus_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:COWA.NavMsg.PoseStamped)
  return target;
}

size_t PoseStamped::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.NavMsg.PoseStamped)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .COWA.NavMsg.PoseStamped.Status status = 6;
  {
    size_t data_size = 0;
    unsigned int count = this->status_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->status(i));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated .COWA.NavMsg.PoseStamped.Status internstatus = 8;
  {
    size_t data_size = 0;
    unsigned int count = this->internstatus_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->internstatus(i));
    }
    total_size += (1UL * count) + data_size;
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes frame_id = 2;
    if (has_frame_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->frame_id());
    }

    // optional .COWA.NavMsg.Pose pose = 4;
    if (has_pose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pose_);
    }

    // optional .COWA.NavMsg.Velocity velocity = 5;
    if (has_velocity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->velocity_);
    }

    // optional uint64 timestamp = 1;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timestamp());
    }

    // optional uint32 sequence = 3;
    if (has_sequence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sequence());
    }

    // optional int32 latency_ms = 7;
    if (has_latency_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->latency_ms());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PoseStamped::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.NavMsg.PoseStamped)
  GOOGLE_DCHECK_NE(&from, this);
  const PoseStamped* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PoseStamped>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.NavMsg.PoseStamped)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.NavMsg.PoseStamped)
    MergeFrom(*source);
  }
}

void PoseStamped::MergeFrom(const PoseStamped& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.NavMsg.PoseStamped)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  status_.MergeFrom(from.status_);
  internstatus_.MergeFrom(from.internstatus_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_frame_id();
      frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_pose()->::COWA::NavMsg::Pose::MergeFrom(from.pose());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_velocity()->::COWA::NavMsg::Velocity::MergeFrom(from.velocity());
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000010u) {
      sequence_ = from.sequence_;
    }
    if (cached_has_bits & 0x00000020u) {
      latency_ms_ = from.latency_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PoseStamped::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.NavMsg.PoseStamped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PoseStamped::CopyFrom(const PoseStamped& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.NavMsg.PoseStamped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PoseStamped::IsInitialized() const {
  return true;
}

void PoseStamped::Swap(PoseStamped* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PoseStamped::InternalSwap(PoseStamped* other) {
  status_.InternalSwap(&other->status_);
  internstatus_.InternalSwap(&other->internstatus_);
  frame_id_.Swap(&other->frame_id_);
  std::swap(pose_, other->pose_);
  std::swap(velocity_, other->velocity_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(sequence_, other->sequence_);
  std::swap(latency_ms_, other->latency_ms_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PoseStamped::GetMetadata() const {
  protobuf_pose_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pose_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PoseStamped

// optional uint64 timestamp = 1;
bool PoseStamped::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PoseStamped::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
void PoseStamped::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
void PoseStamped::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
::google::protobuf::uint64 PoseStamped::timestamp() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStamped.timestamp)
  return timestamp_;
}
void PoseStamped::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.PoseStamped.timestamp)
}

// optional bytes frame_id = 2;
bool PoseStamped::has_frame_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PoseStamped::set_has_frame_id() {
  _has_bits_[0] |= 0x00000001u;
}
void PoseStamped::clear_has_frame_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void PoseStamped::clear_frame_id() {
  frame_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_frame_id();
}
const ::std::string& PoseStamped::frame_id() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStamped.frame_id)
  return frame_id_.GetNoArena();
}
void PoseStamped::set_frame_id(const ::std::string& value) {
  set_has_frame_id();
  frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:COWA.NavMsg.PoseStamped.frame_id)
}
#if LANG_CXX11
void PoseStamped::set_frame_id(::std::string&& value) {
  set_has_frame_id();
  frame_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:COWA.NavMsg.PoseStamped.frame_id)
}
#endif
void PoseStamped::set_frame_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_frame_id();
  frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:COWA.NavMsg.PoseStamped.frame_id)
}
void PoseStamped::set_frame_id(const void* value, size_t size) {
  set_has_frame_id();
  frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:COWA.NavMsg.PoseStamped.frame_id)
}
::std::string* PoseStamped::mutable_frame_id() {
  set_has_frame_id();
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.PoseStamped.frame_id)
  return frame_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PoseStamped::release_frame_id() {
  // @@protoc_insertion_point(field_release:COWA.NavMsg.PoseStamped.frame_id)
  clear_has_frame_id();
  return frame_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PoseStamped::set_allocated_frame_id(::std::string* frame_id) {
  if (frame_id != NULL) {
    set_has_frame_id();
  } else {
    clear_has_frame_id();
  }
  frame_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frame_id);
  // @@protoc_insertion_point(field_set_allocated:COWA.NavMsg.PoseStamped.frame_id)
}

// optional uint32 sequence = 3;
bool PoseStamped::has_sequence() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PoseStamped::set_has_sequence() {
  _has_bits_[0] |= 0x00000010u;
}
void PoseStamped::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000010u;
}
void PoseStamped::clear_sequence() {
  sequence_ = 0u;
  clear_has_sequence();
}
::google::protobuf::uint32 PoseStamped::sequence() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStamped.sequence)
  return sequence_;
}
void PoseStamped::set_sequence(::google::protobuf::uint32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.PoseStamped.sequence)
}

// optional .COWA.NavMsg.Pose pose = 4;
bool PoseStamped::has_pose() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PoseStamped::set_has_pose() {
  _has_bits_[0] |= 0x00000002u;
}
void PoseStamped::clear_has_pose() {
  _has_bits_[0] &= ~0x00000002u;
}
void PoseStamped::clear_pose() {
  if (pose_ != NULL) pose_->::COWA::NavMsg::Pose::Clear();
  clear_has_pose();
}
const ::COWA::NavMsg::Pose& PoseStamped::pose() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStamped.pose)
  return pose_ != NULL ? *pose_
                         : *::COWA::NavMsg::Pose::internal_default_instance();
}
::COWA::NavMsg::Pose* PoseStamped::mutable_pose() {
  set_has_pose();
  if (pose_ == NULL) {
    pose_ = new ::COWA::NavMsg::Pose;
  }
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.PoseStamped.pose)
  return pose_;
}
::COWA::NavMsg::Pose* PoseStamped::release_pose() {
  // @@protoc_insertion_point(field_release:COWA.NavMsg.PoseStamped.pose)
  clear_has_pose();
  ::COWA::NavMsg::Pose* temp = pose_;
  pose_ = NULL;
  return temp;
}
void PoseStamped::set_allocated_pose(::COWA::NavMsg::Pose* pose) {
  delete pose_;
  pose_ = pose;
  if (pose) {
    set_has_pose();
  } else {
    clear_has_pose();
  }
  // @@protoc_insertion_point(field_set_allocated:COWA.NavMsg.PoseStamped.pose)
}

// optional .COWA.NavMsg.Velocity velocity = 5;
bool PoseStamped::has_velocity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PoseStamped::set_has_velocity() {
  _has_bits_[0] |= 0x00000004u;
}
void PoseStamped::clear_has_velocity() {
  _has_bits_[0] &= ~0x00000004u;
}
void PoseStamped::clear_velocity() {
  if (velocity_ != NULL) velocity_->::COWA::NavMsg::Velocity::Clear();
  clear_has_velocity();
}
const ::COWA::NavMsg::Velocity& PoseStamped::velocity() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStamped.velocity)
  return velocity_ != NULL ? *velocity_
                         : *::COWA::NavMsg::Velocity::internal_default_instance();
}
::COWA::NavMsg::Velocity* PoseStamped::mutable_velocity() {
  set_has_velocity();
  if (velocity_ == NULL) {
    velocity_ = new ::COWA::NavMsg::Velocity;
  }
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.PoseStamped.velocity)
  return velocity_;
}
::COWA::NavMsg::Velocity* PoseStamped::release_velocity() {
  // @@protoc_insertion_point(field_release:COWA.NavMsg.PoseStamped.velocity)
  clear_has_velocity();
  ::COWA::NavMsg::Velocity* temp = velocity_;
  velocity_ = NULL;
  return temp;
}
void PoseStamped::set_allocated_velocity(::COWA::NavMsg::Velocity* velocity) {
  delete velocity_;
  velocity_ = velocity;
  if (velocity) {
    set_has_velocity();
  } else {
    clear_has_velocity();
  }
  // @@protoc_insertion_point(field_set_allocated:COWA.NavMsg.PoseStamped.velocity)
}

// repeated .COWA.NavMsg.PoseStamped.Status status = 6;
int PoseStamped::status_size() const {
  return status_.size();
}
void PoseStamped::clear_status() {
  status_.Clear();
}
::COWA::NavMsg::PoseStamped_Status PoseStamped::status(int index) const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStamped.status)
  return static_cast< ::COWA::NavMsg::PoseStamped_Status >(status_.Get(index));
}
void PoseStamped::set_status(int index, ::COWA::NavMsg::PoseStamped_Status value) {
  assert(::COWA::NavMsg::PoseStamped_Status_IsValid(value));
  status_.Set(index, value);
  // @@protoc_insertion_point(field_set:COWA.NavMsg.PoseStamped.status)
}
void PoseStamped::add_status(::COWA::NavMsg::PoseStamped_Status value) {
  assert(::COWA::NavMsg::PoseStamped_Status_IsValid(value));
  status_.Add(value);
  // @@protoc_insertion_point(field_add:COWA.NavMsg.PoseStamped.status)
}
const ::google::protobuf::RepeatedField<int>&
PoseStamped::status() const {
  // @@protoc_insertion_point(field_list:COWA.NavMsg.PoseStamped.status)
  return status_;
}
::google::protobuf::RepeatedField<int>*
PoseStamped::mutable_status() {
  // @@protoc_insertion_point(field_mutable_list:COWA.NavMsg.PoseStamped.status)
  return &status_;
}

// optional int32 latency_ms = 7;
bool PoseStamped::has_latency_ms() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PoseStamped::set_has_latency_ms() {
  _has_bits_[0] |= 0x00000020u;
}
void PoseStamped::clear_has_latency_ms() {
  _has_bits_[0] &= ~0x00000020u;
}
void PoseStamped::clear_latency_ms() {
  latency_ms_ = 0;
  clear_has_latency_ms();
}
::google::protobuf::int32 PoseStamped::latency_ms() const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStamped.latency_ms)
  return latency_ms_;
}
void PoseStamped::set_latency_ms(::google::protobuf::int32 value) {
  set_has_latency_ms();
  latency_ms_ = value;
  // @@protoc_insertion_point(field_set:COWA.NavMsg.PoseStamped.latency_ms)
}

// repeated .COWA.NavMsg.PoseStamped.Status internstatus = 8;
int PoseStamped::internstatus_size() const {
  return internstatus_.size();
}
void PoseStamped::clear_internstatus() {
  internstatus_.Clear();
}
::COWA::NavMsg::PoseStamped_Status PoseStamped::internstatus(int index) const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStamped.internstatus)
  return static_cast< ::COWA::NavMsg::PoseStamped_Status >(internstatus_.Get(index));
}
void PoseStamped::set_internstatus(int index, ::COWA::NavMsg::PoseStamped_Status value) {
  assert(::COWA::NavMsg::PoseStamped_Status_IsValid(value));
  internstatus_.Set(index, value);
  // @@protoc_insertion_point(field_set:COWA.NavMsg.PoseStamped.internstatus)
}
void PoseStamped::add_internstatus(::COWA::NavMsg::PoseStamped_Status value) {
  assert(::COWA::NavMsg::PoseStamped_Status_IsValid(value));
  internstatus_.Add(value);
  // @@protoc_insertion_point(field_add:COWA.NavMsg.PoseStamped.internstatus)
}
const ::google::protobuf::RepeatedField<int>&
PoseStamped::internstatus() const {
  // @@protoc_insertion_point(field_list:COWA.NavMsg.PoseStamped.internstatus)
  return internstatus_;
}
::google::protobuf::RepeatedField<int>*
PoseStamped::mutable_internstatus() {
  // @@protoc_insertion_point(field_mutable_list:COWA.NavMsg.PoseStamped.internstatus)
  return &internstatus_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PoseStampedArray::kPosesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PoseStampedArray::PoseStampedArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pose_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:COWA.NavMsg.PoseStampedArray)
}
PoseStampedArray::PoseStampedArray(const PoseStampedArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      poses_(from.poses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:COWA.NavMsg.PoseStampedArray)
}

void PoseStampedArray::SharedCtor() {
  _cached_size_ = 0;
}

PoseStampedArray::~PoseStampedArray() {
  // @@protoc_insertion_point(destructor:COWA.NavMsg.PoseStampedArray)
  SharedDtor();
}

void PoseStampedArray::SharedDtor() {
}

void PoseStampedArray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PoseStampedArray::descriptor() {
  protobuf_pose_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pose_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PoseStampedArray& PoseStampedArray::default_instance() {
  protobuf_pose_2eproto::InitDefaults();
  return *internal_default_instance();
}

PoseStampedArray* PoseStampedArray::New(::google::protobuf::Arena* arena) const {
  PoseStampedArray* n = new PoseStampedArray;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PoseStampedArray::Clear() {
// @@protoc_insertion_point(message_clear_start:COWA.NavMsg.PoseStampedArray)
  poses_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PoseStampedArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:COWA.NavMsg.PoseStampedArray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .COWA.NavMsg.PoseStamped poses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_poses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:COWA.NavMsg.PoseStampedArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:COWA.NavMsg.PoseStampedArray)
  return false;
#undef DO_
}

void PoseStampedArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:COWA.NavMsg.PoseStampedArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .COWA.NavMsg.PoseStamped poses = 1;
  for (unsigned int i = 0, n = this->poses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->poses(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:COWA.NavMsg.PoseStampedArray)
}

::google::protobuf::uint8* PoseStampedArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:COWA.NavMsg.PoseStampedArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .COWA.NavMsg.PoseStamped poses = 1;
  for (unsigned int i = 0, n = this->poses_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->poses(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:COWA.NavMsg.PoseStampedArray)
  return target;
}

size_t PoseStampedArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COWA.NavMsg.PoseStampedArray)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .COWA.NavMsg.PoseStamped poses = 1;
  {
    unsigned int count = this->poses_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->poses(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PoseStampedArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COWA.NavMsg.PoseStampedArray)
  GOOGLE_DCHECK_NE(&from, this);
  const PoseStampedArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PoseStampedArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COWA.NavMsg.PoseStampedArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COWA.NavMsg.PoseStampedArray)
    MergeFrom(*source);
  }
}

void PoseStampedArray::MergeFrom(const PoseStampedArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COWA.NavMsg.PoseStampedArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  poses_.MergeFrom(from.poses_);
}

void PoseStampedArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COWA.NavMsg.PoseStampedArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PoseStampedArray::CopyFrom(const PoseStampedArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COWA.NavMsg.PoseStampedArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PoseStampedArray::IsInitialized() const {
  return true;
}

void PoseStampedArray::Swap(PoseStampedArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PoseStampedArray::InternalSwap(PoseStampedArray* other) {
  poses_.InternalSwap(&other->poses_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PoseStampedArray::GetMetadata() const {
  protobuf_pose_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pose_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PoseStampedArray

// repeated .COWA.NavMsg.PoseStamped poses = 1;
int PoseStampedArray::poses_size() const {
  return poses_.size();
}
void PoseStampedArray::clear_poses() {
  poses_.Clear();
}
const ::COWA::NavMsg::PoseStamped& PoseStampedArray::poses(int index) const {
  // @@protoc_insertion_point(field_get:COWA.NavMsg.PoseStampedArray.poses)
  return poses_.Get(index);
}
::COWA::NavMsg::PoseStamped* PoseStampedArray::mutable_poses(int index) {
  // @@protoc_insertion_point(field_mutable:COWA.NavMsg.PoseStampedArray.poses)
  return poses_.Mutable(index);
}
::COWA::NavMsg::PoseStamped* PoseStampedArray::add_poses() {
  // @@protoc_insertion_point(field_add:COWA.NavMsg.PoseStampedArray.poses)
  return poses_.Add();
}
::google::protobuf::RepeatedPtrField< ::COWA::NavMsg::PoseStamped >*
PoseStampedArray::mutable_poses() {
  // @@protoc_insertion_point(field_mutable_list:COWA.NavMsg.PoseStampedArray.poses)
  return &poses_;
}
const ::google::protobuf::RepeatedPtrField< ::COWA::NavMsg::PoseStamped >&
PoseStampedArray::poses() const {
  // @@protoc_insertion_point(field_list:COWA.NavMsg.PoseStampedArray.poses)
  return poses_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace NavMsg
}  // namespace COWA

// @@protoc_insertion_point(global_scope)
