// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request_response.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "request_response.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace request_response {
class TargetCrvuePointTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TargetCrvuePointType> {
} _TargetCrvuePointType_default_instance_;
class ResponseStatusTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ResponseStatusType> {
} _ResponseStatusType_default_instance_;
class RequestResponseDataTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RequestResponseDataType> {
} _RequestResponseDataType_default_instance_;

namespace protobuf_request_5fresponse_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TargetCrvuePointType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TargetCrvuePointType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TargetCrvuePointType, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TargetCrvuePointType, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseStatusType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseStatusType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseStatusType, reponse_status_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseStatusType, reponse_status_msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestResponseDataType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestResponseDataType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestResponseDataType, sequence_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestResponseDataType, request_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestResponseDataType, target_curve_points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestResponseDataType, auto_drive_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestResponseDataType, camera_channel_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestResponseDataType, origin_point_cloud_channel_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestResponseDataType, response_status_),
  3,
  4,
  ~0u,
  5,
  0,
  1,
  2,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(TargetCrvuePointType)},
  { 9, 16, sizeof(ResponseStatusType)},
  { 18, 30, sizeof(RequestResponseDataType)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TargetCrvuePointType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResponseStatusType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RequestResponseDataType_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "request_response.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _TargetCrvuePointType_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ResponseStatusType_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _RequestResponseDataType_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::COWA::NavMsg::protobuf_chassis_2eproto::InitDefaults();
  _TargetCrvuePointType_default_instance_.DefaultConstruct();
  _ResponseStatusType_default_instance_.DefaultConstruct();
  _RequestResponseDataType_default_instance_.DefaultConstruct();
  _RequestResponseDataType_default_instance_.get_mutable()->response_status_ = const_cast< ::request_response::ResponseStatusType*>(
      ::request_response::ResponseStatusType::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\026request_response.proto\022\020request_respon"
      "se\032\rchassis.proto\",\n\024TargetCrvuePointTyp"
      "e\022\t\n\001x\030\001 \002(\001\022\t\n\001y\030\002 \002(\001\"\362\001\n\022ResponseStat"
      "usType\022S\n\023reponse_status_code\030\001 \002(\01626.re"
      "quest_response.ResponseStatusType.Reques"
      "tStatusEnum\022\032\n\022reponse_status_msg\030\002 \001(\t\""
      "k\n\021RequestStatusEnum\022\016\n\nNO_REQUEST\020\000\022\020\n\014"
      "REQUEST_WAIT\020\001\022\020\n\014REQUEST_SUCC\020\002\022\020\n\014REQU"
      "EST_FAIL\020\003\022\020\n\014RECEIVE_FAIL\020\004\"\260\004\n\027Request"
      "ResponseDataType\022\023\n\013sequence_id\030\001 \002(\004\022K\n"
      "\014request_type\030\002 \002(\01625.request_response.R"
      "equestResponseDataType.RequestType\022C\n\023ta"
      "rget_curve_points\030\004 \003(\0132&.request_respon"
      "se.TargetCrvuePointType\022>\n\017auto_drive_mo"
      "de\030\005 \001(\0162%.COWA.NavMsg.VehicleDrive.Driv"
      "ingMode\022\033\n\023camera_channel_name\030\006 \001(\t\022\'\n\037"
      "origin_point_cloud_channel_name\030\007 \001(\t\022=\n"
      "\017response_status\030\010 \001(\0132$.request_respons"
      "e.ResponseStatusType\"\250\001\n\013RequestType\022\024\n\020"
      "MIN_UNVAILD_TYPE\020\000\022\025\n\021TARGET_CURVE_TYPE\020"
      "\001\022\032\n\026ENABLE_AUTO_DRIVE_TYPE\020\002\022\026\n\022ENABLE_"
      "CAMERA_TYPE\020\003\022\"\n\036ENABLE_ORIGIN_POINT_CLO"
      "UD_TYPE\020\004\022\024\n\020MAX_UNVAILD_TYPE\020\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 911);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "request_response.proto", &protobuf_RegisterTypes);
  ::COWA::NavMsg::protobuf_chassis_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_request_5fresponse_2eproto

const ::google::protobuf::EnumDescriptor* ResponseStatusType_RequestStatusEnum_descriptor() {
  protobuf_request_5fresponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_request_5fresponse_2eproto::file_level_enum_descriptors[0];
}
bool ResponseStatusType_RequestStatusEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ResponseStatusType_RequestStatusEnum ResponseStatusType::NO_REQUEST;
const ResponseStatusType_RequestStatusEnum ResponseStatusType::REQUEST_WAIT;
const ResponseStatusType_RequestStatusEnum ResponseStatusType::REQUEST_SUCC;
const ResponseStatusType_RequestStatusEnum ResponseStatusType::REQUEST_FAIL;
const ResponseStatusType_RequestStatusEnum ResponseStatusType::RECEIVE_FAIL;
const ResponseStatusType_RequestStatusEnum ResponseStatusType::RequestStatusEnum_MIN;
const ResponseStatusType_RequestStatusEnum ResponseStatusType::RequestStatusEnum_MAX;
const int ResponseStatusType::RequestStatusEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RequestResponseDataType_RequestType_descriptor() {
  protobuf_request_5fresponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_request_5fresponse_2eproto::file_level_enum_descriptors[1];
}
bool RequestResponseDataType_RequestType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RequestResponseDataType_RequestType RequestResponseDataType::MIN_UNVAILD_TYPE;
const RequestResponseDataType_RequestType RequestResponseDataType::TARGET_CURVE_TYPE;
const RequestResponseDataType_RequestType RequestResponseDataType::ENABLE_AUTO_DRIVE_TYPE;
const RequestResponseDataType_RequestType RequestResponseDataType::ENABLE_CAMERA_TYPE;
const RequestResponseDataType_RequestType RequestResponseDataType::ENABLE_ORIGIN_POINT_CLOUD_TYPE;
const RequestResponseDataType_RequestType RequestResponseDataType::MAX_UNVAILD_TYPE;
const RequestResponseDataType_RequestType RequestResponseDataType::RequestType_MIN;
const RequestResponseDataType_RequestType RequestResponseDataType::RequestType_MAX;
const int RequestResponseDataType::RequestType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetCrvuePointType::kXFieldNumber;
const int TargetCrvuePointType::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetCrvuePointType::TargetCrvuePointType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_request_5fresponse_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_response.TargetCrvuePointType)
}
TargetCrvuePointType::TargetCrvuePointType(const TargetCrvuePointType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:request_response.TargetCrvuePointType)
}

void TargetCrvuePointType::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
}

TargetCrvuePointType::~TargetCrvuePointType() {
  // @@protoc_insertion_point(destructor:request_response.TargetCrvuePointType)
  SharedDtor();
}

void TargetCrvuePointType::SharedDtor() {
}

void TargetCrvuePointType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TargetCrvuePointType::descriptor() {
  protobuf_request_5fresponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_request_5fresponse_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetCrvuePointType& TargetCrvuePointType::default_instance() {
  protobuf_request_5fresponse_2eproto::InitDefaults();
  return *internal_default_instance();
}

TargetCrvuePointType* TargetCrvuePointType::New(::google::protobuf::Arena* arena) const {
  TargetCrvuePointType* n = new TargetCrvuePointType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TargetCrvuePointType::Clear() {
// @@protoc_insertion_point(message_clear_start:request_response.TargetCrvuePointType)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&x_, 0, reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TargetCrvuePointType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_response.TargetCrvuePointType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_response.TargetCrvuePointType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_response.TargetCrvuePointType)
  return false;
#undef DO_
}

void TargetCrvuePointType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_response.TargetCrvuePointType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_response.TargetCrvuePointType)
}

::google::protobuf::uint8* TargetCrvuePointType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_response.TargetCrvuePointType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_response.TargetCrvuePointType)
  return target;
}

size_t TargetCrvuePointType::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:request_response.TargetCrvuePointType)
  size_t total_size = 0;

  if (has_x()) {
    // required double x = 1;
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 2;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t TargetCrvuePointType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_response.TargetCrvuePointType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double x = 1;
    total_size += 1 + 8;

    // required double y = 2;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TargetCrvuePointType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_response.TargetCrvuePointType)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetCrvuePointType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetCrvuePointType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_response.TargetCrvuePointType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_response.TargetCrvuePointType)
    MergeFrom(*source);
  }
}

void TargetCrvuePointType::MergeFrom(const TargetCrvuePointType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_response.TargetCrvuePointType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TargetCrvuePointType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_response.TargetCrvuePointType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetCrvuePointType::CopyFrom(const TargetCrvuePointType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_response.TargetCrvuePointType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetCrvuePointType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void TargetCrvuePointType::Swap(TargetCrvuePointType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetCrvuePointType::InternalSwap(TargetCrvuePointType* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TargetCrvuePointType::GetMetadata() const {
  protobuf_request_5fresponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_request_5fresponse_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TargetCrvuePointType

// required double x = 1;
bool TargetCrvuePointType::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TargetCrvuePointType::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void TargetCrvuePointType::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void TargetCrvuePointType::clear_x() {
  x_ = 0;
  clear_has_x();
}
double TargetCrvuePointType::x() const {
  // @@protoc_insertion_point(field_get:request_response.TargetCrvuePointType.x)
  return x_;
}
void TargetCrvuePointType::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:request_response.TargetCrvuePointType.x)
}

// required double y = 2;
bool TargetCrvuePointType::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TargetCrvuePointType::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void TargetCrvuePointType::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void TargetCrvuePointType::clear_y() {
  y_ = 0;
  clear_has_y();
}
double TargetCrvuePointType::y() const {
  // @@protoc_insertion_point(field_get:request_response.TargetCrvuePointType.y)
  return y_;
}
void TargetCrvuePointType::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:request_response.TargetCrvuePointType.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseStatusType::kReponseStatusCodeFieldNumber;
const int ResponseStatusType::kReponseStatusMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseStatusType::ResponseStatusType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_request_5fresponse_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_response.ResponseStatusType)
}
ResponseStatusType::ResponseStatusType(const ResponseStatusType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reponse_status_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reponse_status_msg()) {
    reponse_status_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reponse_status_msg_);
  }
  reponse_status_code_ = from.reponse_status_code_;
  // @@protoc_insertion_point(copy_constructor:request_response.ResponseStatusType)
}

void ResponseStatusType::SharedCtor() {
  _cached_size_ = 0;
  reponse_status_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reponse_status_code_ = 0;
}

ResponseStatusType::~ResponseStatusType() {
  // @@protoc_insertion_point(destructor:request_response.ResponseStatusType)
  SharedDtor();
}

void ResponseStatusType::SharedDtor() {
  reponse_status_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResponseStatusType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseStatusType::descriptor() {
  protobuf_request_5fresponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_request_5fresponse_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResponseStatusType& ResponseStatusType::default_instance() {
  protobuf_request_5fresponse_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResponseStatusType* ResponseStatusType::New(::google::protobuf::Arena* arena) const {
  ResponseStatusType* n = new ResponseStatusType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseStatusType::Clear() {
// @@protoc_insertion_point(message_clear_start:request_response.ResponseStatusType)
  if (has_reponse_status_msg()) {
    GOOGLE_DCHECK(!reponse_status_msg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*reponse_status_msg_.UnsafeRawStringPointer())->clear();
  }
  reponse_status_code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResponseStatusType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_response.ResponseStatusType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .request_response.ResponseStatusType.RequestStatusEnum reponse_status_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::request_response::ResponseStatusType_RequestStatusEnum_IsValid(value)) {
            set_reponse_status_code(static_cast< ::request_response::ResponseStatusType_RequestStatusEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string reponse_status_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reponse_status_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reponse_status_msg().data(), this->reponse_status_msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "request_response.ResponseStatusType.reponse_status_msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_response.ResponseStatusType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_response.ResponseStatusType)
  return false;
#undef DO_
}

void ResponseStatusType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_response.ResponseStatusType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .request_response.ResponseStatusType.RequestStatusEnum reponse_status_code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->reponse_status_code(), output);
  }

  // optional string reponse_status_msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reponse_status_msg().data(), this->reponse_status_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request_response.ResponseStatusType.reponse_status_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reponse_status_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_response.ResponseStatusType)
}

::google::protobuf::uint8* ResponseStatusType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_response.ResponseStatusType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .request_response.ResponseStatusType.RequestStatusEnum reponse_status_code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->reponse_status_code(), target);
  }

  // optional string reponse_status_msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reponse_status_msg().data(), this->reponse_status_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request_response.ResponseStatusType.reponse_status_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reponse_status_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_response.ResponseStatusType)
  return target;
}

size_t ResponseStatusType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_response.ResponseStatusType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .request_response.ResponseStatusType.RequestStatusEnum reponse_status_code = 1;
  if (has_reponse_status_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reponse_status_code());
  }
  // optional string reponse_status_msg = 2;
  if (has_reponse_status_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reponse_status_msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseStatusType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_response.ResponseStatusType)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseStatusType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseStatusType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_response.ResponseStatusType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_response.ResponseStatusType)
    MergeFrom(*source);
  }
}

void ResponseStatusType::MergeFrom(const ResponseStatusType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_response.ResponseStatusType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_reponse_status_msg();
      reponse_status_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reponse_status_msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      reponse_status_code_ = from.reponse_status_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ResponseStatusType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_response.ResponseStatusType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseStatusType::CopyFrom(const ResponseStatusType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_response.ResponseStatusType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseStatusType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void ResponseStatusType::Swap(ResponseStatusType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseStatusType::InternalSwap(ResponseStatusType* other) {
  reponse_status_msg_.Swap(&other->reponse_status_msg_);
  std::swap(reponse_status_code_, other->reponse_status_code_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseStatusType::GetMetadata() const {
  protobuf_request_5fresponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_request_5fresponse_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseStatusType

// required .request_response.ResponseStatusType.RequestStatusEnum reponse_status_code = 1;
bool ResponseStatusType::has_reponse_status_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ResponseStatusType::set_has_reponse_status_code() {
  _has_bits_[0] |= 0x00000002u;
}
void ResponseStatusType::clear_has_reponse_status_code() {
  _has_bits_[0] &= ~0x00000002u;
}
void ResponseStatusType::clear_reponse_status_code() {
  reponse_status_code_ = 0;
  clear_has_reponse_status_code();
}
::request_response::ResponseStatusType_RequestStatusEnum ResponseStatusType::reponse_status_code() const {
  // @@protoc_insertion_point(field_get:request_response.ResponseStatusType.reponse_status_code)
  return static_cast< ::request_response::ResponseStatusType_RequestStatusEnum >(reponse_status_code_);
}
void ResponseStatusType::set_reponse_status_code(::request_response::ResponseStatusType_RequestStatusEnum value) {
  assert(::request_response::ResponseStatusType_RequestStatusEnum_IsValid(value));
  set_has_reponse_status_code();
  reponse_status_code_ = value;
  // @@protoc_insertion_point(field_set:request_response.ResponseStatusType.reponse_status_code)
}

// optional string reponse_status_msg = 2;
bool ResponseStatusType::has_reponse_status_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ResponseStatusType::set_has_reponse_status_msg() {
  _has_bits_[0] |= 0x00000001u;
}
void ResponseStatusType::clear_has_reponse_status_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
void ResponseStatusType::clear_reponse_status_msg() {
  reponse_status_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reponse_status_msg();
}
const ::std::string& ResponseStatusType::reponse_status_msg() const {
  // @@protoc_insertion_point(field_get:request_response.ResponseStatusType.reponse_status_msg)
  return reponse_status_msg_.GetNoArena();
}
void ResponseStatusType::set_reponse_status_msg(const ::std::string& value) {
  set_has_reponse_status_msg();
  reponse_status_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:request_response.ResponseStatusType.reponse_status_msg)
}
#if LANG_CXX11
void ResponseStatusType::set_reponse_status_msg(::std::string&& value) {
  set_has_reponse_status_msg();
  reponse_status_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:request_response.ResponseStatusType.reponse_status_msg)
}
#endif
void ResponseStatusType::set_reponse_status_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reponse_status_msg();
  reponse_status_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:request_response.ResponseStatusType.reponse_status_msg)
}
void ResponseStatusType::set_reponse_status_msg(const char* value, size_t size) {
  set_has_reponse_status_msg();
  reponse_status_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:request_response.ResponseStatusType.reponse_status_msg)
}
::std::string* ResponseStatusType::mutable_reponse_status_msg() {
  set_has_reponse_status_msg();
  // @@protoc_insertion_point(field_mutable:request_response.ResponseStatusType.reponse_status_msg)
  return reponse_status_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseStatusType::release_reponse_status_msg() {
  // @@protoc_insertion_point(field_release:request_response.ResponseStatusType.reponse_status_msg)
  clear_has_reponse_status_msg();
  return reponse_status_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseStatusType::set_allocated_reponse_status_msg(::std::string* reponse_status_msg) {
  if (reponse_status_msg != NULL) {
    set_has_reponse_status_msg();
  } else {
    clear_has_reponse_status_msg();
  }
  reponse_status_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reponse_status_msg);
  // @@protoc_insertion_point(field_set_allocated:request_response.ResponseStatusType.reponse_status_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestResponseDataType::kSequenceIdFieldNumber;
const int RequestResponseDataType::kRequestTypeFieldNumber;
const int RequestResponseDataType::kTargetCurvePointsFieldNumber;
const int RequestResponseDataType::kAutoDriveModeFieldNumber;
const int RequestResponseDataType::kCameraChannelNameFieldNumber;
const int RequestResponseDataType::kOriginPointCloudChannelNameFieldNumber;
const int RequestResponseDataType::kResponseStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestResponseDataType::RequestResponseDataType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_request_5fresponse_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_response.RequestResponseDataType)
}
RequestResponseDataType::RequestResponseDataType(const RequestResponseDataType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      target_curve_points_(from.target_curve_points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  camera_channel_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_channel_name()) {
    camera_channel_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_channel_name_);
  }
  origin_point_cloud_channel_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_origin_point_cloud_channel_name()) {
    origin_point_cloud_channel_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_point_cloud_channel_name_);
  }
  if (from.has_response_status()) {
    response_status_ = new ::request_response::ResponseStatusType(*from.response_status_);
  } else {
    response_status_ = NULL;
  }
  ::memcpy(&sequence_id_, &from.sequence_id_,
    reinterpret_cast<char*>(&auto_drive_mode_) -
    reinterpret_cast<char*>(&sequence_id_) + sizeof(auto_drive_mode_));
  // @@protoc_insertion_point(copy_constructor:request_response.RequestResponseDataType)
}

void RequestResponseDataType::SharedCtor() {
  _cached_size_ = 0;
  camera_channel_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origin_point_cloud_channel_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&response_status_, 0, reinterpret_cast<char*>(&auto_drive_mode_) -
    reinterpret_cast<char*>(&response_status_) + sizeof(auto_drive_mode_));
}

RequestResponseDataType::~RequestResponseDataType() {
  // @@protoc_insertion_point(destructor:request_response.RequestResponseDataType)
  SharedDtor();
}

void RequestResponseDataType::SharedDtor() {
  camera_channel_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origin_point_cloud_channel_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete response_status_;
  }
}

void RequestResponseDataType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestResponseDataType::descriptor() {
  protobuf_request_5fresponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_request_5fresponse_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestResponseDataType& RequestResponseDataType::default_instance() {
  protobuf_request_5fresponse_2eproto::InitDefaults();
  return *internal_default_instance();
}

RequestResponseDataType* RequestResponseDataType::New(::google::protobuf::Arena* arena) const {
  RequestResponseDataType* n = new RequestResponseDataType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestResponseDataType::Clear() {
// @@protoc_insertion_point(message_clear_start:request_response.RequestResponseDataType)
  target_curve_points_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_camera_channel_name()) {
      GOOGLE_DCHECK(!camera_channel_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*camera_channel_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_origin_point_cloud_channel_name()) {
      GOOGLE_DCHECK(!origin_point_cloud_channel_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*origin_point_cloud_channel_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_response_status()) {
      GOOGLE_DCHECK(response_status_ != NULL);
      response_status_->::request_response::ResponseStatusType::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 56u) {
    ::memset(&sequence_id_, 0, reinterpret_cast<char*>(&auto_drive_mode_) -
      reinterpret_cast<char*>(&sequence_id_) + sizeof(auto_drive_mode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RequestResponseDataType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_response.RequestResponseDataType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 sequence_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_sequence_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sequence_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .request_response.RequestResponseDataType.RequestType request_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::request_response::RequestResponseDataType_RequestType_IsValid(value)) {
            set_request_type(static_cast< ::request_response::RequestResponseDataType_RequestType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .request_response.TargetCrvuePointType target_curve_points = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_target_curve_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .COWA.NavMsg.VehicleDrive.DrivingMode auto_drive_mode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::COWA::NavMsg::VehicleDrive_DrivingMode_IsValid(value)) {
            set_auto_drive_mode(static_cast< ::COWA::NavMsg::VehicleDrive_DrivingMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string camera_channel_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_channel_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_channel_name().data(), this->camera_channel_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "request_response.RequestResponseDataType.camera_channel_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string origin_point_cloud_channel_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_origin_point_cloud_channel_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->origin_point_cloud_channel_name().data(), this->origin_point_cloud_channel_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "request_response.RequestResponseDataType.origin_point_cloud_channel_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .request_response.ResponseStatusType response_status = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_response.RequestResponseDataType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_response.RequestResponseDataType)
  return false;
#undef DO_
}

void RequestResponseDataType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_response.RequestResponseDataType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 sequence_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sequence_id(), output);
  }

  // required .request_response.RequestResponseDataType.RequestType request_type = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->request_type(), output);
  }

  // repeated .request_response.TargetCrvuePointType target_curve_points = 4;
  for (unsigned int i = 0, n = this->target_curve_points_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->target_curve_points(i), output);
  }

  // optional .COWA.NavMsg.VehicleDrive.DrivingMode auto_drive_mode = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->auto_drive_mode(), output);
  }

  // optional string camera_channel_name = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_channel_name().data(), this->camera_channel_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request_response.RequestResponseDataType.camera_channel_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->camera_channel_name(), output);
  }

  // optional string origin_point_cloud_channel_name = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->origin_point_cloud_channel_name().data(), this->origin_point_cloud_channel_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request_response.RequestResponseDataType.origin_point_cloud_channel_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->origin_point_cloud_channel_name(), output);
  }

  // optional .request_response.ResponseStatusType response_status = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->response_status_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_response.RequestResponseDataType)
}

::google::protobuf::uint8* RequestResponseDataType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_response.RequestResponseDataType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 sequence_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sequence_id(), target);
  }

  // required .request_response.RequestResponseDataType.RequestType request_type = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->request_type(), target);
  }

  // repeated .request_response.TargetCrvuePointType target_curve_points = 4;
  for (unsigned int i = 0, n = this->target_curve_points_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->target_curve_points(i), deterministic, target);
  }

  // optional .COWA.NavMsg.VehicleDrive.DrivingMode auto_drive_mode = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->auto_drive_mode(), target);
  }

  // optional string camera_channel_name = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_channel_name().data(), this->camera_channel_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request_response.RequestResponseDataType.camera_channel_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->camera_channel_name(), target);
  }

  // optional string origin_point_cloud_channel_name = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->origin_point_cloud_channel_name().data(), this->origin_point_cloud_channel_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request_response.RequestResponseDataType.origin_point_cloud_channel_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->origin_point_cloud_channel_name(), target);
  }

  // optional .request_response.ResponseStatusType response_status = 8;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->response_status_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_response.RequestResponseDataType)
  return target;
}

size_t RequestResponseDataType::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:request_response.RequestResponseDataType)
  size_t total_size = 0;

  if (has_sequence_id()) {
    // required uint64 sequence_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence_id());
  }

  if (has_request_type()) {
    // required .request_response.RequestResponseDataType.RequestType request_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->request_type());
  }

  return total_size;
}
size_t RequestResponseDataType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_response.RequestResponseDataType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000018) ^ 0x00000018) == 0) {  // All required fields are present.
    // required uint64 sequence_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence_id());

    // required .request_response.RequestResponseDataType.RequestType request_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->request_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .request_response.TargetCrvuePointType target_curve_points = 4;
  {
    unsigned int count = this->target_curve_points_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->target_curve_points(i));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string camera_channel_name = 6;
    if (has_camera_channel_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->camera_channel_name());
    }

    // optional string origin_point_cloud_channel_name = 7;
    if (has_origin_point_cloud_channel_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->origin_point_cloud_channel_name());
    }

    // optional .request_response.ResponseStatusType response_status = 8;
    if (has_response_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->response_status_);
    }

  }
  // optional .COWA.NavMsg.VehicleDrive.DrivingMode auto_drive_mode = 5;
  if (has_auto_drive_mode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->auto_drive_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestResponseDataType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_response.RequestResponseDataType)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestResponseDataType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestResponseDataType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_response.RequestResponseDataType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_response.RequestResponseDataType)
    MergeFrom(*source);
  }
}

void RequestResponseDataType::MergeFrom(const RequestResponseDataType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_response.RequestResponseDataType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  target_curve_points_.MergeFrom(from.target_curve_points_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_camera_channel_name();
      camera_channel_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_channel_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_origin_point_cloud_channel_name();
      origin_point_cloud_channel_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_point_cloud_channel_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_response_status()->::request_response::ResponseStatusType::MergeFrom(from.response_status());
    }
    if (cached_has_bits & 0x00000008u) {
      sequence_id_ = from.sequence_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      request_type_ = from.request_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      auto_drive_mode_ = from.auto_drive_mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RequestResponseDataType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_response.RequestResponseDataType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestResponseDataType::CopyFrom(const RequestResponseDataType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_response.RequestResponseDataType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestResponseDataType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000018) != 0x00000018) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->target_curve_points())) return false;
  if (has_response_status()) {
    if (!this->response_status_->IsInitialized()) return false;
  }
  return true;
}

void RequestResponseDataType::Swap(RequestResponseDataType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestResponseDataType::InternalSwap(RequestResponseDataType* other) {
  target_curve_points_.InternalSwap(&other->target_curve_points_);
  camera_channel_name_.Swap(&other->camera_channel_name_);
  origin_point_cloud_channel_name_.Swap(&other->origin_point_cloud_channel_name_);
  std::swap(response_status_, other->response_status_);
  std::swap(sequence_id_, other->sequence_id_);
  std::swap(request_type_, other->request_type_);
  std::swap(auto_drive_mode_, other->auto_drive_mode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestResponseDataType::GetMetadata() const {
  protobuf_request_5fresponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_request_5fresponse_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestResponseDataType

// required uint64 sequence_id = 1;
bool RequestResponseDataType::has_sequence_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RequestResponseDataType::set_has_sequence_id() {
  _has_bits_[0] |= 0x00000008u;
}
void RequestResponseDataType::clear_has_sequence_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void RequestResponseDataType::clear_sequence_id() {
  sequence_id_ = GOOGLE_ULONGLONG(0);
  clear_has_sequence_id();
}
::google::protobuf::uint64 RequestResponseDataType::sequence_id() const {
  // @@protoc_insertion_point(field_get:request_response.RequestResponseDataType.sequence_id)
  return sequence_id_;
}
void RequestResponseDataType::set_sequence_id(::google::protobuf::uint64 value) {
  set_has_sequence_id();
  sequence_id_ = value;
  // @@protoc_insertion_point(field_set:request_response.RequestResponseDataType.sequence_id)
}

// required .request_response.RequestResponseDataType.RequestType request_type = 2;
bool RequestResponseDataType::has_request_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RequestResponseDataType::set_has_request_type() {
  _has_bits_[0] |= 0x00000010u;
}
void RequestResponseDataType::clear_has_request_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void RequestResponseDataType::clear_request_type() {
  request_type_ = 0;
  clear_has_request_type();
}
::request_response::RequestResponseDataType_RequestType RequestResponseDataType::request_type() const {
  // @@protoc_insertion_point(field_get:request_response.RequestResponseDataType.request_type)
  return static_cast< ::request_response::RequestResponseDataType_RequestType >(request_type_);
}
void RequestResponseDataType::set_request_type(::request_response::RequestResponseDataType_RequestType value) {
  assert(::request_response::RequestResponseDataType_RequestType_IsValid(value));
  set_has_request_type();
  request_type_ = value;
  // @@protoc_insertion_point(field_set:request_response.RequestResponseDataType.request_type)
}

// repeated .request_response.TargetCrvuePointType target_curve_points = 4;
int RequestResponseDataType::target_curve_points_size() const {
  return target_curve_points_.size();
}
void RequestResponseDataType::clear_target_curve_points() {
  target_curve_points_.Clear();
}
const ::request_response::TargetCrvuePointType& RequestResponseDataType::target_curve_points(int index) const {
  // @@protoc_insertion_point(field_get:request_response.RequestResponseDataType.target_curve_points)
  return target_curve_points_.Get(index);
}
::request_response::TargetCrvuePointType* RequestResponseDataType::mutable_target_curve_points(int index) {
  // @@protoc_insertion_point(field_mutable:request_response.RequestResponseDataType.target_curve_points)
  return target_curve_points_.Mutable(index);
}
::request_response::TargetCrvuePointType* RequestResponseDataType::add_target_curve_points() {
  // @@protoc_insertion_point(field_add:request_response.RequestResponseDataType.target_curve_points)
  return target_curve_points_.Add();
}
::google::protobuf::RepeatedPtrField< ::request_response::TargetCrvuePointType >*
RequestResponseDataType::mutable_target_curve_points() {
  // @@protoc_insertion_point(field_mutable_list:request_response.RequestResponseDataType.target_curve_points)
  return &target_curve_points_;
}
const ::google::protobuf::RepeatedPtrField< ::request_response::TargetCrvuePointType >&
RequestResponseDataType::target_curve_points() const {
  // @@protoc_insertion_point(field_list:request_response.RequestResponseDataType.target_curve_points)
  return target_curve_points_;
}

// optional .COWA.NavMsg.VehicleDrive.DrivingMode auto_drive_mode = 5;
bool RequestResponseDataType::has_auto_drive_mode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RequestResponseDataType::set_has_auto_drive_mode() {
  _has_bits_[0] |= 0x00000020u;
}
void RequestResponseDataType::clear_has_auto_drive_mode() {
  _has_bits_[0] &= ~0x00000020u;
}
void RequestResponseDataType::clear_auto_drive_mode() {
  auto_drive_mode_ = 0;
  clear_has_auto_drive_mode();
}
::COWA::NavMsg::VehicleDrive_DrivingMode RequestResponseDataType::auto_drive_mode() const {
  // @@protoc_insertion_point(field_get:request_response.RequestResponseDataType.auto_drive_mode)
  return static_cast< ::COWA::NavMsg::VehicleDrive_DrivingMode >(auto_drive_mode_);
}
void RequestResponseDataType::set_auto_drive_mode(::COWA::NavMsg::VehicleDrive_DrivingMode value) {
  assert(::COWA::NavMsg::VehicleDrive_DrivingMode_IsValid(value));
  set_has_auto_drive_mode();
  auto_drive_mode_ = value;
  // @@protoc_insertion_point(field_set:request_response.RequestResponseDataType.auto_drive_mode)
}

// optional string camera_channel_name = 6;
bool RequestResponseDataType::has_camera_channel_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RequestResponseDataType::set_has_camera_channel_name() {
  _has_bits_[0] |= 0x00000001u;
}
void RequestResponseDataType::clear_has_camera_channel_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void RequestResponseDataType::clear_camera_channel_name() {
  camera_channel_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_camera_channel_name();
}
const ::std::string& RequestResponseDataType::camera_channel_name() const {
  // @@protoc_insertion_point(field_get:request_response.RequestResponseDataType.camera_channel_name)
  return camera_channel_name_.GetNoArena();
}
void RequestResponseDataType::set_camera_channel_name(const ::std::string& value) {
  set_has_camera_channel_name();
  camera_channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:request_response.RequestResponseDataType.camera_channel_name)
}
#if LANG_CXX11
void RequestResponseDataType::set_camera_channel_name(::std::string&& value) {
  set_has_camera_channel_name();
  camera_channel_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:request_response.RequestResponseDataType.camera_channel_name)
}
#endif
void RequestResponseDataType::set_camera_channel_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_camera_channel_name();
  camera_channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:request_response.RequestResponseDataType.camera_channel_name)
}
void RequestResponseDataType::set_camera_channel_name(const char* value, size_t size) {
  set_has_camera_channel_name();
  camera_channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:request_response.RequestResponseDataType.camera_channel_name)
}
::std::string* RequestResponseDataType::mutable_camera_channel_name() {
  set_has_camera_channel_name();
  // @@protoc_insertion_point(field_mutable:request_response.RequestResponseDataType.camera_channel_name)
  return camera_channel_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestResponseDataType::release_camera_channel_name() {
  // @@protoc_insertion_point(field_release:request_response.RequestResponseDataType.camera_channel_name)
  clear_has_camera_channel_name();
  return camera_channel_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestResponseDataType::set_allocated_camera_channel_name(::std::string* camera_channel_name) {
  if (camera_channel_name != NULL) {
    set_has_camera_channel_name();
  } else {
    clear_has_camera_channel_name();
  }
  camera_channel_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), camera_channel_name);
  // @@protoc_insertion_point(field_set_allocated:request_response.RequestResponseDataType.camera_channel_name)
}

// optional string origin_point_cloud_channel_name = 7;
bool RequestResponseDataType::has_origin_point_cloud_channel_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RequestResponseDataType::set_has_origin_point_cloud_channel_name() {
  _has_bits_[0] |= 0x00000002u;
}
void RequestResponseDataType::clear_has_origin_point_cloud_channel_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void RequestResponseDataType::clear_origin_point_cloud_channel_name() {
  origin_point_cloud_channel_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_origin_point_cloud_channel_name();
}
const ::std::string& RequestResponseDataType::origin_point_cloud_channel_name() const {
  // @@protoc_insertion_point(field_get:request_response.RequestResponseDataType.origin_point_cloud_channel_name)
  return origin_point_cloud_channel_name_.GetNoArena();
}
void RequestResponseDataType::set_origin_point_cloud_channel_name(const ::std::string& value) {
  set_has_origin_point_cloud_channel_name();
  origin_point_cloud_channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:request_response.RequestResponseDataType.origin_point_cloud_channel_name)
}
#if LANG_CXX11
void RequestResponseDataType::set_origin_point_cloud_channel_name(::std::string&& value) {
  set_has_origin_point_cloud_channel_name();
  origin_point_cloud_channel_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:request_response.RequestResponseDataType.origin_point_cloud_channel_name)
}
#endif
void RequestResponseDataType::set_origin_point_cloud_channel_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_origin_point_cloud_channel_name();
  origin_point_cloud_channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:request_response.RequestResponseDataType.origin_point_cloud_channel_name)
}
void RequestResponseDataType::set_origin_point_cloud_channel_name(const char* value, size_t size) {
  set_has_origin_point_cloud_channel_name();
  origin_point_cloud_channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:request_response.RequestResponseDataType.origin_point_cloud_channel_name)
}
::std::string* RequestResponseDataType::mutable_origin_point_cloud_channel_name() {
  set_has_origin_point_cloud_channel_name();
  // @@protoc_insertion_point(field_mutable:request_response.RequestResponseDataType.origin_point_cloud_channel_name)
  return origin_point_cloud_channel_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestResponseDataType::release_origin_point_cloud_channel_name() {
  // @@protoc_insertion_point(field_release:request_response.RequestResponseDataType.origin_point_cloud_channel_name)
  clear_has_origin_point_cloud_channel_name();
  return origin_point_cloud_channel_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestResponseDataType::set_allocated_origin_point_cloud_channel_name(::std::string* origin_point_cloud_channel_name) {
  if (origin_point_cloud_channel_name != NULL) {
    set_has_origin_point_cloud_channel_name();
  } else {
    clear_has_origin_point_cloud_channel_name();
  }
  origin_point_cloud_channel_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin_point_cloud_channel_name);
  // @@protoc_insertion_point(field_set_allocated:request_response.RequestResponseDataType.origin_point_cloud_channel_name)
}

// optional .request_response.ResponseStatusType response_status = 8;
bool RequestResponseDataType::has_response_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RequestResponseDataType::set_has_response_status() {
  _has_bits_[0] |= 0x00000004u;
}
void RequestResponseDataType::clear_has_response_status() {
  _has_bits_[0] &= ~0x00000004u;
}
void RequestResponseDataType::clear_response_status() {
  if (response_status_ != NULL) response_status_->::request_response::ResponseStatusType::Clear();
  clear_has_response_status();
}
const ::request_response::ResponseStatusType& RequestResponseDataType::response_status() const {
  // @@protoc_insertion_point(field_get:request_response.RequestResponseDataType.response_status)
  return response_status_ != NULL ? *response_status_
                         : *::request_response::ResponseStatusType::internal_default_instance();
}
::request_response::ResponseStatusType* RequestResponseDataType::mutable_response_status() {
  set_has_response_status();
  if (response_status_ == NULL) {
    response_status_ = new ::request_response::ResponseStatusType;
  }
  // @@protoc_insertion_point(field_mutable:request_response.RequestResponseDataType.response_status)
  return response_status_;
}
::request_response::ResponseStatusType* RequestResponseDataType::release_response_status() {
  // @@protoc_insertion_point(field_release:request_response.RequestResponseDataType.response_status)
  clear_has_response_status();
  ::request_response::ResponseStatusType* temp = response_status_;
  response_status_ = NULL;
  return temp;
}
void RequestResponseDataType::set_allocated_response_status(::request_response::ResponseStatusType* response_status) {
  delete response_status_;
  response_status_ = response_status;
  if (response_status) {
    set_has_response_status();
  } else {
    clear_has_response_status();
  }
  // @@protoc_insertion_point(field_set_allocated:request_response.RequestResponseDataType.response_status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace request_response

// @@protoc_insertion_point(global_scope)
